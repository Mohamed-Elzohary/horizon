{"version":3,"sources":["firebase/firebase.js","views/UploadImg/UploadImg.jsx","reusable/Accordion/Chevron.jsx","reusable/Accordion/Accordion.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/pages/landing/TechnicalInfo.jsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","UploadImg","useState","image","setImage","url","setUrl","progress","setProgress","uploaded","setUploaded","uploadBtnStateDisable","setUploadBtnStateDisable","copied","setCopied","visible","setVisible","className","onClick","show","style","width","color","duration","value","max","type","onChange","e","target","files","newDate","Date","date","getDate","month","getMonth","year","getFullYear","time","getTime","ref","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","img_url","axios","post","SERVER_URI","res","disabled","navigator","clipboard","writeText","src","alt","Chevron","props","height","xmlns","viewBox","fill","d","Accordion","setActive","setActiveState","setHeight","setHeightState","setRotate","setRotateState","content","useRef","current","scrollHeight","title","maxHeight","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","TechnicalInfo","state","activeKey","edited","submitClass","submitDisable","ti_section_display","ti_header","ti_desc","ti_items","item_title","item_content","onChangeItem","bind","toggleCheckbox","onSubmit","get","response","data","setState","catch","preventDefault","this","prog_section","i","prevState","listItems","map","item","item_i","id","placeholder","event","autohide","fade","header","dismissible","fixedToasts","xs","href","role","checked","readOnly","Component"],"mappings":"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","file":"static/js/14.6b564d7a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCY6qtpw2i46AkPKvTeDy5iAVyaxJhoLoI\",\r\n  authDomain: \"horizon-28ad8.firebaseapp.com\",\r\n  projectId: \"horizon-28ad8\",\r\n  storageBucket: \"horizon-28ad8.appspot.com\",\r\n  messagingSenderId: \"533324209164\",\r\n  appId: \"1:533324209164:web:39aadbbdd96501a872a229\",\r\n  measurementId: \"G-GLCDCLKPEN\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst storage = firebase.storage();\r\n\r\nexport { storage, firebase as default }","import React, { useState } from \"react\";\nimport { storage } from \"../../firebase/firebase\";\n\nimport {\n  CCollapse,\n  CCard,\n  CCardBody,\n  CCardText,\n  CCardTitle,\n  CListGroupItem,\n  CButton,\n  CAlert,\n  CProgress,\n  CProgressBar\n} from \"@coreui/react\";\n\nimport axios from \"axios\";\nimport FlashMessage from 'react-flash-message'\n\nimport SERVER_URI from \"../../reusable/api\";\n\nconst UploadImg = () => {\n  const [image, setImage] = useState(null);\n  const [url, setUrl] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n  const [uploaded, setUploaded] = useState('false')\n  const [uploadBtnStateDisable, setUploadBtnStateDisable] = useState(true)\n  const [copied, setCopied] = useState('false')\n  const [visible, setVisible] = useState(false)\n\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n      setUploadBtnStateDisable(false)\n    }\n  };\n\n  const handleUpload = () => {\n    let newDate = new Date()\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n    let time = new Date().getTime();\n\n    let timeNow = `${date}${month}${year}T${time}`;\n\n    setUploaded('false');\n\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n\n    uploadTask.on(\n      \"state_changed\",\n      snapshot => {\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        setProgress(progress);\n      },\n\n      error => {\n        console.log(error);\n      },\n\n      () => {\n        storage\n          .ref(\"images\")\n          .child(image.name)\n          .getDownloadURL()\n          .then(url => {\n            setUrl(url);\n            console.log(\"image: \", image);\n            console.log(\"URL: \" + url);\n\n            const img_url = {\n              url: url\n            };\n\n            axios.post(`${SERVER_URI}/api/postImgToGallery`, img_url)\n              .then(res => console.log(res));\n\n            setUploaded('true')\n            setUploadBtnStateDisable(true)\n\n            // window.location = `${ADMIN_URI}/#/landing/progDesigns/`;\n          });\n      }\n    );\n  };\n\n  const copyToCLip = () => {\n    setCopied('false')\n    navigator.clipboard.writeText(url)\n    console.log(url);\n    setCopied('true')\n  }\n\n  const toggleUpload = () => {\n    setVisible(!visible);\n  }\n\n  return (\n    <div>\n      <CButton className='btn-primary' onClick={toggleUpload}>Upload Image</CButton>\n      <br /><br />\n      <CCollapse show={visible}>\n        <CCard className=\"mt-3\">\n          <CCardBody>\n\n            <CCard style={{ width: '50vw' }}>\n              {\n                (uploaded === 'true') ?\n                  <div>\n                    <CAlert\n                      width=\"1\"\n                      color=\"success\"\n                    >\n                      <strong>Uploaded</strong> Successfully...\n              </CAlert>\n\n                    <FlashMessage duration={3000}>\n                      Uploaded Successfully...\n            </FlashMessage>\n                  </div>\n                  :\n                  <p></p>\n              }\n              <CCardBody>\n                <CCardTitle>Upload Image</CCardTitle>\n\n                <CListGroupItem>\n                  <CProgress className=\"mb-3\">\n                    <CProgressBar value={progress}></CProgressBar>\n                  </CProgress>\n                  <progress value={progress} max=\"100\" />\n                </CListGroupItem>\n\n\n                <CListGroupItem>\n                  <input type=\"file\" onChange={handleChange} />\n                  <CButton  color=\"secondary\" onClick={handleUpload} disabled={uploadBtnStateDisable}>Upload</CButton>\n                  <CCardText>\n                    <strong> Image URL: </strong>\n                    {url}\n                  </CCardText>\n                </CListGroupItem>\n\n                <CListGroupItem>\n                  {\n                    (copied === 'true') ?\n                      <div>\n                        <FlashMessage duration={2000}>\n                          Copied To Clipboard...\n            </FlashMessage>\n                      </div>\n                      :\n                      <p></p>\n                  }\n                  <CButton color=\"secondary\" onClick={copyToCLip}>Copy Image URL to Clipboard</CButton>\n                </CListGroupItem>\n              </CCardBody>\n            </CCard>\n\n            <img className=\"uploadedImg\" src={url || \"http://via.placeholder.com/300\"} alt=\"firebase-image\" />\n\n          </CCardBody>\n        </CCard>\n      </CCollapse>\n    </div>\n  );\n};\n\nexport default UploadImg\n","import React from \"react\";\r\n\r\nfunction Chevron(props) {\r\n    return (\r\n        <svg\r\n            className={props.className}\r\n            height={props.height}\r\n            width={props.width}\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 320 512\"\r\n        >\r\n            <path\r\n                fill={props.fill}\r\n                d=\"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z\"\r\n            />\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default Chevron;\r\n","import React, { useState, useRef } from \"react\";\r\nimport Chevron from \"./Chevron\";\r\n\r\nimport \"./Accordion.css\";\r\n\r\nfunction Accordion(props) {\r\n  const [setActive, setActiveState] = useState(\"\");\r\n  const [setHeight, setHeightState] = useState(\"0px\");\r\n  const [setRotate, setRotateState] = useState(\"accordion__icon\");\r\n\r\n  const content = useRef(null);\r\n\r\n  function toggleAccordion() {\r\n    setActiveState(setActive === \"\" ? \"active\" : \"\");\r\n    setHeightState(\r\n      setActive === \"active\" ? \"0px\" : `${content.current.scrollHeight}px`\r\n    );\r\n    setRotateState(\r\n      setActive === \"active\" ? \"accordion__icon\" : \"accordion__icon rotate\"\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"accordion__section\">\r\n\r\n      <button type='button' className={`accordion ${setActive}`} onClick={toggleAccordion}>\r\n        <p className=\"accordion__title\">{props.title}</p>\r\n        <Chevron className={`${setRotate}`} width={10} fill={\"#777\"} />\r\n      </button>\r\n\r\n      <div\r\n        ref={content}\r\n        style={{ maxHeight: `${setHeight}` }}\r\n        className=\"accordion__content\"\r\n      >\r\n        {/* <div\r\n          className=\"accordion__text\"\r\n          dangerouslySetInnerHTML={{ __html: props.content }}\r\n        /> */}\r\n\r\n        <div className=\"accordion__text\">\r\n          {props.content}\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Accordion;\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { Component } from \"react\";\n\nimport {\n  CForm,\n  CInput,\n  CFormGroup,\n  CCol,\n  CRow,\n  CAlert,\n  CInputGroupText,\n  CInputGroup,\n  CToaster,\n  CToast,\n} from \"@coreui/react\";\n\nimport Accordion from \"../../../reusable/Accordion/Accordion\";\n\nimport UploadImg from \"../../UploadImg/UploadImg\";\n\nimport axios from \"axios\";\nimport FlashMessage from 'react-flash-message'\n\nimport SERVER_URI from \"../../../reusable/api\";\n\nclass TechnicalInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeKey: 0,\n      edited: false,\n      submitClass: 'disabled',\n      submitDisable: true,\n\n      ti_section_display: true,\n      ti_header: \"...\",\n      ti_desc: \"...\",\n      ti_items: [{\n        item_title: \"...\",\n        item_content: \"...\"\n      }]\n    };\n\n    this.onChangeItem = this.onChangeItem.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.toggleCheckbox = this.toggleCheckbox.bind(this);\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n\n  componentDidMount() {\n    axios\n      .get(`${SERVER_URI}/api/getTechnicalInfo`)\n      .then((response) => {\n        const {\n          ti_section_display,\n          ti_header,\n          ti_desc,\n          ti_items,\n        } = response.data;\n        this.setState({\n          ti_section_display: ti_section_display,\n          ti_header: ti_header,\n          ti_desc: ti_desc,\n          ti_items: ti_items,\n        });\n\n        console.log(\"REQ_STATE:: \", this.state);\n        console.log(\"______________________________________\");\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    // console.log(this.state);\n\n    if (!this.state.submitDisable) {\n      const prog_section = {\n        ti_section_display: this.state.ti_section_display,\n        ti_header: this.state.ti_header,\n        ti_desc: this.state.ti_desc,\n        ti_items: this.state.ti_items,\n      };\n\n      console.log(\"POST_STATE:: \", prog_section);\n\n      axios.post(`${SERVER_URI}/api/postTechnicalInfo`, prog_section)\n        .then(res => console.log(res));\n\n      // window.location = `${ADMIN_URI}/#/landing/TechnicalInfo/`;\n      this.setState({ edited: true, submitClass: 'disabled', submitDisable: true, })\n\n    }\n  }\n\n  onChange(e) {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n      submitClass: 'primary',\n      submitDisable: false,\n      edited: false,\n    })\n    // console.log(this.state);\n  }\n\n  onChangeItem(e, i) {\n    const { value, name } = e.target;\n    // console.log('NAME:: ', name);\n    // console.log('VALUE:: ', value);\n    // console.log('_____________________________________');\n\n    this.setState(prevState => {\n      const ti_items = [...prevState.ti_items]\n\n      ti_items[i] = {\n        ...ti_items[i],\n        [name]: value\n      }\n\n      return {\n        submitClass: 'primary',\n        submitDisable: false,\n        edited: false,\n        ti_items,\n      }\n    })\n\n    // console.log(this.state.ti_items[i]);\n    // console.log(this.state);\n  }\n\n  toggleCheckbox(e) {\n    e.preventDefault();\n    this.setState({\n      ti_section_display: !this.state.ti_section_display,\n      submitClass: 'primary',\n      submitDisable: false,\n      edited: false,\n    });\n  }\n\n  render() {\n    let listItems = this.state.ti_items.map((item, item_i) =>\n      <div key={item_i}>\n        <Accordion\n          title=\"Item Info\"\n          content={\n            <div>\n              {/* INPUT #1 item Title */}\n              <CInput\n                type=\"text\"\n                id=\"item_title\"\n                name=\"item_title\"\n                placeholder=\"item_title\"\n                value={item.item_title}\n                onChange={event => this.onChangeItem(event, item_i)}\n              />\n              <br />\n              {/* INPUT #2 item Number */}\n              <CInput\n                type=\"text\"\n                id=\"item_content\"\n                name=\"item_content\"\n                placeholder=\"item_content\"\n                value={item.item_content}\n                onChange={event => this.onChangeItem(event, item_i)}\n              />\n              <br />\n            </div>\n          }\n        />\n        <hr />\n      </div>\n    )\n    return (\n      <CRow>\n        {\n          (this.state.edited === true) ?\n            <div>\n              <FlashMessage duration={3000}>\n              </FlashMessage>\n              <CToaster>\n                <CToast\n                  key={this.state.fixedToasts}\n                  show={true}\n                  autohide={1000}\n                  fade={true}\n                  header=\"CToast fixed component\"\n                >\n                  <CAlert\n                    width=\"1\"\n                    color=\"success\"\n                    dismissible={`${true}`}\n                  >\n                    <strong>Updated</strong> Successfully...\n                    </CAlert>\n                </CToast>\n              </CToaster >\n            </div>\n            :\n            <p></p>\n        }\n\n        <CCol xs=\"12\">\n          <CForm onSubmit={this.onSubmit}>\n            <CFormGroup>\n              {/* #1 */}\n              {/* Checkbox to Toggle Sections */}\n              <h4>{this.state.ti_section_display ? \"Show\" : \"hide\"}</h4>\n              <a href=\"#\" role=\"button\" onClick={this.toggleCheckbox}>\n                <input\n                  type=\"checkbox\"\n                  title=\"ti_section_display\"\n                  name=\"ti_section_display\"\n                  checked={this.state.ti_section_display}\n                  readOnly\n                />_Show Section</a>\n            </CFormGroup>\n\n            <CFormGroup>\n              {/* #1 Section Header */}\n              <h6>{this.state.ti_header}</h6>\n              <CInput\n                type=\"text\"\n                id='ti_header'\n                name='ti_header'\n                placeholder=\"ti_header\"\n                value={this.state.ti_header}\n                onChange={this.onChange}\n              />\n              <br />\n              <CInput\n                type=\"text\"\n                id=\"ti_desc\"\n                name=\"ti_desc\"\n                placeholder=\"ti_desc\"\n                value={this.state.ti_desc}\n                onChange={this.onChange}\n              />\n              <hr />\n              {/* {this.state.ti_items[0].sub_header} */}\n\n              {listItems}\n\n            </CFormGroup>\n            <br />\n            <CFormGroup>\n              <CInput\n                type=\"submit\"\n                id=\"submit\"\n                name=\"submit\"\n                placeholder=\"submit\"\n                className={`bg-${this.state.submitClass} text-white bold`}\n                value=\"SUBMIT\"\n                disabled={this.state.submitDisable}\n              />\n            </CFormGroup>\n          </CForm>\n        </CCol>\n\n        <br />\n        <br /><br />\n        <hr />\n\n        <UploadImg />\n      </CRow>\n    );\n  }\n}\n\nexport default TechnicalInfo;\n"],"sourceRoot":""}