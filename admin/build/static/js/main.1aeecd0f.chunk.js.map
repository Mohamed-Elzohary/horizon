{"version":3,"sources":["views/widgets/WidgetsBrand.js","views/widgets/WidgetsDropdown.js","polyfill.js","views/charts/ChartLineSimple.js","firebase/firebase.js","services/Auth.js","routes/PrivateRoute.js","views/charts/MainChartExample.js","reusable/Accordion/Chevron.jsx","reusable/Accordion/Accordion.jsx","reusable/api.js","views/UploadImg/UploadImg.jsx","views/Gallery/Gallery.jsx","views/pages/landing/News.jsx","views/mailing/MailingList.js","views/pages/landing/Hero.jsx","routes.js","views/pages/landing/About.jsx","views/pages/landing/LensDesigns1.jsx","views/pages/landing/LensInfo1.jsx","views/pages/landing/LensInfo3.jsx","views/pages/landing/LensDesigns2.jsx","views/pages/landing/LensInfo2.jsx","views/pages/landing/LensDesigns3.jsx","views/pages/landing/WatchVideo.jsx","views/pages/landing/Screenshots.jsx","views/pages/landing/ProductionInfo.jsx","views/pages/landing/TechnicalInfo.jsx","containers/TheContent.js","containers/TheFooter.js","views/Preview/Preview.js","containers/TheHeader.js","containers/_nav.js","containers/TheSidebar.js","containers/TheLayout.js","views/pages/login/Login.js","App.js","serviceWorker.js","assets/icons/sygnet.js","assets/icons/index.js","assets/icons/logo.js","assets/icons/logo-negative.js","store.js","index.js","views/charts/ChartBarSimple.js"],"names":["WidgetsBrand","withCharts","sm","lg","color","rightHeader","rightFooter","leftHeader","leftFooter","name","height","className","backgroundColor","dataPoints","label","labels","WidgetsDropdown","header","text","footerSlot","pointed","style","pointHoverBackgroundColor","placement","disabled","options","elements","line","tension","caret","borderWidth","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","prototype","Event","Element","matches","msMatchesSelector","webkitMatchesSelector","closest","s","el","this","call","parentElement","parentNode","nodeType","ChartLineSimple","props","borderColor","attributes","pointHoverColor","defaultDatasets","data","getColor","pointBackgroundColor","pointedOptions","scales","xAxes","offset","gridLines","zeroLineColor","ticks","fontSize","fontColor","yAxes","display","min","Math","apply","max","point","radius","hitRadius","hoverRadius","straightOptions","defaultOptions","Object","assign","maintainAspectRatio","legend","computedDatasets","deepObjectsMerge","datasets","computedOptions","defaultProps","firebase_app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","pending","setPending","useEffect","auth","onAuthStateChanged","user","Provider","value","PrivateRoute","RouteComponent","component","rest","useContext","routeProps","to","getStyle","Chevron","width","xmlns","viewBox","fill","d","Accordion","setActive","setActiveState","setHeight","setHeightState","setRotate","setRotateState","content","useRef","type","onClick","current","scrollHeight","title","ref","maxHeight","SERVER_URI","UploadImg","image","setImage","url","setUrl","progress","setProgress","uploaded","setUploaded","uploadBtnStateDisable","setUploadBtnStateDisable","copied","setCopied","visible","setVisible","show","duration","onChange","e","target","files","newDate","Date","date","getDate","month","getMonth","year","getFullYear","time","getTime","put","on","snapshot","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","img_url","axios","post","res","navigator","clipboard","writeText","src","alt","Gallery","Component","getGallery","get","response","gallery","lista","map","img","push","setState","imgs","state","catch","copyToCLip","id","listImgs","thumbnail","_id","autohide","fade","dismissible","fixedToasts","edited","xs","MailingList","getMailList","mailing_list","mail","mail_email","mailingList","key","tableItems","item","row","filename","xl","items","fields","_classes","hover","striped","itemsPerPage","clickableRows","require","routes","path","exact","loading","TheContent","fluid","fallback","route","idx","from","memo","TheFooter","fixed","href","rel","demos","horizon","Iframe","dangerouslySetInnerHTML","__html","iframe","Preview","allow","TheHeader","dispatch","useDispatch","sidebarShow","useSelector","modal","setModal","toggle","withSubheader","inHeader","val","includes","signOut","size","onClose","closeButton","_nav","_tag","_children","addLinkClass","icon","TheSidebar","onShowChange","navigation","components","CSidebarNavDivider","CSidebarNavDropdown","CSidebarNavItem","CSidebarNavTitle","TheLayout","withRouter","history","handleLogin","useCallback","a","preventDefault","email","password","signInWithEmailAndPassword","alert","md","onSubmit","placeholder","autoComplete","App","Login","Boolean","location","hostname","match","icons","sygnet","logo","logoNegative","cilAlignCenter","cilAlignLeft","cilAlignRight","cilApplicationsSettings","cilArrowRight","cilArrowTop","cilAsterisk","cilBan","cilBasket","cilBell","cilBold","cilBookmark","cilCalculator","cilCalendar","cilCloudDownload","cilChartPie","cilCheck","cilChevronBottom","cilChevronLeft","cilChevronRight","cilChevronTop","cilCircle","cilCheckCircle","cilCode","cilCommentSquare","cilCreditCard","cilCursor","cilCursorMove","cilDrop","cilDollar","cilEnvelopeClosed","cilEnvelopeLetter","cilEnvelopeOpen","cilEuro","cilGlobeAlt","cilGrid","cilFile","cilFullscreen","cilFullscreenExit","cilGraph","cilHome","cilInbox","cilIndentDecrease","cilIndentIncrease","cilInputPower","cilItalic","cilJustifyCenter","cilJustifyLeft","cilLaptop","cilLayers","cilLightbulb","cilList","cilListNumbered","cilListRich","cilLocationPin","cilLockLocked","cilMagnifyingGlass","cilMap","cilMoon","cilNotes","cilOptions","cilPaperclip","cilPaperPlane","cilPencil","cilPeople","cilPhone","cilPrint","cilPuzzle","cilSave","cilScrubber","cilSettings","cilShare","cilShareAll","cilShareBoxed","cilShieldAlt","cilSpeech","cilSpeedometer","cilSpreadsheet","cilStar","cilSun","cilTags","cilTask","cilTrash","cilUnderline","cilUser","cilUserFemale","cilUserFollow","cilUserUnfollow","cilX","cilXCircle","cilWarning","cifUs","cifBr","cifIn","cifFr","cifEs","cifPl","cibSkype","cibFacebook","cibTwitter","cibLinkedin","cibFlickr","cibTumblr","cibXing","cibGithub","cibStackoverflow","cibYoutube","cibDribbble","cibInstagram","cibPinterest","cibVk","cibYahoo","cibBehance","cibReddit","cibVimeo","cibCcMastercard","cibCcVisa","cibStripe","cibPaypal","cibGooglePay","cibCcAmex","initialState","store","createStore","ReactDOM","render","domain","clientId","redirectUri","getElementById","serviceWorker","ready","registration","unregister","ChartBarSimple","barPercentage","categoryPercentage"],"mappings":"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C,IAAD,CAASpF,KAAK,SAAS/I,MAAM,UAAUO,UAAU,OAAjD,8BASV,cAAC,IAAD,CAAOA,UAAU,4CAA4CU,MAAO,CAAEgH,MAAO,OAA7E,SACE,cAAC,IAAD,CAAW1H,UAAU,cAArB,SACE,0CClCHoT,G,4JApBb,WACE,OACE,cAAC,EAAD,UACE,eAAC,IAAD,WAGM,cAAC,EAAD,CAAclE,KAAK,IAAIpP,KAAK,OAAOqH,UAAWkL,KAC9C,cAAC,IAAD,CAAOnD,KAAK,SAASC,OAAK,EAACrP,KAAK,QAAQqH,UAAWkM,c,GAjC/ChH,aCdEiH,QACW,cAA7BlS,OAAOmS,SAASC,UAEe,UAA7BpS,OAAOmS,SAASC,UAEhBpS,OAAOmS,SAASC,SAASC,MACvB,2DChBC,I,0rCCoIMC,GAAQ9O,OAAOC,OAAO,GAAI,CACrC8O,ODrIoB,CAAC,UAAD,w7BCsIpBC,KCtIkB,CAAC,UAAD,gCDuIlBC,aEvI0B,CAAC,UAAD,4CFwIzB,CACDC,oBACAC,kBACAC,mBACAC,6BACAC,mBACAC,iBACAC,iBACAC,YACAC,eACAC,aACAC,aACAC,iBACAC,mBACAC,iBACAC,sBACAC,iBACAC,cACAC,sBACAC,oBACAC,qBACAC,mBACAC,eACAC,oBACAC,aACAC,sBACAC,mBACAC,eACAC,mBACAC,aACAC,eACAC,uBACAC,uBACAC,qBACAC,aACAC,iBACAC,aACAC,aACAC,mBACAC,uBACAC,cACAC,aACAC,cACAC,uBACAC,uBACAC,mBACAC,eACAC,sBACAC,oBACAC,eACAC,eACAC,kBACAC,aACAC,qBACAC,iBACAC,oBACAC,mBACAC,wBACAC,YACAC,aACAC,cACAC,gBACAC,kBACAC,mBACAC,eACAC,eACAC,cACAC,cACAC,eACAC,aACAC,iBACAC,iBACAC,cACAC,iBACAC,mBACAC,kBACAC,eACAC,oBACAC,oBACAC,aACAC,YACAC,aACAC,aACAC,cACAC,kBACAC,aACAC,mBACAC,mBACAC,qBACAC,UACAC,gBACAC,iBACC,CACDC,WACAC,WACAC,WACAC,WACAC,WACAC,YACC,CACDC,cACAC,iBACAC,gBACAC,iBACAC,eACAC,eACAC,aACAC,eACAC,sBACAC,gBACAC,iBACAC,kBACAC,kBACAC,WACAC,cACAC,gBACAC,eACAC,cACAC,qBACAC,eACAC,eACAC,eACAC,kBACAC,iB,UGjQIC,GAAe,CACnB5K,YAAa,cAaA6K,GADDC,cATM,WAA8C,IAA7CzO,EAA4C,uDAApCuO,GAAoC,yCAApB/S,EAAoB,EAApBA,KAASpB,EAAW,wBAC/D,OAAQoB,GACN,IAAK,MACH,OAAO,2BAAIwE,GAAU5F,GACvB,QACE,OAAO4F,M,UCKb9G,IAAMwN,MAAQA,GAEdgI,IAASC,OACP,cAAC,KAAD,CACEC,OAAO,4BACPC,SAAS,mCACTC,YAAY,gCAHd,SAKE,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJ3Z,SAASka,eAAe,SN6FpB,kBAAmBhQ,WACrBA,UAAUiQ,cAAcC,MAAMvQ,MAAK,SAAAwQ,GACjCA,EAAaC,iB,kFOtHbC,EAAiB,SAAArZ,GAAU,IAG7B9C,EAME8C,EANF9C,gBACAU,EAKEoC,EALFpC,0BACAT,EAIE6C,EAJF7C,WACAC,EAGE4C,EAHF5C,MAEG8C,GACDF,EAFFtC,QAP4B,YAS1BsC,EAT0B,iFAWxBI,EACG,CACL,CACEC,KAAMlD,EACND,gBAAiBoD,mBAASpD,GAC1BU,0BAA2B0C,mBAAS1C,GACpCR,MAAOA,EACPkc,cAAe,GACfC,mBAAoB,IAKpB3X,EACG,CACLG,qBAAqB,EACrBC,OAAQ,CACNd,SAAS,GAEXT,OAAQ,CACNC,MAAO,CAAC,CACNQ,SAAS,IAEXD,MAAO,CAAC,CACNC,SAAS,MAOjB,OACE,cAAC,IAAD,2BACMhB,GADN,IAEEiC,SAAU/B,EACVrC,QAAS6D,EACTvE,OAAQD,MAgBdic,EAAehX,aAAe,CAC5BnF,gBAAiB,iBACjBC,WAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzDC,MAAO,SAGMic,Q","file":"static/js/main.1aeecd0f.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CWidgetBrand, CRow, CCol } from '@coreui/react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport ChartLineSimple from '../charts/ChartLineSimple';\r\n\r\nconst WidgetsBrand = ({withCharts})=>{\r\n\r\n  // render\r\n\r\n  return withCharts ?\r\n  <CRow>\r\n    <CCol sm=\"6\" lg=\"3\">\r\n      <CWidgetBrand\r\n        color=\"facebook\"\r\n        rightHeader=\"89k\"\r\n        rightFooter=\"friends\"\r\n        leftHeader=\"459\"\r\n        leftFooter=\"feeds\"\r\n      >\r\n        <CIcon\r\n          name=\"cib-facebook\"\r\n          height=\"52\"\r\n          className=\"my-4\"\r\n        />\r\n        <ChartLineSimple\r\n          className=\"position-absolute w-100 h-100\"\r\n          backgroundColor=\"rgba(255,255,255,.1)\"\r\n          dataPoints={[65, 59, 84, 84, 51, 55, 40]}\r\n          label=\"Friends\"\r\n          labels=\"months\"\r\n        />\r\n      </CWidgetBrand>\r\n    </CCol>\r\n\r\n    <CCol sm=\"6\" lg=\"3\">\r\n      <CWidgetBrand\r\n        color=\"twitter\"\r\n        rightHeader=\"973k\"\r\n        rightFooter=\"followers\"\r\n        leftHeader=\"1.792\"\r\n        leftFooter=\"tweets\"\r\n      >\r\n        <CIcon\r\n          name=\"cib-twitter\"\r\n          height=\"52\"\r\n          className=\"my-4\"\r\n        />\r\n        <ChartLineSimple\r\n          className=\"position-absolute w-100 h-100\"\r\n          backgroundColor=\"rgba(255,255,255,.1)\"\r\n          dataPoints={[1, 13, 9, 17, 34, 41, 38]}\r\n          label=\"Followers\"\r\n          labels=\"months\"\r\n        />\r\n      </CWidgetBrand>\r\n    </CCol>\r\n\r\n    <CCol sm=\"6\" lg=\"3\">\r\n      <CWidgetBrand\r\n        color=\"linkedin\"\r\n        rightHeader=\"500+\"\r\n        rightFooter=\"contracts\"\r\n        leftHeader=\"292\"\r\n        leftFooter=\"feeds\"\r\n      >\r\n        <CIcon\r\n          name=\"cib-linkedin\"\r\n          height=\"52\"\r\n          className=\"my-4\"\r\n        />\r\n        <ChartLineSimple\r\n          className=\"position-absolute w-100 h-100\"\r\n          backgroundColor=\"rgba(255,255,255,.1)\"\r\n          dataPoints={[78, 81, 80, 45, 34, 12, 40]}\r\n          label=\"Contracts\"\r\n          labels=\"months\"\r\n        />\r\n      </CWidgetBrand>\r\n    </CCol> \r\n\r\n    <CCol sm=\"6\" lg=\"3\">\r\n      <CWidgetBrand\r\n        rightHeader=\"12\"\r\n        rightFooter=\"events\"\r\n        leftHeader=\"4\"\r\n        leftFooter=\"meetings\"\r\n        color=\"gradient-warning\"\r\n      >\r\n        <CIcon\r\n          name=\"cil-calendar\"\r\n          height=\"52\"\r\n          className=\"my-4\"\r\n        />\r\n        <ChartLineSimple\r\n          className=\"position-absolute w-100 h-100\"\r\n          backgroundColor=\"rgba(255,255,255,.1)\"\r\n          dataPoints={[35, 23, 56, 22, 97, 23, 64]}\r\n          label=\"Followers\"\r\n          labels=\"months\"\r\n        />\r\n      </CWidgetBrand>\r\n    </CCol>\r\n  </CRow> :\r\n  \r\n  <CRow>\r\n    <CCol sm=\"6\" lg=\"3\">\r\n      <CWidgetBrand\r\n        color=\"facebook\"\r\n        rightHeader=\"89k\"\r\n        rightFooter=\"friends\"\r\n        leftHeader=\"459\"\r\n        leftFooter=\"feeds\"\r\n      >\r\n        <CIcon\r\n          name=\"cib-facebook\"\r\n          height=\"56\"\r\n          className=\"my-4\"\r\n        />\r\n      </CWidgetBrand>\r\n    </CCol>\r\n\r\n    <CCol sm=\"6\" lg=\"3\">\r\n      <CWidgetBrand\r\n        color=\"twitter\"\r\n        rightHeader=\"973k\"\r\n        rightFooter=\"followers\"\r\n        leftHeader=\"1.792\"\r\n        leftFooter=\"tweets\"\r\n      >\r\n        <CIcon\r\n          name=\"cib-twitter\"\r\n          height=\"56\"\r\n          className=\"my-4\"\r\n        />\r\n      </CWidgetBrand>\r\n    </CCol>\r\n\r\n    <CCol sm=\"6\" lg=\"3\">\r\n      <CWidgetBrand\r\n        color=\"linkedin\"\r\n        rightHeader=\"500+\"\r\n        rightFooter=\"contracts\"\r\n        leftHeader=\"292\"\r\n        leftFooter=\"feeds\"\r\n      >\r\n        <CIcon\r\n          name=\"cib-linkedin\"\r\n          height=\"56\"\r\n          className=\"my-4\"\r\n        />\r\n      </CWidgetBrand>\r\n    </CCol>\r\n\r\n    <CCol sm=\"6\" lg=\"3\">\r\n      <CWidgetBrand\r\n        rightHeader=\"12\"\r\n        rightFooter=\"events\"\r\n        leftHeader=\"4\"\r\n        leftFooter=\"meetings\"\r\n        color=\"gradient-warning\"\r\n      >\r\n        <CIcon\r\n          name=\"cil-calendar\"\r\n          height=\"56\"\r\n          className=\"my-4\"\r\n        />\r\n      </CWidgetBrand>\r\n    </CCol>\r\n  </CRow>\r\n}\r\n\r\nWidgetsBrand.propTypes = {\r\n  withCharts: PropTypes.bool\r\n}\r\n\r\nexport default WidgetsBrand\r\n","import React from 'react'\r\nimport {\r\n  CWidgetDropdown,\r\n  CRow,\r\n  CCol,\r\n  CDropdown,\r\n  CDropdownMenu,\r\n  CDropdownItem,\r\n  CDropdownToggle\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport ChartLineSimple from '../charts/ChartLineSimple'\r\nimport ChartBarSimple from '../charts/ChartBarSimple'\r\n\r\nconst WidgetsDropdown = () => {\r\n  // render\r\n  return (\r\n    <CRow>\r\n      <CCol sm=\"6\" lg=\"3\">\r\n        <CWidgetDropdown\r\n          color=\"gradient-primary\"\r\n          header=\"9.823\"\r\n          text=\"Members online\"\r\n          footerSlot={\r\n            <ChartLineSimple\r\n              pointed\r\n              className=\"c-chart-wrapper mt-3 mx-3\"\r\n              style={{height: '70px'}}\r\n              dataPoints={[65, 59, 84, 84, 51, 55, 40]}\r\n              pointHoverBackgroundColor=\"primary\"\r\n              label=\"Members\"\r\n              labels=\"months\"\r\n            />\r\n          }\r\n        >\r\n          <CDropdown>\r\n            <CDropdownToggle color=\"transparent\">\r\n              <CIcon name=\"cil-settings\"/>\r\n            </CDropdownToggle>\r\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n              <CDropdownItem>Action</CDropdownItem>\r\n              <CDropdownItem>Another action</CDropdownItem>\r\n              <CDropdownItem>Something else here...</CDropdownItem>\r\n              <CDropdownItem disabled>Disabled action</CDropdownItem>\r\n            </CDropdownMenu>\r\n          </CDropdown>\r\n        </CWidgetDropdown>\r\n      </CCol>\r\n\r\n      <CCol sm=\"6\" lg=\"3\">\r\n        <CWidgetDropdown\r\n          color=\"gradient-info\"\r\n          header=\"9.823\"\r\n          text=\"Members online\"\r\n          footerSlot={\r\n            <ChartLineSimple\r\n              pointed\r\n              className=\"mt-3 mx-3\"\r\n              style={{height: '70px'}}\r\n              dataPoints={[1, 18, 9, 17, 34, 22, 11]}\r\n              pointHoverBackgroundColor=\"info\"\r\n              options={{ elements: { line: { tension: 0.00001 }}}}\r\n              label=\"Members\"\r\n              labels=\"months\"\r\n            />\r\n          }\r\n        >\r\n          <CDropdown>\r\n            <CDropdownToggle caret={false} color=\"transparent\">\r\n              <CIcon name=\"cil-location-pin\"/>\r\n            </CDropdownToggle>\r\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n              <CDropdownItem>Action</CDropdownItem>\r\n              <CDropdownItem>Another action</CDropdownItem>\r\n              <CDropdownItem>Something else here...</CDropdownItem>\r\n              <CDropdownItem disabled>Disabled action</CDropdownItem>\r\n            </CDropdownMenu>\r\n          </CDropdown>\r\n        </CWidgetDropdown>\r\n      </CCol>\r\n\r\n      <CCol sm=\"6\" lg=\"3\">\r\n        <CWidgetDropdown\r\n          color=\"gradient-warning\"\r\n          header=\"9.823\"\r\n          text=\"Members online\"\r\n          footerSlot={\r\n            <ChartLineSimple\r\n              className=\"mt-3\"\r\n              style={{height: '70px'}}\r\n              backgroundColor=\"rgba(255,255,255,.2)\"\r\n              dataPoints={[78, 81, 80, 45, 34, 12, 40]}\r\n              options={{ elements: { line: { borderWidth: 2.5 }}}}\r\n              pointHoverBackgroundColor=\"warning\"\r\n              label=\"Members\"\r\n              labels=\"months\"\r\n            />\r\n          }\r\n        >\r\n          <CDropdown>\r\n            <CDropdownToggle color=\"transparent\">\r\n              <CIcon name=\"cil-settings\"/>\r\n            </CDropdownToggle>\r\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n              <CDropdownItem>Action</CDropdownItem>\r\n              <CDropdownItem>Another action</CDropdownItem>\r\n              <CDropdownItem>Something else here...</CDropdownItem>\r\n              <CDropdownItem disabled>Disabled action</CDropdownItem>\r\n            </CDropdownMenu>\r\n          </CDropdown>\r\n        </CWidgetDropdown>\r\n      </CCol>\r\n\r\n      <CCol sm=\"6\" lg=\"3\">\r\n        <CWidgetDropdown\r\n          color=\"gradient-danger\"\r\n          header=\"9.823\"\r\n          text=\"Members online\"\r\n          footerSlot={\r\n            <ChartBarSimple\r\n              className=\"mt-3 mx-3\"\r\n              style={{height: '70px'}}\r\n              backgroundColor=\"rgb(250, 152, 152)\"\r\n              label=\"Members\"\r\n              labels=\"months\"\r\n            />\r\n          }\r\n        >\r\n          <CDropdown>\r\n            <CDropdownToggle caret className=\"text-white\" color=\"transparent\">\r\n              <CIcon name=\"cil-settings\"/>\r\n            </CDropdownToggle>\r\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n              <CDropdownItem>Action</CDropdownItem>\r\n              <CDropdownItem>Another action</CDropdownItem>\r\n              <CDropdownItem>Something else here...</CDropdownItem>\r\n              <CDropdownItem disabled>Disabled action</CDropdownItem>\r\n            </CDropdownMenu>\r\n          </CDropdown>\r\n        </CWidgetDropdown>\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default WidgetsDropdown\r\n","/*\r\n* required polyfills\r\n*/\r\n\r\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\r\n// import \"core-js\";\r\n// import 'core-js/features/symbol'\r\n// import 'core-js/features/object'\r\n// import 'core-js/features/function'\r\n// import 'core-js/features/parse-int'\r\n// import 'core-js/features/parse-float'\r\n// import 'core-js/features/number'\r\n// import 'core-js/features/math'\r\n// import 'core-js/features/string'\r\n// import 'core-js/features/date'\r\n// import 'core-js/features/array'\r\n// import 'core-js/features/regexp'\r\n// import 'core-js/features/map'\r\n// import 'core-js/features/weak-map'\r\n// import 'core-js/features/set'\r\n// import 'core-js/features/set/map';\r\n\r\n/** IE10 and IE11 requires the following for the Reflect API. */\r\n// import 'core-js/features/reflect';\r\n\r\n/** Evergreen browsers require these. **/\r\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\r\n// import 'core-js/features/reflect'\r\n\r\n// CustomEvent() constructor functionality in IE9, IE10, IE11\r\n(function () {\r\n\r\n  if ( typeof window.CustomEvent === \"function\" ) return false\r\n\r\n  function CustomEvent ( event, params ) {\r\n    params = params || { bubbles: false, cancelable: false, detail: undefined }\r\n    var evt = document.createEvent( 'CustomEvent' )\r\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail )\r\n    return evt\r\n  }\r\n\r\n  CustomEvent.prototype = window.Event.prototype\r\n\r\n  window.CustomEvent = CustomEvent\r\n})()\r\n\r\nif (!Element.prototype.matches) {\r\n  Element.prototype.matches =\r\n    Element.prototype.msMatchesSelector ||\r\n    Element.prototype.webkitMatchesSelector;\r\n}\r\n\r\nif (!Element.prototype.closest) {\r\n  Element.prototype.closest = function(s) {\r\n    var el = this;\r\n\r\n    do {\r\n      if (Element.prototype.matches.call(el, s)) return el;\r\n      el = el.parentElement || el.parentNode;\r\n    } while (el !== null && el.nodeType === 1);\r\n    return null;\r\n  };\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { getColor, deepObjectsMerge } from '@coreui/utils'\r\nimport { CChartLine } from '@coreui/react-chartjs'\r\n\r\nconst ChartLineSimple = props => {\r\n\r\n  const {\r\n    borderColor,\r\n    backgroundColor,\r\n    pointHoverBackgroundColor,\r\n    dataPoints,\r\n    label,\r\n    pointed,\r\n    ...attributes\r\n  } = props\r\n\r\n  const pointHoverColor = (()=>{\r\n    if (pointHoverBackgroundColor) {\r\n      return pointHoverBackgroundColor\r\n    } else if (backgroundColor !== 'transparent') {\r\n      return backgroundColor\r\n    }\r\n    return borderColor\r\n  })()\r\n\r\n  const defaultDatasets = (()=>{\r\n    return [\r\n      {\r\n        data: dataPoints,\r\n        borderColor: getColor(borderColor),\r\n        backgroundColor: getColor(backgroundColor),\r\n        pointBackgroundColor: getColor(pointHoverColor),\r\n        pointHoverBackgroundColor: getColor(pointHoverColor),\r\n        label\r\n      }\r\n    ]\r\n  })()\r\n\r\n  const pointedOptions = (()=>{\r\n    return {\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            offset: true,\r\n            gridLines: {\r\n              color: 'transparent',\r\n              zeroLineColor: 'transparent'\r\n            },\r\n            ticks: {\r\n              fontSize: 2,\r\n              fontColor: 'transparent'\r\n            }\r\n          }\r\n        ],\r\n        yAxes: [\r\n          {\r\n            display: false,\r\n            ticks: {\r\n              display: false,\r\n              min: Math.min.apply(Math, dataPoints) - 5,\r\n              max: Math.max.apply(Math, dataPoints) + 5\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      elements: {\r\n        line: {\r\n          borderWidth: 1\r\n        },\r\n        point: {\r\n          radius: 4,\r\n          hitRadius: 10,\r\n          hoverRadius: 4\r\n        }\r\n      }\r\n    }\r\n  })()\r\n\r\n  const straightOptions = (()=>{\r\n    return {\r\n      scales: {\r\n        xAxes: [{\r\n          display: false\r\n        }],\r\n        yAxes: [{\r\n          display: false\r\n        }]\r\n      },\r\n      elements: {\r\n        line: {\r\n          borderWidth: 2\r\n        },\r\n        point: {\r\n          radius: 0,\r\n          hitRadius: 10,\r\n          hoverRadius: 4\r\n        }\r\n      }\r\n    }\r\n  })()\r\n\r\n  const defaultOptions = (()=>{\r\n    const options = pointed ? pointedOptions : straightOptions\r\n      return Object.assign({}, options, {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n          display: false\r\n        }\r\n      })\r\n  })()\r\n\r\n  const computedDatasets = (() => {\r\n    return deepObjectsMerge(defaultDatasets, attributes.datasets || {})\r\n  })()\r\n\r\n  const computedOptions = (() => {\r\n    return deepObjectsMerge(defaultOptions, attributes.options || {})\r\n  })()\r\n\r\n  // render\r\n\r\n  return (\r\n    <CChartLine\r\n      {...attributes}\r\n      datasets={computedDatasets}\r\n      options={computedOptions}\r\n      labels={label}\r\n    />\r\n  )\r\n}\r\n\r\nChartLineSimple.propTypes = {\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string,\r\n  //\r\n  borderColor: PropTypes.string,\r\n  backgroundColor: PropTypes.string,\r\n  pointHoverBackgroundColor: PropTypes.string,\r\n  dataPoints: PropTypes.array,\r\n  label: PropTypes.string,\r\n  pointed: PropTypes.bool\r\n};\r\n\r\nChartLineSimple.defaultProps = {\r\n  borderColor: 'rgba(255,255,255,.55)',\r\n  backgroundColor: 'transparent',\r\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\r\n  label: 'Sales'\r\n};\r\n\r\nexport default ChartLineSimple\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n};\r\n\r\nconst firebase_app = firebase.initializeApp(firebaseConfig);\r\n\r\nconst storage = firebase.storage();\r\n\r\nexport { storage, firebase_app };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { firebase_app } from \"src/firebase/firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [pending, setPending] = useState(true);\r\n\r\n  useEffect(() => {\r\n    firebase_app.auth().onAuthStateChanged((user) => {\r\n      setCurrentUser(user)\r\n      setPending(false)\r\n    });\r\n  }, []);\r\n\r\n  if (pending) {\r\n    return <h1>Loading...</h1>\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"src/services/Auth\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={routeProps =>\r\n        !!currentUser ? (\r\n          <RouteComponent {...routeProps} />\r\n        ) : (\r\n          <Redirect to={\"/login\"} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute\r\n","import React from 'react'\r\nimport { CChartLine } from '@coreui/react-chartjs'\r\nimport { getStyle, hexToRgba } from '@coreui/utils'\r\n\r\nconst brandSuccess = getStyle('success') || '#4dbd74'\r\nconst brandInfo = getStyle('info') || '#20a8d8'\r\nconst brandDanger = getStyle('danger') || '#f86c6b'\r\n\r\nconst MainChartExample = attributes => {\r\n  const random = (min, max)=>{\r\n    return Math.floor(Math.random() * (max - min + 1) + min)\r\n  }\r\n\r\n  const defaultDatasets = (()=>{\r\n    let elements = 27\r\n    const data1 = []\r\n    const data2 = []\r\n    const data3 = []\r\n    for (let i = 0; i <= elements; i++) {\r\n      data1.push(random(50, 200))\r\n      data2.push(random(80, 100))\r\n      data3.push(65)\r\n    }\r\n    return [\r\n      {\r\n        label: 'My First dataset',\r\n        backgroundColor: hexToRgba(brandInfo, 10),\r\n        borderColor: brandInfo,\r\n        pointHoverBackgroundColor: brandInfo,\r\n        borderWidth: 2,\r\n        data: data1\r\n      },\r\n      {\r\n        label: 'My Second dataset',\r\n        backgroundColor: 'transparent',\r\n        borderColor: brandSuccess,\r\n        pointHoverBackgroundColor: brandSuccess,\r\n        borderWidth: 2,\r\n        data: data2\r\n      },\r\n      {\r\n        label: 'My Third dataset',\r\n        backgroundColor: 'transparent',\r\n        borderColor: brandDanger,\r\n        pointHoverBackgroundColor: brandDanger,\r\n        borderWidth: 1,\r\n        borderDash: [8, 5],\r\n        data: data3\r\n      }\r\n    ]\r\n  })()\r\n\r\n  const defaultOptions = (()=>{\r\n    return {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n          display: false\r\n        },\r\n        scales: {\r\n          xAxes: [{\r\n            gridLines: {\r\n              drawOnChartArea: false\r\n            }\r\n          }],\r\n          yAxes: [{\r\n            ticks: {\r\n              beginAtZero: true,\r\n              maxTicksLimit: 5,\r\n              stepSize: Math.ceil(250 / 5),\r\n              max: 250\r\n            },\r\n            gridLines: {\r\n              display: true\r\n            }\r\n          }]\r\n        },\r\n        elements: {\r\n          point: {\r\n            radius: 0,\r\n            hitRadius: 10,\r\n            hoverRadius: 4,\r\n            hoverBorderWidth: 3\r\n          }\r\n        }\r\n      }\r\n    }\r\n  )()\r\n\r\n  // render\r\n  return (\r\n    <CChartLine\r\n      {...attributes}\r\n      datasets={defaultDatasets}\r\n      options={defaultOptions}\r\n      labels={['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su']}\r\n    />\r\n  )\r\n}\r\n\r\n\r\nexport default MainChartExample\r\n","import React from \"react\";\r\n\r\nfunction Chevron(props) {\r\n    return (\r\n        <svg\r\n            className={props.className}\r\n            height={props.height}\r\n            width={props.width}\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 320 512\"\r\n        >\r\n            <path\r\n                fill={props.fill}\r\n                d=\"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z\"\r\n            />\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default Chevron;\r\n","import React, { useState, useRef } from \"react\";\r\nimport Chevron from \"./Chevron\";\r\n\r\nimport \"./Accordion.css\";\r\n\r\nfunction Accordion(props) {\r\n  const [setActive, setActiveState] = useState(\"\");\r\n  const [setHeight, setHeightState] = useState(\"0px\");\r\n  const [setRotate, setRotateState] = useState(\"accordion__icon\");\r\n\r\n  const content = useRef(null);\r\n\r\n  function toggleAccordion() {\r\n    setActiveState(setActive === \"\" ? \"active\" : \"\");\r\n    setHeightState(\r\n      setActive === \"active\" ? \"0px\" : `${content.current.scrollHeight}px`\r\n    );\r\n    setRotateState(\r\n      setActive === \"active\" ? \"accordion__icon\" : \"accordion__icon rotate\"\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"accordion__section\">\r\n\r\n      <button type='button' className={`accordion ${setActive}`} onClick={toggleAccordion}>\r\n        <p className=\"accordion__title\">{props.title}</p>\r\n        <Chevron className={`${setRotate}`} width={10} fill={\"#777\"} />\r\n      </button>\r\n\r\n      <div\r\n        ref={content}\r\n        style={{ maxHeight: `${setHeight}` }}\r\n        className=\"accordion__content\"\r\n      >\r\n        {/* <div\r\n          className=\"accordion__text\"\r\n          dangerouslySetInnerHTML={{ __html: props.content }}\r\n        /> */}\r\n\r\n        <div className=\"accordion__text\">\r\n          {props.content}\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Accordion;\r\n","var SERVER_URI = \"http://localhost:5000\";\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n    SERVER_URI = process.env.REACT_APP_DEV_SERVER;\r\n}\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n    SERVER_URI = process.env.REACT_APP_PROD_SERVER;\r\n}\r\n\r\nexport default SERVER_URI;\r\n","import React, { useState } from \"react\";\r\nimport { storage } from \"../../firebase/firebase\";\r\n\r\nimport {\r\n  CCollapse,\r\n  CCard,\r\n  CCardBody,\r\n  CCardText,\r\n  CCardTitle,\r\n  CListGroupItem,\r\n  CButton,\r\n  CAlert,\r\n  CProgress,\r\n  CProgressBar\r\n} from \"@coreui/react\";\r\n\r\nimport axios from \"axios\";\r\nimport FlashMessage from 'react-flash-message'\r\n\r\nimport SERVER_URI from \"../../reusable/api\";\r\n\r\nconst UploadImg = () => {\r\n  const [image, setImage] = useState(null);\r\n  const [url, setUrl] = useState(\"\");\r\n  const [progress, setProgress] = useState(0);\r\n  const [uploaded, setUploaded] = useState('false')\r\n  const [uploadBtnStateDisable, setUploadBtnStateDisable] = useState(true)\r\n  const [copied, setCopied] = useState('false')\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const handleChange = e => {\r\n    if (e.target.files[0]) {\r\n      setImage(e.target.files[0]);\r\n      setUploadBtnStateDisable(false)\r\n    }\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    let newDate = new Date()\r\n    let date = newDate.getDate();\r\n    let month = newDate.getMonth() + 1;\r\n    let year = newDate.getFullYear();\r\n    let time = new Date().getTime();\r\n\r\n    let timeNow = `${date}${month}${year}T${time}`;\r\n\r\n    setUploaded('false');\r\n\r\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      snapshot => {\r\n        const progress = Math.round(\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        );\r\n        setProgress(progress);\r\n      },\r\n\r\n      error => {\r\n        console.log(error);\r\n      },\r\n\r\n      () => {\r\n        storage\r\n          .ref(\"images\")\r\n          .child(image.name)\r\n          .getDownloadURL()\r\n          .then(url => {\r\n            setUrl(url);\r\n            console.log(\"image: \", image);\r\n            console.log(\"URL: \" + url);\r\n\r\n            const img_url = {\r\n              url: url\r\n            };\r\n\r\n            axios.post(`${SERVER_URI}/api/postImgToGallery`, img_url)\r\n              .then(res => console.log(res));\r\n\r\n            setUploaded('true')\r\n            setUploadBtnStateDisable(true)\r\n\r\n            // window.location = `${ADMIN_URI}/#/landing/progDesigns/`;\r\n          });\r\n      }\r\n    );\r\n  };\r\n\r\n  const copyToCLip = () => {\r\n    setCopied('false')\r\n    navigator.clipboard.writeText(url)\r\n    console.log(url);\r\n    setCopied('true')\r\n  }\r\n\r\n  const toggleUpload = () => {\r\n    setVisible(!visible);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CButton className='btn-primary' onClick={toggleUpload}>Upload Image</CButton>\r\n      <br /><br />\r\n      <CCollapse show={visible}>\r\n        <CCard className=\"mt-3\">\r\n          <CCardBody>\r\n\r\n            <CCard style={{ width: '50vw' }}>\r\n              {\r\n                (uploaded === 'true') ?\r\n                  <div>\r\n                    <CAlert\r\n                      width=\"1\"\r\n                      color=\"success\"\r\n                    >\r\n                      <strong>Uploaded</strong> Successfully...\r\n              </CAlert>\r\n\r\n                    <FlashMessage duration={3000}>\r\n                      Uploaded Successfully...\r\n            </FlashMessage>\r\n                  </div>\r\n                  :\r\n                  <p></p>\r\n              }\r\n              <CCardBody>\r\n                <CCardTitle>Upload Image</CCardTitle>\r\n\r\n                <CListGroupItem>\r\n                  <CProgress className=\"mb-3\">\r\n                    <CProgressBar value={progress}></CProgressBar>\r\n                  </CProgress>\r\n                  <progress value={progress} max=\"100\" />\r\n                </CListGroupItem>\r\n\r\n\r\n                <CListGroupItem>\r\n                  <input type=\"file\" onChange={handleChange} />\r\n                  <CButton  color=\"secondary\" onClick={handleUpload} disabled={uploadBtnStateDisable}>Upload</CButton>\r\n                  <CCardText>\r\n                    <strong> Image URL: </strong>\r\n                    {url}\r\n                  </CCardText>\r\n                </CListGroupItem>\r\n\r\n                <CListGroupItem>\r\n                  {\r\n                    (copied === 'true') ?\r\n                      <div>\r\n                        <FlashMessage duration={2000}>\r\n                          Copied To Clipboard...\r\n            </FlashMessage>\r\n                      </div>\r\n                      :\r\n                      <p></p>\r\n                  }\r\n                  <CButton color=\"secondary\" onClick={copyToCLip}>Copy Image URL to Clipboard</CButton>\r\n                </CListGroupItem>\r\n              </CCardBody>\r\n            </CCard>\r\n\r\n            <img className=\"uploadedImg\" src={url || \"http://via.placeholder.com/300\"} alt=\"firebase-image\" />\r\n\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCollapse>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadImg\r\n","import React, { Component } from \"react\";\r\n\r\nimport {\r\n  CCol,\r\n  CRow,\r\n  CAlert,\r\n  CImg,\r\n  CTooltip,\r\n  CToaster,\r\n  CToast,\r\n} from \"@coreui/react\";\r\n\r\nimport UploadImg from \"../UploadImg/UploadImg\";\r\n\r\nimport axios from \"axios\";\r\nimport FlashMessage from \"react-flash-message\";\r\n\r\nimport SERVER_URI from \"../../reusable/api\";\r\n\r\nclass Gallery extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      url: \"...\",\r\n      copied: false,\r\n      imgs: [],\r\n    };\r\n  }\r\n\r\n  getGallery = () => {\r\n    axios\r\n      .get(`${SERVER_URI}/api/gallery`)\r\n      .then((response) => {\r\n        const gallery = response.data;\r\n        let lista = [];\r\n        console.log(gallery[0]);\r\n\r\n        gallery.map((img) => {\r\n          lista.push(img);\r\n          return lista;\r\n        });\r\n\r\n        this.setState({\r\n          imgs: lista,\r\n        });\r\n\r\n        console.log(this.state.imgs);\r\n      })\r\n\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  copyToCLip = (e) => {\r\n    this.setState({\r\n      copied: true,\r\n    });\r\n\r\n    const url = e.target.id;\r\n    navigator.clipboard.writeText(url);\r\n\r\n    console.log(\"====================================\");\r\n    console.log(\"URL: \", url);\r\n    console.log(\"copied: \", this.state.copied);\r\n    console.log(\"====================================\");\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getGallery();\r\n  }\r\n\r\n  render() {\r\n    const listImgs = this.state.imgs.map((img) => (\r\n      <div>\r\n        <CTooltip content=\"Click to Copy URL\" placement=\"top\">\r\n          <CImg\r\n            key={img._id}\r\n            id={img.img_url}\r\n            src={img.img_url}\r\n            className=\"img-thumbnail\"\r\n            thumbnail\r\n            width=\"30%\"\r\n            onClick={this.copyToCLip}\r\n          />\r\n        </CTooltip>\r\n        <hr />\r\n      </div>\r\n    ));\r\n    return (\r\n      <CRow>\r\n        {this.state.copied === true ? (\r\n          <div>\r\n            <FlashMessage duration={3000}></FlashMessage>\r\n            <CToaster>\r\n              <CToast\r\n                key={this.state.fixedToasts}\r\n                show={true}\r\n                autohide={1000}\r\n                fade={true}\r\n                header=\"CToast fixed component\"\r\n              >\r\n                <CAlert width=\"1\" color=\"success\" dismissible={`${true}`}>\r\n                  <strong>Copied</strong> Successfully...\r\n                </CAlert>\r\n              </CToast>\r\n            </CToaster>\r\n          </div>\r\n        ) : (\r\n          <p></p>\r\n        )}\r\n\r\n        {this.state.edited === true ? (\r\n          <div>\r\n            <FlashMessage duration={3000}>\r\n              <CAlert width=\"1\" color=\"success\" dismissible={true}>\r\n                <strong>Uploaded</strong> Successfully...\r\n              </CAlert>\r\n            </FlashMessage>\r\n          </div>\r\n        ) : (\r\n          <p></p>\r\n        )}\r\n        <CCol xs=\"12\">{listImgs}</CCol>\r\n\r\n        <UploadImg />\r\n      </CRow>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Gallery;\r\n","import React, { Component } from \"react\";\r\n\r\nimport {\r\n  CForm,\r\n  CInput,\r\n  CFormGroup,\r\n  CCol,\r\n  CRow,\r\n  CAlert,\r\n  CInputGroupText,\r\n  CInputGroup,\r\n  CToast,\r\n  CToaster,\r\n} from \"@coreui/react\";\r\n\r\nimport Accordion from \"../../../reusable/Accordion/Accordion\";\r\n\r\nimport UploadImg from \"../../UploadImg/UploadImg\";\r\n\r\nimport axios from \"axios\";\r\nimport FlashMessage from \"react-flash-message\";\r\n\r\nimport SERVER_URI from \"../../../reusable/api\";\r\n\r\nclass News extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: false,\r\n      activeKey: 0,\r\n      edited: false,\r\n      submitClass: \"disabled\",\r\n      submitDisable: true,\r\n\r\n      fixedToasts: 0,\r\n\r\n      image: \"...\",\r\n      url: \"...\",\r\n      progress: \"...\",\r\n\r\n      blogs: [\r\n        {\r\n          _id: \"\",\r\n          date: \"...\",\r\n          title: \"...\",\r\n          summary: \"...\",\r\n          content: \"...\",\r\n          link: \"...\",\r\n          bg: \"...\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.addFixedToast = this.addFixedToast.bind(this);\r\n\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(`${SERVER_URI}/api/getBlogsData`)\r\n      .then((response) => {\r\n        console.log(\"REQ_DATA:: \", response.data);\r\n\r\n        const blogs = response.data;\r\n\r\n        this.setState({\r\n          blogs: blogs,\r\n        });\r\n\r\n        console.log(\"REQ_STATE:: \", this.state.blogs);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  onChange(e, i) {\r\n    const { value, name } = e.target;\r\n    // console.log('NAME:: ', name);\r\n    // console.log('VALUE:: ', value);\r\n    // console.log('_____________________________________');\r\n\r\n    this.setState((prevState) => {\r\n      const blogs = [...prevState.blogs];\r\n\r\n      blogs[i] = {\r\n        ...blogs[i],\r\n        [name]: value,\r\n      };\r\n\r\n      return {\r\n        submitClass: \"primary\",\r\n        submitDisable: false,\r\n        edited: false,\r\n        blogs,\r\n      };\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.submitDisable) {\r\n      console.log(e.target.id);\r\n\r\n      const prog_section = {\r\n        blogs: this.state.blogs,\r\n      };\r\n\r\n      console.log(\"POST_DATA::\", prog_section);\r\n\r\n      axios\r\n        .post(`${SERVER_URI}/api/postBlogsData`, prog_section)\r\n        .then((res) => console.log(res));\r\n\r\n      // window.location = `${ADMIN_URI}/#/landing/News/`;\r\n      this.setState({\r\n        edited: true,\r\n        submitClass: \"disabled\",\r\n        submitDisable: true,\r\n      });\r\n      this.addFixedToast();\r\n    }\r\n  }\r\n\r\n  addFixedToast() {\r\n    console.log(this.state.fixedToasts);\r\n    this.setState({\r\n      fixedToasts: this.state.fixedToasts + 1,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let listBlogs = this.state.blogs.map((blog, blog_i) => (\r\n      <div key={blog_i}>\r\n        <Accordion\r\n          title={blog.title}\r\n          content={\r\n            <div>\r\n              <CFormGroup>\r\n                <CInput\r\n                  disabled\r\n                  type=\"text\"\r\n                  id=\"_id\"\r\n                  name=\"_id\"\r\n                  placeholder=\"_id\"\r\n                  value={blog._id}\r\n                  onChange={(event) => this.onChange(event, blog_i)}\r\n                />\r\n                <br />\r\n                <CInput\r\n                  type=\"text\"\r\n                  id=\"date\"\r\n                  name=\"date\"\r\n                  placeholder=\"date\"\r\n                  value={blog.date}\r\n                  onChange={(event) => this.onChange(event, blog_i)}\r\n                />\r\n                <br />\r\n                <CInput\r\n                  type=\"text\"\r\n                  id=\"title\"\r\n                  name=\"title\"\r\n                  placeholder=\"title\"\r\n                  value={blog.title}\r\n                  onChange={(event) => this.onChange(event, blog_i)}\r\n                />\r\n                <br />\r\n                <CInputGroup className=\"mb-3\">\r\n                  <CInputGroupText id=\"basic-addon3\">\r\n                    Paste Image URL\r\n                  </CInputGroupText>\r\n                  <CInput\r\n                    type=\"text\"\r\n                    id=\"bg\"\r\n                    name=\"bg\"\r\n                    placeholder=\"bg\"\r\n                    value={blog.bg}\r\n                    onChange={(event) => this.onChange(event, blog_i)}\r\n                  />\r\n                </CInputGroup>\r\n                <br />\r\n                <CInput\r\n                  type=\"text\"\r\n                  id=\"summary\"\r\n                  name=\"summary\"\r\n                  placeholder=\"summary\"\r\n                  value={blog.summary}\r\n                  onChange={(event) => this.onChange(event, blog_i)}\r\n                />\r\n                <br />\r\n                <CInput\r\n                  type=\"text\"\r\n                  id=\"content\"\r\n                  name=\"content\"\r\n                  placeholder=\"content\"\r\n                  value={blog.content}\r\n                  onChange={(event) => this.onChange(event, blog_i)}\r\n                />\r\n                <br />\r\n                <CInput\r\n                  type=\"text\"\r\n                  id=\"link\"\r\n                  name=\"link\"\r\n                  placeholder=\"link\"\r\n                  value={blog.link}\r\n                  onChange={(event) => this.onChange(event, blog_i)}\r\n                />\r\n                <br />\r\n              </CFormGroup>\r\n            </div>\r\n          }\r\n        />\r\n        <hr />\r\n      </div>\r\n    ));\r\n\r\n    return (\r\n      <CRow>\r\n        {this.state.edited === true ? (\r\n          <div>\r\n            <FlashMessage duration={3000}></FlashMessage>\r\n            <CToaster>\r\n              <CToast\r\n                key={this.state.fixedToasts}\r\n                show={true}\r\n                autohide={1000}\r\n                fade={true}\r\n                header=\"CToast fixed component\"\r\n              >\r\n                <CAlert width=\"1\" color=\"success\" dismissible={`${true}`}>\r\n                  <strong>Updated</strong> Successfully...\r\n                </CAlert>\r\n              </CToast>\r\n            </CToaster>\r\n          </div>\r\n        ) : (\r\n          <p></p>\r\n        )}\r\n\r\n        <CCol xs=\"12\">\r\n          <CForm onSubmit={this.onSubmit}>\r\n            {listBlogs}\r\n\r\n            <hr />\r\n            <br />\r\n\r\n            <CFormGroup>\r\n              <CInput\r\n                type=\"submit\"\r\n                id=\"submit\"\r\n                name=\"submit\"\r\n                placeholder=\"submit\"\r\n                className={`bg-${this.state.submitClass} text-white bold`}\r\n                value=\"SUBMIT\"\r\n                disabled={this.state.submitDisable}\r\n              />\r\n            </CFormGroup>\r\n          </CForm>\r\n        </CCol>\r\n\r\n        <UploadImg />\r\n      </CRow>\r\n    );\r\n  }\r\n}\r\n\r\nexport default News;\r\n","import React, { Component } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n} from '@coreui/react'\r\n// react-csv\r\nimport { CSVLink } from \"react-csv\";\r\n// axios\r\nimport axios from 'axios';\r\n\r\n\r\nimport SERVER_URI from \"../../reusable/api\";\r\n\r\nclass MailingList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      mailingList: [],\r\n      header: {\r\n        label: \"Email\",\r\n        key: 'email'\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  getMailList = () => {\r\n    axios.get(`${SERVER_URI}/api/mailing-list`)\r\n      .then(response => {\r\n\r\n        const mailing_list = response.data\r\n        let lista = []\r\n        // console.log(mailing_list[0].mail_email);\r\n        mailing_list.map(mail => {\r\n          lista.push(([mail.mail_email]))\r\n          return lista\r\n        })\r\n\r\n        this.setState({\r\n          mailingList: lista\r\n        })\r\n        // console.log(this.state.mailingList);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getMailList()\r\n  }\r\n\r\n\r\n  render() {\r\n    let tableItems = []\r\n    this.state.mailingList.map(item => {\r\n      let row = { \"email\": item }\r\n      tableItems.push(row)\r\n      return tableItems\r\n    })\r\n    // console.log(\"table: \", tableItems);\r\n\r\n    return (\r\n      <div>\r\n        <CSVLink className=\"btn btn-primary\" data={this.state.mailingList} filename='Horizon_Mailing_List.csv'>\r\n          Download Mailing List\r\n        </CSVLink>\r\n        <br />\r\n        <br />\r\n        <CRow>\r\n          <CCol xl={6}>\r\n            <CCard>\r\n              <CCardHeader>\r\n                Mailing\r\n                <small className=\"text-muted\"> List</small>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <CDataTable\r\n                  items={tableItems}\r\n                  fields={[\r\n                    { key: 'email', _classes: 'font-weight-bold' }\r\n                  ]}\r\n                  hover\r\n                  striped\r\n                  itemsPerPage={5}\r\n                  clickableRows\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default MailingList\r\n","import React, { Component } from \"react\";\nimport {\n  CForm,\n  CInput,\n  CTextarea,\n  CFormText,\n  CFormGroup,\n  CCol,\n  CRow,\n  CInputGroup,\n  CAlert,\n  CToaster,\n  CToast,\n} from \"@coreui/react\";\n\nimport Accordion from \"../../../reusable/Accordion/Accordion\";\nimport FlashMessage from \"react-flash-message\";\nimport UploadImg from \"../../UploadImg/UploadImg\";\n\nimport axios from \"axios\";\n\nimport SERVER_URI from \"../../../reusable/api\";\n\nlet axiosDefaults = require(\"axios/lib/defaults\");\n\nclass Hero extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeKey: 0,\n      edited: false,\n      submitClass: \"disabled\",\n      submitDisable: true,\n\n      csrfToken: \"\",\n      hero_section_display: true,\n      name: \"...\",\n      hero_parag_1: \"...\",\n      hero_header_1: \"...\",\n      hero_parag_2: \"...\",\n      hero_link_1_name: \"...\",\n      hero_link_1_href: \"...\",\n      design_state: true,\n      design_img: \"...\",\n\n      showLenses: false,\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.toggleCheckbox = this.toggleCheckbox.bind(this);\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios\n      .get(`${SERVER_URI}/api/getHeroData`)\n      .then((response) => {\n        console.log(\"====================================\");\n        console.log(\"server: \", SERVER_URI);\n        console.log(response);\n        console.log(\"====================================\");\n        // console.log(response.data[0]);\n        const {\n          name,\n          hero_parag_1,\n          hero_header_1,\n          hero_parag_2,\n          hero_link_1_name,\n          hero_link_1_href,\n          design_state,\n          design_img,\n        } = response.data.section_content;\n\n        // const { csrfToken } = response.data;\n\n        this.setState({\n          name: name,\n          hero_parag_1: hero_parag_1,\n          hero_header_1: hero_header_1,\n          hero_parag_2: hero_parag_2,\n          hero_link_1_name: hero_link_1_name,\n          hero_link_1_href: hero_link_1_href,\n          design_state: design_state,\n          design_img: design_img,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  onChange(e) {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n      submitClass: \"primary\",\n      submitDisable: false,\n      edited: false,\n    });\n    // console.log(this.state);\n  }\n\n  toggleCheckbox(e) {\n    e.preventDefault();\n    this.setState({\n      design_state: !this.state.design_state,\n      submitClass: \"primary\",\n      submitDisable: false,\n      edited: false,\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.submitDisable) {\n      const hero_section = {\n        name: this.state.name,\n        hero_parag_1: this.state.hero_parag_1,\n        hero_header_1: this.state.hero_header_1,\n        hero_parag_2: this.state.hero_parag_2,\n        hero_link_1_name: this.state.hero_link_1_name,\n        hero_link_1_href: this.state.hero_link_1_href,\n        design_state: this.state.design_state,\n        design_img: this.state.design_img,\n      };\n\n      axios\n        .post(`${SERVER_URI}/api/postHeroData`, hero_section)\n        .then((res) => console.log(res));\n\n      // window.location = `${ADMIN_URI}/#/landing/hero/`;\n      this.setState({\n        edited: true,\n        submitClass: \"disabled\",\n        submitDisable: true,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <CRow>\n        {this.state.edited === true ? (\n          <div>\n            <FlashMessage duration={3000} />\n            <CToaster>\n              <CToast\n                key={this.state.fixedToasts}\n                show={true}\n                autohide={1000}\n                fade={true}\n                header=\"CToast fixed component\"\n              >\n                <CAlert width=\"1\" color=\"success\" dismissible={`${true}`}>\n                  <strong>Updated</strong> Successfully...\n                </CAlert>\n              </CToast>\n            </CToaster>\n          </div>\n        ) : (\n          <p></p>\n        )}\n\n        <CCol xs=\"12\">\n          <CForm onSubmit={this.onSubmit}>\n            <CFormGroup>\n              {/* #1 name */}\n              <h6>{this.state.name}</h6>\n              {/* <CLabel htmlFor=\"name\">name</CLabel> */}\n\n              <CInput\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                placeholder=\"name\"\n                value={this.state.name}\n                onChange={this.onChange}\n              />\n              <CFormText className=\"help-block\">Please enter name</CFormText>\n            </CFormGroup>\n\n            <Accordion\n              title=\"Content\"\n              content={\n                <div>\n                  <CFormGroup>\n                    {/* #2 */}\n                    {/* <CLabel htmlFor=\"hero_parag_1\">hero_parag_1</CLabel> */}\n                    <CInput\n                      type=\"text\"\n                      id=\"hero_parag_1\"\n                      name=\"hero_parag_1\"\n                      placeholder=\"hero_parag_1\"\n                      value={this.state.hero_parag_1}\n                      onChange={this.onChange}\n                    />\n                  </CFormGroup>\n\n                  <CFormGroup>\n                    {/* #3 */}\n                    {/* <CLabel htmlFor=\"hero_header_1\">hero_header_1</CLabel> */}\n                    <CInput\n                      type=\"text\"\n                      id=\"hero_header_1\"\n                      name=\"hero_header_1\"\n                      placeholder=\"hero_header_1\"\n                      value={this.state.hero_header_1}\n                      onChange={this.onChange}\n                    />\n                  </CFormGroup>\n\n                  <CFormGroup>\n                    {/* #4 */}\n                    {/* <CLabel htmlFor=\"hero_parag_2\">hero_parag_2</CLabel> */}\n                    <CTextarea\n                      type=\"text\"\n                      id=\"hero_parag_2\"\n                      name=\"hero_parag_2\"\n                      placeholder=\"hero_parag_2\"\n                      value={this.state.hero_parag_2}\n                      onChange={this.onChange}\n                    />\n                  </CFormGroup>\n\n                  <CFormGroup>\n                    {/* #5 */}\n                    {/* <CLabel htmlFor=\"hero_link_1_name\">hero_link_1_name</CLabel> */}\n                    <CInput\n                      type=\"text\"\n                      id=\"hero_link_1_name\"\n                      name=\"hero_link_1_name\"\n                      placeholder=\"hero_link_1_name\"\n                      value={this.state.hero_link_1_name}\n                      onChange={this.onChange}\n                    />\n                  </CFormGroup>\n\n                  <CFormGroup>\n                    <CInputGroup className=\"mb-3\">\n                      {/* #6 */}\n                      {/* <CLabel htmlFor=\"hero_link_1_href\">hero_link_1_href</CLabel> */}\n                      <CInput\n                        type=\"text\"\n                        id=\"hero_link_1_href\"\n                        name=\"hero_link_1_href\"\n                        placeholder=\"hero_link_1_href\"\n                        value={this.state.hero_link_1_href}\n                        onChange={this.onChange}\n                      />\n                    </CInputGroup>\n                  </CFormGroup>\n                </div>\n              }\n            />\n\n            <br />\n            <hr />\n            <br />\n\n            <Accordion\n              title=\"Design\"\n              content={\n                <div>\n                  <CFormGroup>\n                    {/* #1 */}\n                    {/* Checkbox to show the lenses design */}\n                    {/* <h4>{this.state.design_state ? \"Show\" : \"hide\"}</h4> */}\n\n                    {/* OLD CHECKBOX *RIP* */}\n                    {/* <a href=\"#\" role=\"button\" onClick={this.toggleCheckbox}>\n                      <input\n                        type=\"checkbox\"\n                        title=\"design_state\"\n                        name=\"design_state\"\n                        checked={this.state.design_state}\n                        readOnly\n                      />\n                      Show Lenses Design\n                    </a> */}\n\n                    {/* NEW LOOK - it's all about that */}\n                    <a\n                      className=\"show_design_link\"\n                      href=\"#\"\n                      role=\"button\"\n                      onClick={this.toggleCheckbox}\n                    >\n                      <label className=\"show_design\">\n                        <input\n                          className=\"label__checkbox\"\n                          id=\"show_design\"\n                          name=\"show_design\"\n                          type=\"checkbox\"\n                          checked={this.state.design_state}\n                          readOnly\n                        />\n                        <span className=\"label__text\">\n                          <span className=\"label__check\">\n                            <i className=\"fa fa-check icon\"></i>\n                          </span>\n                        </span>\n                        <label className=\"show_design_label\" htmlFor=\"show_design\">\n                          Show Lenses Design\n                        </label>\n                      </label>\n                    </a>\n                  </CFormGroup>\n\n                  <CFormGroup>\n                    {/* #2 */}\n                    {/* Image URL */}\n                    <CInput\n                      type=\"text\"\n                      id=\"design_img\"\n                      name=\"design_img\"\n                      placeholder=\"design_img\"\n                      value={this.state.design_img}\n                      onChange={this.onChange}\n                      disabled={this.state.design_state}\n                    />\n                  </CFormGroup>\n                </div>\n              }\n            />\n\n            <br />\n            <hr />\n            <br />\n\n            <CFormGroup>\n              {/* #6 */}\n              <CInput\n                type=\"submit\"\n                id=\"submit\"\n                name=\"submit\"\n                placeholder=\"submit\"\n                className={`bg-${this.state.submitClass} text-white bold`}\n                value=\"SUBMIT\"\n                disabled={this.state.submitDisable}\n              />\n            </CFormGroup>\n          </CForm>\n          {/* {this.displayarag()} */}\n        </CCol>\n      </CRow>\n    );\n  }\n}\n\nexport default Hero;\n","import React from 'react';\n\n// const Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'));\n\nimport Dashboard from './views/dashboard/Dashboard';\nimport News from './views/pages/landing/News';\n\nimport Gallery from './views/Gallery/Gallery';\nimport MailingList from './views/mailing/MailingList';\nimport Charts from './views/charts/Charts';\nimport Widgets from './views/widgets/Widgets';\nimport Users from './views/users/Users';\nimport User from './views/users/User';\n\nimport Hero from './views/pages/landing/Hero';\nimport About from './views/pages/landing/About';\n\nimport LensDesigns1 from './views/pages/landing/LensDesigns1';\nimport LensInfo1 from './views/pages/landing/LensInfo1';\nimport LensInfo3 from './views/pages/landing/LensInfo3';\nimport LensDesigns2 from './views/pages/landing/LensDesigns2';\nimport LensInfo2 from './views/pages/landing/LensInfo2';\nimport LensDesigns3 from './views/pages/landing/LensDesigns3';\n\nimport WatchVideo from './views/pages/landing/WatchVideo';\nimport Screenshots from './views/pages/landing/Screenshots';\n\nimport ProductionInfo from './views/pages/landing/ProductionInfo';\nimport TechnicalInfo from './views/pages/landing/TechnicalInfo';\n\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  // { path: '/dashboard', exact: true, name: 'Dashboard', component: Dashboard },\n  // { path: '/about', exact: true, name: 'About Us', component: About },\n  // { path: '/news', exact: true, name: 'Latest News', component: News },\n\n  // { path: '/landing/hero', exact: true, name: 'Hero', component: Hero },\n  // { path: '/landing/lens-designs-1', exact: true, name: 'Lens Designs 1', component: LensDesigns1 },\n  // { path: '/landing/lens-info-1', exact: true, name: 'Lens Info 1', component: LensInfo1 },\n  // { path: '/landing/lens-info-3', exact: true, name: 'Lens Info 3', component: LensInfo3 },\n  // { path: '/landing/lens-designs-2', exact: true, name: 'Lens Designs 2', component: LensDesigns2 },\n  // { path: '/landing/lens-info-2', exact: true, name: 'Lens Info 2', component: LensInfo2 },\n  // { path: '/landing/lens-designs-3', exact: true, name: 'Lens Designs 3', component: LensDesigns3 },\n\n  // { path: '/landing/watch-video', exact: true, name: 'Watch Video', component: WatchVideo },\n  // { path: '/landing/screen-shots', exact: true, name: 'Screen Shots', component: Screenshots },\n\n  // { path: '/landing/production-info', exact: true, name: 'Production Info', component: ProductionInfo },\n  // { path: '/landing/technical-info', exact: true, name: 'Technical Info', component: TechnicalInfo },\n\n  { path: '/gallery', name: 'Gallery', component: Gallery },\n  { path: '/mailing-list', exact: true, name: 'Mailing List', component: MailingList },\n  // { path: '/charts', exact: true, name: 'Charts', component: Charts },\n  // { path: '/widgets', exact: true, name: 'Widgets', component: Widgets },\n  // { path: '/users', exact: true, name: 'Users', component: Users },\n  // { path: '/users/:id', exact: true, name: 'User Details', component: User },\n];\n\nexport default routes;\n\n","import React, { Component } from \"react\";\r\n\r\nimport {\r\n  CLabel,\r\n  CForm,\r\n  CInput,\r\n  CTextarea,\r\n  CFormGroup,\r\n  CCol,\r\n  CRow,\r\n  CAlert,\r\n  CCard,\r\n  CToaster,\r\n  CToast\r\n} from \"@coreui/react\";\r\n\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react'\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nimport ReactHtmlParser from 'react-html-parser'\r\n\r\n\r\nimport UploadImg from \"../../UploadImg/UploadImg\";\r\n\r\nimport axios from \"axios\";\r\nimport FlashMessage from 'react-flash-message';\r\n\r\nimport SERVER_URI from \"../../../reusable/api\";\r\n\r\nclass About extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: false,\r\n      activeKey: 0,\r\n      edited: false,\r\n      submitClass: 'disabled',\r\n      submitDisable: true,\r\n\r\n      image: \"...\",\r\n      url: \"...\",\r\n      progress: \"...\",\r\n\r\n      title: '...',\r\n      content: '...',\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onChangeEditor = this.onChangeEditor.bind(this);\r\n\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(`${SERVER_URI}/api/getAboutData`)\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        const {\r\n          content\r\n        } = response.data;\r\n        this.setState({\r\n          content: content,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  onChange(e) {\r\n    const value = e.target.value;\r\n    // console.log(value);\r\n    this.setState({\r\n      [e.target.name]: value,\r\n      submitClass: 'primary',\r\n      submitDisable: false,\r\n      edited: false,\r\n    })\r\n  }\r\n\r\n  onChangeEditor(e, editor) {\r\n    const data = editor.getData();\r\n    this.setState({\r\n      content: data,\r\n      submitClass: 'primary',\r\n      submitDisable: false,\r\n      edited: false,\r\n    })\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const prog_section = {\r\n      content: this.state.content,\r\n    };\r\n\r\n    axios.post(`${SERVER_URI}/api/postAboutData`, prog_section)\r\n    // .then(res => console.log(res));\r\n\r\n    // window.location = `${ADMIN_URI}/#/landing/About/`;\r\n    this.setState({ edited: true, submitClass: 'disabled', submitDisable: true, })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <CRow>\r\n        {\r\n          (this.state.edited === true) ?\r\n            <div>\r\n              <FlashMessage duration={3000} />\r\n              <CToaster>\r\n                <CToast\r\n                  key={this.state.fixedToasts}\r\n                  show={true}\r\n                  autohide={1000}\r\n                  fade={true}\r\n                  header=\"CToast fixed component\"\r\n                >\r\n                  <CAlert\r\n                    width=\"1\"\r\n                    color=\"success\"\r\n                    dismissible={`${true}`}\r\n                  >\r\n                    <strong>Updated</strong> Successfully...\r\n                  </CAlert>\r\n                </CToast>\r\n              </CToaster >\r\n            </div>\r\n            :\r\n            <p></p>\r\n        }\r\n        <CCol xs=\"12\">\r\n\r\n          <CKEditor\r\n            name=\"body\"\r\n            placeholder=\"About Page\"\r\n            content={this.state.content}\r\n            editor={ClassicEditor}\r\n            data={this.state.content}\r\n            contentsCss='/css/mysitestyles.css'\r\n            onChange={this.onChangeEditor}\r\n          />\r\n          <CKEditor\r\n          name=\"body\"\r\n          placeholder=\"About Page\"\r\n          content={this.state.content}\r\n          editor={ClassicEditor}\r\n          data={this.state.content}\r\n          contentsCss='/css/mysitestyles.css'\r\n          onChange={this.onChangeEditor} />\r\n\r\n          <hr />\r\n\r\n          <CForm onSubmit={this.onSubmit}>\r\n            <CFormGroup>\r\n              {/* #1 name */}\r\n              <CTextarea\r\n                type=\"text\"\r\n                id=\"content\"\r\n                name=\"content\"\r\n                placeholder=\"content\"\r\n                value={this.state.content}\r\n                onChange={this.onChange}\r\n              />\r\n            </CFormGroup>\r\n\r\n            <CLabel>Content: </CLabel>\r\n            <CCard dangerouslySetInnerHTML={{ __html: this.state.content }} />\r\n            <CCard>\r\n              {ReactHtmlParser(this.state.content)}\r\n            </CCard>\r\n\r\n            <hr />\r\n            <br />\r\n\r\n            <CFormGroup>\r\n              <CInput\r\n                type=\"submit\"\r\n                id=\"submit\"\r\n                name=\"submit\"\r\n                placeholder=\"submit\"\r\n                className={`bg-${this.state.submitClass} text-white bold`}\r\n                value=\"SUBMIT\"\r\n                disabled={this.state.submitDisable}\r\n              />\r\n            </CFormGroup>\r\n          </CForm>\r\n        </CCol>\r\n\r\n        <UploadImg />\r\n      </CRow>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\n\nimport {\n  CForm,\n  CInput,\n  CFormGroup,\n  CCol,\n  CRow,\n  CAlert,\n  CInputGroupText,\n  CInputGroup,\n  CToaster,\n  CToast,\n} from \"@coreui/react\";\n\nimport Accordion from \"../../../reusable/Accordion/Accordion\";\nimport UploadImg from \"../../UploadImg/UploadImg\";\n\nimport axios from \"axios\";\nimport FlashMessage from \"react-flash-message\";\n\nimport SERVER_URI from \"../../../reusable/api\";\n\nclass LensDesigns1 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false,\n      activeKey: 0,\n      edited: false,\n      submitClass: \"disabled\",\n      submitDisable: true,\n\n      image: \"...\",\n      url: \"...\",\n      progress: \"...\",\n\n      ld1_section_display: true,\n      name: \"...\",\n      prog_card_1_img: \"...\",\n      prog_card_1_link: \"...\",\n      prog_card_1_type: \"...\",\n      prog_card_1_header: \"...\",\n\n      prog_card_2_img: \"...\",\n      prog_card_2_link: \"...\",\n      prog_card_2_type: \"...\",\n      prog_card_2_header: \"...\",\n\n      prog_card_3_img: \"...\",\n      prog_card_3_link: \"...\",\n      prog_card_3_type: \"...\",\n      prog_card_3_header: \"...\",\n\n      prog_card_4_img: \"...\",\n      prog_card_4_link: \"...\",\n      prog_card_4_type: \"...\",\n      prog_card_4_header: \"...\",\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.toggleCheckbox = this.toggleCheckbox.bind(this);\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios\n      .get(`${SERVER_URI}/api/getLensDesigns1`)\n      .then((response) => {\n        // console.log(response.data);\n        const { ld1_section_display } = response.data.section_display;\n        const {\n          name,\n          prog_card_1_img,\n          prog_card_1_link,\n          prog_card_1_type,\n          prog_card_1_header,\n          prog_card_2_img,\n          prog_card_2_link,\n          prog_card_2_type,\n          prog_card_2_header,\n          prog_card_3_img,\n          prog_card_3_link,\n          prog_card_3_type,\n          prog_card_3_header,\n          prog_card_4_img,\n          prog_card_4_link,\n          prog_card_4_type,\n          prog_card_4_header,\n        } = response.data.section_content;\n\n        this.setState({\n          ld1_section_display: ld1_section_display,\n          name: name,\n          prog_card_1_img: prog_card_1_img,\n          prog_card_1_link: prog_card_1_link,\n          prog_card_1_type: prog_card_1_type,\n          prog_card_1_header: prog_card_1_header,\n          prog_card_2_img: prog_card_2_img,\n          prog_card_2_link: prog_card_2_link,\n          prog_card_2_type: prog_card_2_type,\n          prog_card_2_header: prog_card_2_header,\n          prog_card_3_img: prog_card_3_img,\n          prog_card_3_link: prog_card_3_link,\n          prog_card_3_type: prog_card_3_type,\n          prog_card_3_header: prog_card_3_header,\n          prog_card_4_img: prog_card_4_img,\n          prog_card_4_link: prog_card_4_link,\n          prog_card_4_type: prog_card_4_type,\n          prog_card_4_header: prog_card_4_header,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  onChange(e) {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n      submitClass: \"primary\",\n      submitDisable: false,\n      edited: false,\n    });\n    // console.log(this.state);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const prog_section = {\n      section_display: this.state.ld1_section_display,\n      section_content: {\n        prog_card_1_img: this.state.prog_card_1_img,\n        prog_card_1_link: this.state.prog_card_1_link,\n        prog_card_1_type: this.state.prog_card_1_type,\n        prog_card_1_header: this.state.prog_card_1_header,\n\n        prog_card_2_img: this.state.prog_card_2_img,\n        prog_card_2_link: this.state.prog_card_2_link,\n        prog_card_2_type: this.state.prog_card_2_type,\n        prog_card_2_header: this.state.prog_card_2_header,\n\n        prog_card_3_img: this.state.prog_card_3_img,\n        prog_card_3_link: this.state.prog_card_3_link,\n        prog_card_3_type: this.state.prog_card_3_type,\n        prog_card_3_header: this.state.prog_card_3_header,\n\n        prog_card_4_img: this.state.prog_card_4_img,\n        prog_card_4_link: this.state.prog_card_4_link,\n        prog_card_4_type: this.state.prog_card_4_type,\n        prog_card_4_header: this.state.prog_card_4_header,\n      },\n    };\n\n    console.log(prog_section);\n\n    axios\n      .post(`${SERVER_URI}/api/postLensDesigns1`, prog_section)\n      .then((res) => console.log(res));\n\n    // window.location = `${ADMIN_URI}/#/landing/LensDesigns1/`;\n    this.setState({\n      edited: true,\n      submitClass: \"disabled\",\n      submitDisable: true,\n    });\n  }\n\n  toggleCheckbox(e) {\n    e.preventDefault();\n    this.setState({\n      ld1_section_display: !this.state.ld1_section_display,\n      submitClass: \"primary\",\n      submitDisable: false,\n      edited: false,\n    });\n  }\n\n  render() {\n    return (\n      <CRow>\n        {this.state.edited === true ? (\n          <div>\n            <FlashMessage duration={3000}></FlashMessage>\n            <CToaster>\n              <CToast\n                key={this.state.fixedToasts}\n                show={true}\n                autohide={1000}\n                fade={true}\n                header=\"CToast fixed component\"\n              >\n                <CAlert width=\"1\" color=\"success\" dismissible={`${true}`}>\n                  <strong>Updated</strong> Successfully...\n                </CAlert>\n              </CToast>\n            </CToaster>\n          </div>\n        ) : (\n          <p></p>\n        )}\n\n        <CCol xs=\"12\">\n          <CForm onSubmit={this.onSubmit}>\n            {/* show section */}\n            <CFormGroup>\n              {/* #1 */}\n              {/* Checkbox to Toggle Sections */}\n\n              {/* OLD CHECKBOX *RIP* */}\n              {/* <h4>{this.state.ld1_section_display ? \"Show\" : \"hide\"}</h4>\n              <a href=\"#\" role=\"button\" onClick={this.toggleCheckbox}>\n                <input\n                  type=\"checkbox\"\n                  title=\"ld1_section_display\"\n                  name=\"ld1_section_display\"\n                  checked={this.state.ld1_section_display}\n                  readOnly\n                />_Show Section</a> */}\n\n              {/* NEW LOOK - it's all about that */}\n              <a\n                className=\"show_design_link\"\n                href=\"#\"\n                role=\"button\"\n                onClick={this.toggleCheckbox}\n              >\n                <label className=\"show_design\">\n                  <input\n                    className=\"label__checkbox\"\n                    id=\"show_design\"\n                    name=\"show_design\"\n                    type=\"checkbox\"\n                    checked={this.state.ld1_section_display}\n                    readOnly\n                  />\n                  <span className=\"label__text\">\n                    <span className=\"label__check\">\n                      <i className=\"fa fa-check icon\"></i>\n                    </span>\n                  </span>\n                  <label className=\"show_design_label\" htmlFor=\"show_design\">\n                    Show Section\n                  </label>\n                </label>\n              </a>\n            </CFormGroup>\n\n            <h6>{this.state.name}</h6>\n\n            {/* card #1 */}\n            <Accordion\n              title=\"Card A\"\n              content={\n                <div>\n                  <CFormGroup>\n                    {/* #1 name */}\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText id=\"basic-addon3\">\n                        Paste Image URL\n                      </CInputGroupText>\n                      <CInput\n                        type=\"text\"\n                        id=\"prog_card_1_img\"\n                        name=\"prog_card_1_img\"\n                        placeholder=\"prog_card_1_img\"\n                        value={this.state.prog_card_1_img}\n                        onChange={this.onChange}\n                      />\n                    </CInputGroup>\n                    <br />\n                    <CInput\n                      type=\"text\"\n                      id=\"prog_card_1_link\"\n                      name=\"prog_card_1_link\"\n                      placeholder=\"prog_card_1_link\"\n                      value={this.state.prog_card_1_link}\n                      onChange={this.onChange}\n                    />\n                    <br />\n                    <CInput\n                      type=\"text\"\n                      id=\"prog_card_1_type\"\n                      name=\"prog_card_1_type\"\n                      placeholder=\"prog_card_1_type\"\n                      value={this.state.prog_card_1_type}\n                      onChange={this.onChange}\n                    />\n                    <br />\n                    <CInput\n                      type=\"text\"\n                      id=\"prog_card_1_header\"\n                      name=\"prog_card_1_header\"\n                      placeholder=\"prog_card_1_header\"\n                      value={this.state.prog_card_1_header}\n                      onChange={this.onChange}\n                    />\n                  </CFormGroup>\n                </div>\n              }\n            />\n            <hr />\n            <br />\n            {/* card #2 */}\n            <Accordion\n              title=\"Card B\"\n              content={\n                <div>\n                  <CFormGroup>\n                    {/* #1 name */}\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText id=\"basic-addon3\">\n                        Paste Image URL\n                      </CInputGroupText>\n                      <CInput\n                        type=\"text\"\n                        id=\"prog_card_2_img\"\n                        name=\"prog_card_2_img\"\n                        placeholder=\"prog_card_2_img\"\n                        value={this.state.prog_card_2_img}\n                        onChange={this.onChange}\n                      />\n                    </CInputGroup>\n                    <br />\n                    <CInput\n                      type=\"text\"\n                      id=\"prog_card_2_link\"\n                      name=\"prog_card_2_link\"\n                      placeholder=\"prog_card_2_link\"\n                      value={this.state.prog_card_2_link}\n                      onChange={this.onChange}\n                    />\n                    <br />\n                    <CInput\n                      type=\"text\"\n                      id=\"prog_card_2_type\"\n                      name=\"prog_card_2_type\"\n                      placeholder=\"prog_card_2_type\"\n                      value={this.state.prog_card_2_type}\n                      onChange={this.onChange}\n                    />\n                    <br />\n                    <CInput\n                      type=\"text\"\n                      id=\"prog_card_2_header\"\n                      name=\"prog_card_2_header\"\n                      placeholder=\"prog_card_2_header\"\n                      value={this.state.prog_card_2_header}\n                      onChange={this.onChange}\n                    />\n                  </CFormGroup>\n                </div>\n              }\n            />\n            <hr />\n            <br />\n            {/* card #3 */}\n            <Accordion\n              title=\"Card C\"\n              content={\n                <div>\n                  <CFormGroup>\n                    {/* #1 name */}\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText id=\"basic-addon3\">\n                        Paste Image URL\n                      </CInputGroupText>\n                      <CInput\n                        type=\"text\"\n                        id=\"prog_card_3_img\"\n                        name=\"prog_card_3_img\"\n                        placeholder=\"prog_card_3_img\"\n                        value={this.state.prog_card_3_img}\n                        onChange={this.onChange}\n                      />\n                    </CInputGroup>\n                    <br />\n                    <CInput\n                      type=\"text\"\n                      id=\"prog_card_3_link\"\n                      name=\"prog_card_3_link\"\n                      placeholder=\"prog_card_3_link\"\n                      value={this.state.prog_card_3_link}\n                      onChange={this.onChange}\n                    />\n                    <br />\n                    <CInput\n                      type=\"text\"\n                      id=\"prog_card_3_type\"\n                      name=\"prog_card_3_type\"\n                      placeholder=\"prog_card_3_type\"\n                      value={this.state.prog_card_3_type}\n                      onChange={this.onChange}\n                    />\n                    <br />\n                    <CInput\n                      type=\"text\"\n                      id=\"prog_card_3_header\"\n                      name=\"prog_card_3_header\"\n                      placeholder=\"prog_card_3_header\"\n                      value={this.state.prog_card_3_header}\n                      onChange={this.onChange}\n                    />\n                  </CFormGroup>\n                </div>\n              }\n            />\n            <hr />\n            <br />\n            {/* card #4 */}\n            <Accordion\n              title=\"Card D\"\n              content={\n                <div>\n                  <CFormGroup>\n                    {/* #1 name */}\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText id=\"basic-addon3\">\n                        Paste Image URL\n                      </CInputGroupText>\n                      <CInput\n                        type=\"text\"\n                        id=\"prog_card_4_img\"\n                        name=\"prog_card_4_img\"\n                        placeholder=\"prog_card_4_img\"\n                        value={this.state.prog_card_4_img}\n                        onChange={this.onChange}\n                      />\n                    </CInputGroup>\n                    <br />\n                    <CInput\n                      type=\"text\"\n                      id=\"prog_card_4_link\"\n                      name=\"prog_card_4_link\"\n                      placeholder=\"prog_card_4_link\"\n                      value={this.state.prog_card_4_link}\n                      onChange={this.onChange}\n                    />\n                    <br />\n                    <CInput\n                      type=\"text\"\n                      id=\"prog_card_4_type\"\n                      name=\"prog_card_4_type\"\n                      placeholder=\"prog_card_4_type\"\n                      value={this.state.prog_card_4_type}\n                      onChange={this.onChange}\n                    />\n                    <br />\n                    <CInput\n                      type=\"text\"\n                      id=\"prog_card_4_header\"\n                      name=\"prog_card_4_header\"\n                      placeholder=\"prog_card_4_header\"\n                      value={this.state.prog_card_4_header}\n                      onChange={this.onChange}\n                    />\n                  </CFormGroup>\n                </div>\n              }\n            />\n            <hr />\n            <br />\n\n            {/* submit btn */}\n            <CFormGroup>\n              <CInput\n                type=\"submit\"\n                id=\"submit\"\n                name=\"submit\"\n                placeholder=\"submit\"\n                className={`bg-${this.state.submitClass} text-white bold`}\n                value=\"SUBMIT\"\n                disabled={this.state.submitDisable}\n              />\n            </CFormGroup>\n          </CForm>\n        </CCol>\n\n        <UploadImg />\n\n        {/* <CCol>\n          <CForm onSubmit={this.onSubmitImgFile}>\n            <CInputFile name=\"prog_card_1_imgfile\" />\n            <CInput\n              type=\"submit\"\n              id=\"submit\"\n              name=\"submit\"\n              placeholder=\"submit\"\n              className=\"bg-primary text-white bold\"\n              value=\"SUBMIT\"\n            />\n          </CForm>\n        </CCol> */}\n      </CRow>\n    );\n  }\n}\n\nexport default LensDesigns1;\n","import React, { Component } from \"react\";\n\nimport {\n  CForm,\n  CInput,\n  CFormGroup,\n  CCol,\n  CRow,\n  CAlert,\n  CInputGroupText,\n  CInputGroup,\n  CToaster,\n  CToast,\n} from \"@coreui/react\";\n\nimport UploadImg from \"../../UploadImg/UploadImg\";\n\nimport axios from \"axios\";\nimport FlashMessage from \"react-flash-message\";\n\nimport SERVER_URI from \"../../../reusable/api\";\n\nclass LensInfo1 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false,\n      activeKey: 0,\n      edited: false,\n      submitClass: \"disabled\",\n      submitDisable: true,\n\n      image: \"...\",\n      url: \"...\",\n      progress: \"...\",\n\n      li1_section_display: true,\n      li1_header: \"...\",\n      li1_desc: \"...\",\n      li1_img: \"...\",\n      li1_parag_1: \"...\",\n      li1_parag_2: \"...\",\n      li1_parag_3: \"...\",\n      li1_parag_4: \"...\",\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.toggleCheckbox = this.toggleCheckbox.bind(this);\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios\n      .get(`${SERVER_URI}/api/getLensInfo1`)\n      .then((response) => {\n        // console.log(response.data);\n        const {\n          li1_section_display,\n          li1_header,\n          li1_desc,\n          li1_img,\n          li1_parag_1,\n          li1_parag_2,\n          li1_parag_3,\n          li1_parag_4,\n        } = response.data.section_content;\n        this.setState({\n          li1_section_display: li1_section_display,\n          li1_header: li1_header,\n          li1_desc: li1_desc,\n          li1_img: li1_img,\n          li1_parag_1: li1_parag_1,\n          li1_parag_2: li1_parag_2,\n          li1_parag_3: li1_parag_3,\n          li1_parag_4: li1_parag_4,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  onChange(e) {\n    const value = e.target.value;\n    console.log(value);\n    this.setState({\n      [e.target.name]: value,\n      submitClass: \"primary\",\n      submitDisable: false,\n      edited: false,\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const prog_section = {\n      li1_section_display: this.state.li1_section_display,\n      li1_header: this.state.li1_header,\n      li1_desc: this.state.li1_desc,\n      li1_img: this.state.li1_img,\n      li1_parag_1: this.state.li1_parag_1,\n      li1_parag_2: this.state.li1_parag_2,\n      li1_parag_3: this.state.li1_parag_3,\n      li1_parag_4: this.state.li1_parag_4,\n    };\n\n    axios\n      .post(`${SERVER_URI}/api/postLensInfo1`, prog_section)\n      .then((res) => console.log(res));\n\n    // window.location = `${ADMIN_URI}/#/landing/LensInfo1/`;\n    this.setState({\n      edited: true,\n      submitClass: \"disabled\",\n      submitDisable: true,\n    });\n  }\n\n  toggleCheckbox(e) {\n    e.preventDefault();\n    this.setState({\n      li1_section_display: !this.state.li1_section_display,\n      submitClass: \"primary\",\n      submitDisable: false,\n      edited: false,\n    });\n  }\n\n  render() {\n    return (\n      <CRow>\n        {this.state.edited === true ? (\n          <div>\n            <FlashMessage duration={3000}></FlashMessage>\n            <CToaster>\n              <CToast\n                key={this.state.fixedToasts}\n                show={true}\n                autohide={1000}\n                fade={true}\n                header=\"CToast fixed component\"\n              >\n                <CAlert width=\"1\" color=\"success\" dismissible={`${true}`}>\n                  <strong>Updated</strong> Successfully...\n                </CAlert>\n              </CToast>\n            </CToaster>\n          </div>\n        ) : (\n          <p></p>\n        )}\n\n        <CCol xs=\"12\">\n          <CForm onSubmit={this.onSubmit}>\n            <CFormGroup>\n              {/* #1 */}\n              {/* Checkbox to Toggle Sections */}\n              {/* OLD CHECKBOX *RIP* */}\n              {/* <h4>{this.state.li1_section_display ? \"Show\" : \"hide\"}</h4>\n              <a href=\"#\" role=\"button\" onClick={this.toggleCheckbox}>\n                <input\n                  type=\"checkbox\"\n                  title=\"li1_section_display\"\n                  name=\"li1_section_display\"\n                  checked={this.state.li1_section_display}\n                  readOnly\n                />_Show Section</a> */}\n              {/* <h4>{this.state.design_state ? \"Show\" : \"hide\"}</h4> */}\n\n              {/* NEW LOOK - it's all about that */}\n              <a\n                className=\"show_design_link\"\n                href=\"#\"\n                role=\"button\"\n                onClick={this.toggleCheckbox}\n              >\n                <label className=\"show_design\">\n                  <input\n                    className=\"label__checkbox\"\n                    id=\"show_design\"\n                    name=\"show_design\"\n                    type=\"checkbox\"\n                    checked={this.state.li1_section_display}\n                    readOnly\n                  />\n                  <span className=\"label__text\">\n                    <span className=\"label__check\">\n                      <i className=\"fa fa-check icon\"></i>\n                    </span>\n                  </span>\n                  <label className=\"show_design_label\" htmlFor=\"show_design\">\n                    Show Section\n                  </label>\n                </label>\n              </a>\n            </CFormGroup>\n            <CFormGroup>\n              {/* #1 name */}\n              <h6 className=\"badgeee\">{this.state.li1_header}</h6>\n              <CInput\n                type=\"text\"\n                id=\"li1_header\"\n                name=\"li1_header\"\n                placeholder=\"li1_header\"\n                value={this.state.li1_header}\n                onChange={this.onChange}\n              />\n              <br />\n              <CInput\n                type=\"text\"\n                id=\"li1_desc\"\n                name=\"li1_desc\"\n                placeholder=\"li1_desc\"\n                value={this.state.li1_desc}\n                onChange={this.onChange}\n              />\n              <br />\n              <CInputGroup className=\"mb-3\">\n                <CInputGroupText id=\"basic-addon3\">\n                  Paste Image URL\n                </CInputGroupText>\n                <CInput\n                  type=\"text\"\n                  id=\"li1_img\"\n                  name=\"li1_img\"\n                  placeholder=\"li1_img\"\n                  value={this.state.li1_img}\n                  onChange={this.onChange}\n                />\n              </CInputGroup>\n              <br />\n              <hr />\n\n              <h6 className=\"badgeee\">Top Left Parag</h6>\n              <CInput\n                type=\"text\"\n                id=\"li1_parag_1\"\n                name=\"li1_parag_1\"\n                placeholder=\"li1_parag_1\"\n                value={this.state.li1_parag_1}\n                onChange={this.onChange}\n              />\n              <br />\n              <hr />\n\n              <h6 className=\"badgeee\">Top Right Parag</h6>\n              <CInput\n                type=\"text\"\n                id=\"li1_parag_2\"\n                name=\"li1_parag_2\"\n                placeholder=\"li1_parag_2\"\n                value={this.state.li1_parag_2}\n                onChange={this.onChange}\n              />\n              <br />\n              <hr />\n\n              <h6 className=\"badgeee\">Bottom Left Parag</h6>\n              <CInput\n                type=\"text\"\n                id=\"li1_parag_3\"\n                name=\"li1_parag_3\"\n                placeholder=\"li1_parag_3\"\n                value={this.state.li1_parag_3}\n                onChange={this.onChange}\n              />\n              <br />\n              <hr />\n\n              <h6 className=\"badgeee\">Bottom Right Parag</h6>\n              <CInput\n                type=\"text\"\n                id=\"li1_parag_4\"\n                name=\"li1_parag_4\"\n                placeholder=\"li1_parag_4\"\n                value={this.state.li1_parag_4}\n                onChange={this.onChange}\n              />\n            </CFormGroup>\n\n            <hr />\n            <br />\n\n            <CFormGroup>\n              <CInput\n                type=\"submit\"\n                id=\"submit\"\n                name=\"submit\"\n                placeholder=\"submit\"\n                className={`bg-${this.state.submitClass} text-white bold`}\n                value=\"SUBMIT\"\n                disabled={this.state.submitDisable}\n              />\n            </CFormGroup>\n          </CForm>\n        </CCol>\n\n        <UploadImg />\n      </CRow>\n    );\n  }\n}\n\nexport default LensInfo1;\n","import React, { Component } from \"react\";\n\nimport {\n  CForm,\n  CInput,\n  CFormGroup,\n  CCol,\n  CRow,\n  CAlert,\n  CInputGroupText,\n  CInputGroup,\n  CToaster,\n  CToast,\n  CTextarea,\n} from \"@coreui/react\";\n\nimport UploadImg from \"../../UploadImg/UploadImg\";\n\nimport axios from \"axios\";\nimport FlashMessage from \"react-flash-message\";\n\nimport SERVER_URI from \"../../../reusable/api\";\n\nclass LensInfo3 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false,\n      activeKey: 0,\n      edited: false,\n      submitClass: \"disabled\",\n      submitDisable: true,\n\n      image: \"...\",\n      url: \"...\",\n      progress: \"...\",\n\n      li3_section_display: true,\n      li3_header: \"...\",\n      li3_desc: \"...\",\n      li3_img: \"...\",\n      li3_parag_1: \"...\",\n      li3_parag_2: \"...\",\n      li3_parag_3: \"...\",\n      li3_parag_4: \"...\",\n      li3_parag_5: \"...\",\n      li3_parag_6: \"...\",\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.toggleCheckbox = this.toggleCheckbox.bind(this);\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios\n      .get(`${SERVER_URI}/api/getLensInfo3`)\n      .then((response) => {\n        // console.log(response.data);\n        const {\n          li3_section_display,\n          li3_header,\n          li3_desc,\n          li3_img,\n          li3_parag_1,\n          li3_parag_2,\n          li3_parag_3,\n          li3_parag_4,\n          li3_parag_5,\n          li3_parag_6,\n        } = response.data.section_content;\n        this.setState({\n          li3_section_display: li3_section_display,\n          li3_header: li3_header,\n          li3_desc: li3_desc,\n          li3_img: li3_img,\n          li3_parag_1: li3_parag_1,\n          li3_parag_2: li3_parag_2,\n          li3_parag_3: li3_parag_3,\n          li3_parag_4: li3_parag_4,\n          li3_parag_5: li3_parag_5,\n          li3_parag_6: li3_parag_6,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  onChange(e) {\n    const value = e.target.value;\n    console.log(value);\n    this.setState({\n      [e.target.name]: value,\n      submitClass: \"primary\",\n      submitDisable: false,\n      edited: false,\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const prog_section = {\n      li3_section_display: this.state.li3_section_display,\n      li3_header: this.state.li3_header,\n      li3_desc: this.state.li3_desc,\n      li3_img: this.state.li3_img,\n      li3_parag_1: this.state.li3_parag_1,\n      li3_parag_2: this.state.li3_parag_2,\n      li3_parag_3: this.state.li3_parag_3,\n      li3_parag_4: this.state.li3_parag_4,\n      li3_parag_5: this.state.li3_parag_5,\n      li3_parag_6: this.state.li3_parag_6,\n    };\n\n    axios\n      .post(`${SERVER_URI}/api/postLensInfo3`, prog_section)\n      .then((res) => console.log(res));\n\n    // window.location = `${ADMIN_URI}/#/landing/LensInfo1/`;\n    this.setState({\n      edited: true,\n      submitClass: \"disabled\",\n      submitDisable: true,\n    });\n  }\n\n  toggleCheckbox(e) {\n    e.preventDefault();\n    this.setState({\n      li3_section_display: !this.state.li3_section_display,\n      submitClass: \"primary\",\n      submitDisable: false,\n      edited: false,\n    });\n  }\n\n  render() {\n    return (\n      <CRow>\n        {this.state.edited === true ? (\n          <div>\n            <FlashMessage duration={3000} />\n            <CToaster>\n              <CToast\n                key={this.state.fixedToasts}\n                show={true}\n                autohide={1000}\n                fade={true}\n                header=\"CToast fixed component\"\n              >\n                <CAlert width=\"1\" color=\"success\" dismissible={`${true}`}>\n                  <strong>Updated</strong> Successfully...\n                </CAlert>\n              </CToast>\n            </CToaster>\n          </div>\n        ) : (\n          <p></p>\n        )}\n\n        <CCol xs=\"12\">\n          <CForm onSubmit={this.onSubmit}>\n            <CFormGroup>\n              {/* #1 */}\n              {/* Checkbox to Toggle Sections */}\n              {/* OLD CHECKBOX *RIP* */}\n              {/* <h4>{this.state.li3_section_display ? \"Show\" : \"hide\"}</h4>\n              <a href=\"#\" role=\"button\" onClick={this.toggleCheckbox}>\n                <input\n                  type=\"checkbox\"\n                  title=\"li3_section_display\"\n                  name=\"li3_section_display\"\n                  checked={this.state.li3_section_display}\n                  readOnly\n                />_Show Section</a> */}\n              {/* <h4>{this.state.design_state ? \"Show\" : \"hide\"}</h4> */}\n\n              {/* NEW LOOK - it's all about that */}\n              <a\n                className=\"show_design_link\"\n                href=\"#\"\n                role=\"button\"\n                onClick={this.toggleCheckbox}\n              >\n                <label className=\"show_design\">\n                  <input\n                    className=\"label__checkbox\"\n                    id=\"show_design\"\n                    name=\"show_design\"\n                    type=\"checkbox\"\n                    checked={this.state.li3_section_display}\n                    readOnly\n                  />\n                  <span className=\"label__text\">\n                    <span className=\"label__check\">\n                      <i className=\"fa fa-check icon\"></i>\n                    </span>\n                  </span>\n                  <label className=\"show_design_label\" htmlFor=\"show_design\">\n                    Show Section\n                  </label>\n                </label>\n              </a>\n            </CFormGroup>\n            <CFormGroup>\n              {/* #1 name */}\n              <h6>{this.state.li3_header}</h6>\n              <CInput\n                type=\"text\"\n                id=\"li3_header\"\n                name=\"li3_header\"\n                placeholder=\"li3_header\"\n                value={this.state.li3_header}\n                onChange={this.onChange}\n              />\n              <br />\n              <CInput\n                type=\"text\"\n                id=\"li3_desc\"\n                name=\"li3_desc\"\n                placeholder=\"li3_desc\"\n                value={this.state.li3_desc}\n                onChange={this.onChange}\n              />\n              <br />\n              <CInputGroup className=\"mb-3\">\n                <CInputGroupText id=\"basic-addon3\">\n                  Paste Image URL\n                </CInputGroupText>\n                <CInput\n                  type=\"text\"\n                  id=\"li3_img\"\n                  name=\"li3_img\"\n                  placeholder=\"li3_img\"\n                  value={this.state.li3_img}\n                  onChange={this.onChange}\n                />\n              </CInputGroup>\n              <br />\n              <hr />\n\n              <h6 className=\"badgeee\">Top Left Parag</h6>\n              <CInput\n                type=\"text\"\n                id=\"li3_parag_1\"\n                name=\"li3_parag_1\"\n                placeholder=\"li3_parag_1\"\n                value={this.state.li3_parag_1}\n                onChange={this.onChange}\n              />\n              <br />\n              <hr />\n\n              <h6 className=\"badgeee\">Top Right Parag</h6>\n              <CInput\n                type=\"text\"\n                id=\"li3_parag_2\"\n                name=\"li3_parag_2\"\n                placeholder=\"li3_parag_2\"\n                value={this.state.li3_parag_2}\n                onChange={this.onChange}\n              />\n              <br />\n              <hr />\n\n              <h6 className=\"badgeee\">Left Parag</h6>\n              <CInput\n                type=\"text\"\n                id=\"li3_parag_3\"\n                name=\"li3_parag_3\"\n                placeholder=\"li3_parag_3\"\n                value={this.state.li3_parag_3}\n                onChange={this.onChange}\n              />\n              <br />\n              <hr />\n\n              <h6 className=\"badgeee\">Right Parag</h6>\n              <CInput\n                type=\"text\"\n                id=\"li3_parag_4\"\n                name=\"li3_parag_4\"\n                placeholder=\"li3_parag_4\"\n                value={this.state.li3_parag_4}\n                onChange={this.onChange}\n              />\n              <br />\n              <hr />\n\n              <h6 className=\"badgeee\">Bottom Left Parag</h6>\n              <CInput\n                type=\"text\"\n                id=\"li3_parag_5\"\n                name=\"li3_parag_5\"\n                placeholder=\"li3_parag_5\"\n                value={this.state.li3_parag_5}\n                onChange={this.onChange}\n              />\n              <br />\n              <hr />\n\n              <h6 className=\"badgeee\">Bottom Right Parag</h6>\n              <CInput\n                type=\"text\"\n                id=\"li3_parag_6\"\n                name=\"li3_parag_6\"\n                placeholder=\"li3_parag_6\"\n                value={this.state.li3_parag_6}\n                onChange={this.onChange}\n              />\n            </CFormGroup>\n\n            <hr />\n            <br />\n\n            <CFormGroup>\n              <CInput\n                type=\"submit\"\n                id=\"submit\"\n                name=\"submit\"\n                placeholder=\"submit\"\n                className={`bg-${this.state.submitClass} text-white bold`}\n                value=\"SUBMIT\"\n                disabled={this.state.submitDisable}\n              />\n            </CFormGroup>\n          </CForm>\n        </CCol>\n\n        <UploadImg />\n      </CRow>\n    );\n  }\n}\n\nexport default LensInfo3;\n","import React, { Component } from \"react\";\n\nimport {\n  CForm,\n  CInput,\n  CFormGroup,\n  CCol,\n  CRow,\n  CAlert,\n  CInputGroupText,\n  CInputGroup,\n  CToaster,\n  CToast,\n} from \"@coreui/react\";\n\nimport Accordion from \"../../../reusable/Accordion/Accordion\";\n\nimport UploadImg from \"../../UploadImg/UploadImg\";\n\nimport axios from \"axios\";\nimport FlashMessage from \"react-flash-message\";\n\nimport SERVER_URI from \"../../../reusable/api\";\n\nclass LensDesigns1 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeKey: 0,\n      edited: false,\n      submitClass: \"disabled\",\n      submitDisable: true,\n\n      ld2_section_display: true,\n      ld2_header: \"...\",\n      ld2_desc: \"...\",\n      ld2_designs: [\n        {\n          img: \"\",\n          header: \"\",\n          sub_header: \"\",\n          content_before: \"\",\n          content_after: \"\",\n          specs: [\n            {\n              title: \"title\",\n              desc: \"asda\",\n            },\n          ],\n        },\n      ],\n    };\n\n    this.onChangeDesign = this.onChangeDesign.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onChangeSpec = this.onChangeSpec.bind(this);\n    this.toggleCheckbox = this.toggleCheckbox.bind(this);\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios\n      .get(`${SERVER_URI}/api/getLensDesigns2`)\n      .then((response) => {\n        const { ld2_section_display, ld2_header, ld2_desc, ld2_designs } =\n          response.data.section_content;\n\n        this.setState({\n          ld2_section_display: ld2_section_display,\n          ld2_header: ld2_header,\n          ld2_desc: ld2_desc,\n          ld2_designs: ld2_designs,\n        });\n\n        console.log(\"REQ_STATE:: \", this.state);\n        console.log(\"______________________________________\");\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    // console.log(this.state);\n\n    if (!this.state.submitDisable) {\n      const prog_section = {\n        ld2_section_display: this.state.ld2_section_display,\n        ld2_header: this.state.ld2_header,\n        ld2_desc: this.state.ld2_desc,\n        ld2_designs: this.state.ld2_designs,\n      };\n\n      console.log(\"POST_STATE:: \", prog_section);\n\n      axios\n        .post(`${SERVER_URI}/api/postLensDesigns2`, prog_section)\n        .then((res) => console.log(res));\n\n      // window.location = `${ADMIN_URI}/#/landing/LensDesigns1/`;\n      this.setState({\n        edited: true,\n        submitClass: \"disabled\",\n        submitDisable: true,\n      });\n    }\n  }\n\n  onChange(e) {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n      submitClass: \"primary\",\n      submitDisable: false,\n      edited: false,\n    });\n    // console.log(this.state);\n  }\n\n  onChangeDesign(e, i) {\n    const { value, name } = e.target;\n    // console.log('NAME:: ', name);\n    // console.log('VALUE:: ', value);\n    // console.log('_____________________________________');\n\n    this.setState((prevState) => {\n      const ld2_designs = [...prevState.ld2_designs];\n\n      ld2_designs[i] = {\n        ...ld2_designs[i],\n        [name]: value,\n      };\n\n      return {\n        submitClass: \"primary\",\n        submitDisable: false,\n        edited: false,\n        ld2_designs,\n      };\n    });\n\n    // console.log(this.state.ld2_designs[i]);\n    // console.log(this.state);\n  }\n\n  onChangeSpec(e, di, si) {\n    const { value, name } = e.target;\n    // console.log('NAME:: ', name);\n    // console.log('VALUE:: ', value);\n    // console.log('_____________________________________');\n\n    this.setState((prevState) => {\n      let temp = {\n        ...prevState,\n        ld2_designs: [...prevState.ld2_designs],\n      };\n\n      temp.ld2_designs[di].specs[si][name] = value;\n\n      return {\n        submitClass: \"primary\",\n        submitDisable: false,\n        edited: false,\n        temp,\n      };\n    });\n\n    // console.log(this.state.ld2_designs[i]);\n    // console.log(this.state);\n  }\n\n  toggleCheckbox(e) {\n    e.preventDefault();\n    this.setState({\n      ld2_section_display: !this.state.ld2_section_display,\n      submitClass: \"primary\",\n      submitDisable: false,\n      edited: false,\n    });\n  }\n\n  render() {\n    let listDesigns = this.state.ld2_designs.map((design, design_i) => (\n      <div key={design_i}>\n        <Accordion\n          title=\"Accordion Title\"\n          content={\n            <div>\n              {/* INPUT #1 Design IMG */}\n              <CInputGroup className=\"mb-3\">\n                <CInputGroupText id=\"basic-addon3\">\n                  Paste Image URL\n                </CInputGroupText>\n                <CInput\n                  type=\"text\"\n                  placeholder=\"design_img\"\n                  name=\"img\"\n                  value={design.img}\n                  onChange={(event) => this.onChangeDesign(event, design_i)}\n                />\n              </CInputGroup>\n              <br />\n              {/* INPUT #2 Design header */}\n              <CInput\n                type=\"text\"\n                id=\"header\"\n                name=\"header\"\n                placeholder=\"header\"\n                value={design.header}\n                onChange={(event) => this.onChangeDesign(event, design_i)}\n              />\n              <br />\n              {/* INPUT #3 Design sub_header */}\n              <CInput\n                type=\"text\"\n                id=\"sub_header\"\n                name=\"sub_header\"\n                placeholder=\"sub_header\"\n                value={design.sub_header}\n                onChange={(event) => this.onChangeDesign(event, design_i)}\n              />\n              <br />\n              {/* INPUT #4 Design content_before */}\n              <CInput\n                type=\"text\"\n                id=\"content_before\"\n                name=\"content_before\"\n                placeholder=\"content_before\"\n                value={design.content_before}\n                onChange={(event) => this.onChangeDesign(event, design_i)}\n              />\n              <br />\n              {/* INPUT #5 Design content_after */}\n              <CInput\n                type=\"text\"\n                id=\"content_after\"\n                name=\"content_after\"\n                placeholder=\"content_after\"\n                value={design.content_after}\n                onChange={(event) => this.onChangeDesign(event, design_i)}\n              />\n              <br />\n              {design.specs.map((spec, spec_i) => (\n                <div key={spec_i}>\n                  <CInput\n                    type=\"text\"\n                    id=\"title\"\n                    name=\"title\"\n                    placeholder=\"title\"\n                    value={spec.title}\n                    onChange={(event) =>\n                      this.onChangeSpec(event, design_i, spec_i)\n                    }\n                  />\n                  <CInput\n                    type=\"text\"\n                    id=\"desc\"\n                    name=\"desc\"\n                    placeholder=\"desc\"\n                    value={spec.desc}\n                    onChange={(event) =>\n                      this.onChangeSpec(event, design_i, spec_i)\n                    }\n                  />\n                </div>\n              ))}\n            </div>\n          }\n        />\n        <hr />\n      </div>\n    ));\n    return (\n      <CRow>\n        {this.state.edited === true ? (\n          <div>\n            <FlashMessage duration={3000}></FlashMessage>\n            <CToaster>\n              <CToast\n                key={this.state.fixedToasts}\n                show={true}\n                autohide={1000}\n                fade={true}\n                header=\"CToast fixed component\"\n              >\n                <CAlert width=\"1\" color=\"success\" dismissible={`${true}`}>\n                  <strong>Updated</strong> Successfully...\n                </CAlert>\n              </CToast>\n            </CToaster>\n          </div>\n        ) : (\n          <p></p>\n        )}\n\n        <CCol xs=\"12\">\n          <CForm onSubmit={this.onSubmit}>\n            <CFormGroup>\n              {/* #1 */}\n              {/* Checkbox to Toggle Sections */}\n              {/* <h4>{this.state.ld2_section_display ? \"Show\" : \"hide\"}</h4>\n              <a href=\"#\" role=\"button\" onClick={this.toggleCheckbox}>\n                <input\n                  type=\"checkbox\"\n                  title=\"ld2_section_display\"\n                  name=\"ld2_section_display\"\n                  checked={this.state.ld2_section_display}\n                  readOnly\n                />_Show Section</a> */}\n              {/* OLD CHECKBOX *RIP* */}\n              {/* <h4>{this.state.ld1_section_display ? \"Show\" : \"hide\"}</h4>\n              <a href=\"#\" role=\"button\" onClick={this.toggleCheckbox}>\n                <input\n                  type=\"checkbox\"\n                  title=\"ld1_section_display\"\n                  name=\"ld1_section_display\"\n                  checked={this.state.ld1_section_display}\n                  readOnly\n                />_Show Section</a> */}\n              {/* <h4>{this.state.design_state ? \"Show\" : \"hide\"}</h4> */}\n\n              {/* NEW LOOK - it's all about that */}\n              <a\n                className=\"show_design_link\"\n                href=\"#\"\n                role=\"button\"\n                onClick={this.toggleCheckbox}\n              >\n                <label className=\"show_design\">\n                  <input\n                    className=\"label__checkbox\"\n                    id=\"show_design\"\n                    name=\"show_design\"\n                    type=\"checkbox\"\n                    checked={this.state.ld2_section_display}\n                    readOnly\n                  />\n                  <span className=\"label__text\">\n                    <span className=\"label__check\">\n                      <i className=\"fa fa-check icon\"></i>\n                    </span>\n                  </span>\n                  <label className=\"show_design_label\" htmlFor=\"show_design\">\n                    Show Section\n                  </label>\n                </label>\n              </a>\n            </CFormGroup>\n\n            <CFormGroup>\n              {/* #1 Section Header */}\n              <h6>{this.state.ld2_header}</h6>\n              <CInput\n                type=\"text\"\n                id=\"ld2_header\"\n                name=\"ld2_header\"\n                placeholder=\"ld2_header\"\n                value={this.state.ld2_header}\n                onChange={this.onChange}\n              />\n              <br />\n              <CInput\n                type=\"text\"\n                id=\"ld2_desc\"\n                name=\"ld2_desc\"\n                placeholder=\"ld2_desc\"\n                value={this.state.ld2_desc}\n                onChange={this.onChange}\n              />\n              <hr />\n              {/* {this.state.ld2_designs[0].sub_header} */}\n\n              {listDesigns}\n            </CFormGroup>\n            <br />\n            <CFormGroup>\n              <CInput\n                type=\"submit\"\n                id=\"submit\"\n                name=\"submit\"\n                placeholder=\"submit\"\n                className={`bg-${this.state.submitClass} text-white bold`}\n                value=\"SUBMIT\"\n                disabled={this.state.submitDisable}\n              />\n            </CFormGroup>\n          </CForm>\n        </CCol>\n\n        <br />\n        <br />\n        <br />\n        <hr />\n\n        <UploadImg />\n      </CRow>\n    );\n  }\n}\n\nexport default LensDesigns1;\n","import React, { Component } from \"react\";\n\nimport {\n  CForm,\n  CInput,\n  CFormGroup,\n  CCol,\n  CRow,\n  CAlert,\n  CToast,\n  CToaster,\n  CInputGroup,\n  CInputGroupText,\n} from \"@coreui/react\";\n\nimport Accordion from \"../../../reusable/Accordion/Accordion\";\n\nimport UploadImg from \"../../UploadImg/UploadImg\";\n\nimport axios from \"axios\";\nimport FlashMessage from \"react-flash-message\";\n\nimport SERVER_URI from \"../../../reusable/api\";\n\nclass LensInfo2 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeKey: 0,\n      edited: false,\n      submitClass: \"disabled\",\n      submitDisable: true,\n\n      fixedToasts: 0,\n\n      li2_section_display: true,\n      li2_header: \"...\",\n      li2_desc: \"...\",\n      li2_image: \"...\",\n      li2_lft_parags: [\n        {\n          parag_header: \"\",\n          parag_content: \"\",\n        },\n      ],\n      li2_rght_parags: [\n        {\n          parag_header: \"\",\n          parag_content: \"\",\n        },\n      ],\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onChangeLft = this.onChangeLft.bind(this);\n    this.onChangeRght = this.onChangeRght.bind(this);\n    this.addFixedToast = this.addFixedToast.bind(this);\n    this.toggleCheckbox = this.toggleCheckbox.bind(this);\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios\n      .get(`${SERVER_URI}/api/getLensInfo2`)\n      .then((response) => {\n        const {\n          li2_section_display,\n          li2_header,\n          li2_desc,\n          li2_image,\n          li2_lft_parags,\n          li2_rght_parags,\n        } = response.data.section_content;\n        this.setState({\n          li2_section_display: li2_section_display,\n          li2_header: li2_header,\n          li2_desc: li2_desc,\n          li2_image: li2_image,\n          li2_lft_parags: li2_lft_parags,\n          li2_rght_parags: li2_rght_parags,\n        });\n\n        console.log(\"REQ_STATE:: \", this.state);\n        console.log(\"______________________________________\");\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    // console.log(this.state);\n\n    if (!this.state.submitDisable) {\n      const prog_section = {\n        li2_section_display: this.state.li2_section_display,\n        li2_header: this.state.li2_header,\n        li2_desc: this.state.li2_desc,\n        li2_image: this.state.li2_image,\n        li2_lft_parags: this.state.li2_lft_parags,\n        li2_rght_parags: this.state.li2_rght_parags,\n      };\n\n      console.log(\"POST_STATE:: \", prog_section);\n\n      axios\n        .post(`${SERVER_URI}/api/postLensInfo2`, prog_section)\n        .then((res) => console.log(res));\n\n      // window.location = `${ADMIN_URI}/#/landing/LensInfo2/`;\n      this.setState({\n        edited: true,\n        submitClass: \"disabled\",\n        submitDisable: true,\n      });\n      this.addFixedToast();\n    }\n  }\n\n  onChange(e) {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n      submitClass: \"primary\",\n      submitDisable: false,\n      edited: false,\n    });\n    // console.log(this.state);\n  }\n\n  onChangeLft(e, i) {\n    const { value, name } = e.target;\n    // console.log('NAME:: ', name);\n    // console.log('VALUE:: ', value);\n    // console.log('_____________________________________');\n\n    this.setState((prevState) => {\n      const li2_lft_parags = [...prevState.li2_lft_parags];\n\n      li2_lft_parags[i] = {\n        ...li2_lft_parags[i],\n        [name]: value,\n      };\n\n      return {\n        submitClass: \"primary\",\n        submitDisable: false,\n        edited: false,\n        li2_lft_parags,\n      };\n    });\n\n    // console.log(this.state.ld2_designs[i]);\n    // console.log(this.state);\n  }\n\n  onChangeRght(e, i) {\n    const { value, name } = e.target;\n    // console.log('NAME:: ', name);\n    // console.log('VALUE:: ', value);\n    // console.log('_____________________________________');\n\n    this.setState((prevState) => {\n      const li2_rght_parags = [...prevState.li2_rght_parags];\n\n      li2_rght_parags[i] = {\n        ...li2_rght_parags[i],\n        [name]: value,\n      };\n\n      return {\n        submitClass: \"primary\",\n        submitDisable: false,\n        edited: false,\n        li2_rght_parags,\n      };\n    });\n\n    // console.log(this.state.ld2_designs[i]);\n    // console.log(this.state);\n  }\n\n  addFixedToast() {\n    console.log(this.state.fixedToasts);\n    this.setState({\n      fixedToasts: this.state.fixedToasts + 1,\n    });\n  }\n\n  toggleCheckbox(e) {\n    e.preventDefault();\n    this.setState({\n      li2_section_display: !this.state.li2_section_display,\n      submitClass: \"primary\",\n      submitDisable: false,\n      edited: false,\n    });\n  }\n\n  render() {\n    let listLft = this.state.li2_lft_parags.map((parag, parag_i) => (\n      <div key={parag_i}>\n        <Accordion\n          title={`#${parag_i + 1} parag`}\n          content={\n            <div>\n              {/* INPUT #1 Parag Header */}\n              <CInput\n                type=\"text\"\n                id=\"parag_header\"\n                name=\"parag_header\"\n                placeholder=\"parag_header\"\n                value={parag.parag_header}\n                onChange={(event) => this.onChangeLft(event, parag_i)}\n              />\n              <br />\n              {/* INPUT #2 Parag Content */}\n              <CInput\n                type=\"text\"\n                id=\"parag_content\"\n                name=\"parag_content\"\n                placeholder=\"parag_content\"\n                value={parag.parag_content}\n                onChange={(event) => this.onChangeLft(event, parag_i)}\n              />\n              <br />\n            </div>\n          }\n        />\n      </div>\n    ));\n\n    let listRght = this.state.li2_rght_parags.map((parag, parag_i) => (\n      <div key={parag_i}>\n        <Accordion\n          title={`#${parag_i + 1} parag`}\n          content={\n            <div>\n              {/* INPUT #1 Parag Header */}\n              <CInput\n                type=\"text\"\n                id=\"parag_header\"\n                name=\"parag_header\"\n                placeholder=\"parag_header\"\n                value={parag.parag_header}\n                onChange={(event) => this.onChangeRght(event, parag_i)}\n              />\n              <br />\n              {/* INPUT #2 Parag Content */}\n              <CInput\n                type=\"text\"\n                id=\"parag_content\"\n                name=\"parag_content\"\n                placeholder=\"parag_content\"\n                value={parag.parag_content}\n                onChange={(event) => this.onChangeRght(event, parag_i)}\n              />\n              <br />\n            </div>\n          }\n        />\n      </div>\n    ));\n    return (\n      <CRow>\n        {this.state.edited === true ? (\n          <div>\n            <FlashMessage duration={3000}></FlashMessage>\n            <CToaster>\n              <CToast\n                key={this.state.fixedToasts}\n                show={true}\n                autohide={1000}\n                fade={true}\n                header=\"CToast fixed component\"\n              >\n                <CAlert width=\"1\" color=\"success\" dismissible={`${true}`}>\n                  <strong>Updated</strong> Successfully...\n                </CAlert>\n              </CToast>\n            </CToaster>\n          </div>\n        ) : (\n          <p></p>\n        )}\n\n        <CCol xs=\"12\">\n          <CForm onSubmit={this.onSubmit}>\n            <CFormGroup>\n              {/* #1 */}\n              {/* Checkbox to Toggle Section */}\n\n              {/* OLD CHECKBOX *RIP* */}\n              {/* <h4>{this.state.li2_section_display ? \"Show\" : \"hide\"}</h4>\n              <a href=\"#\" role=\"button\" onClick={this.toggleCheckbox}>\n                <input\n                  type=\"checkbox\"\n                  title=\"li2_section_display\"\n                  name=\"li2_section_display\"\n                  checked={this.state.li2_section_display}\n                  readOnly\n                />_Show Section</a> */}\n              {/* <h4>{this.state.design_state ? \"Show\" : \"hide\"}</h4> */}\n\n              {/* NEW LOOK - it's all about that */}\n              <a\n                className=\"show_design_link\"\n                href=\"#\"\n                role=\"button\"\n                onClick={this.toggleCheckbox}\n              >\n                <label className=\"show_design\">\n                  <input\n                    className=\"label__checkbox\"\n                    id=\"show_design\"\n                    name=\"show_design\"\n                    type=\"checkbox\"\n                    checked={this.state.li2_section_display}\n                    readOnly\n                  />\n                  <span className=\"label__text\">\n                    <span className=\"label__check\">\n                      <i className=\"fa fa-check icon\"></i>\n                    </span>\n                  </span>\n                  <label className=\"show_design_label\" htmlFor=\"show_design\">\n                    Show Section\n                  </label>\n                </label>\n              </a>\n            </CFormGroup>\n            <CFormGroup>\n              {/* #1 Section Header */}\n              <h6>{this.state.ld2_header}</h6>\n              <CInput\n                type=\"text\"\n                id=\"li2_header\"\n                name=\"li2_header\"\n                placeholder=\"li2_header\"\n                value={this.state.li2_header}\n                onChange={this.onChange}\n              />\n              <br />\n              <CInput\n                type=\"text\"\n                id=\"li2_desc\"\n                name=\"li2_desc\"\n                placeholder=\"li2_desc\"\n                value={this.state.li2_desc}\n                onChange={this.onChange}\n              />\n              <hr />\n\n              <h6>Left Parags</h6>\n\n              {listLft}\n\n              <hr />\n\n              <CInputGroup className=\"mb-3\">\n                <CInputGroupText id=\"basic-addon3\">Image URL</CInputGroupText>\n                <CInput\n                  type=\"text\"\n                  id=\"li2_image\"\n                  name=\"li2_image\"\n                  placeholder=\"li2_image\"\n                  value={this.state.li2_image}\n                  onChange={this.onChange}\n                />\n              </CInputGroup>\n\n              <hr />\n\n              <h6>Right Parags</h6>\n\n              {listRght}\n            </CFormGroup>\n            <br />\n            <CFormGroup>\n              <CInput\n                type=\"submit\"\n                id=\"submit\"\n                name=\"submit\"\n                placeholder=\"submit\"\n                className={`bg-${this.state.submitClass} text-white bold`}\n                value=\"SUBMIT\"\n                disabled={this.state.submitDisable}\n              />\n            </CFormGroup>\n          </CForm>\n        </CCol>\n\n        <br />\n        <br />\n        <br />\n        <hr />\n\n        <UploadImg />\n      </CRow>\n    );\n  }\n}\n\nexport default LensInfo2;\n","import React, { Component } from \"react\";\n\nimport {\n  CForm,\n  CInput,\n  CFormGroup,\n  CCol,\n  CRow,\n  CAlert,\n  CInputGroupText,\n  CInputGroup,\n  CToaster,\n  CToast,\n} from \"@coreui/react\";\n\nimport Accordion from \"../../../reusable/Accordion/Accordion\";\n\nimport UploadImg from \"../../UploadImg/UploadImg\";\n\nimport axios from \"axios\";\nimport FlashMessage from \"react-flash-message\";\n\nimport SERVER_URI from \"../../../reusable/api\";\n\nclass LensDesigns3 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeKey: 0,\n      edited: false,\n      submitClass: \"disabled\",\n      submitDisable: true,\n\n      ld3_section_display: true,\n      ld3_header: \"...\",\n      ld3_desc: \"...\",\n      ld3_imgs: [\n        {\n          img_title: \"...\",\n          img_sub: \"...\",\n          img_link: \"...\",\n        },\n      ],\n    };\n\n    this.onChangeImg = this.onChangeImg.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.toggleCheckbox = this.toggleCheckbox.bind(this);\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios\n      .get(`${SERVER_URI}/api/getLensDesigns3`)\n      .then((response) => {\n        const { ld3_section_display, ld3_header, ld3_desc, ld3_imgs } =\n          response.data.section_content;\n        this.setState({\n          ld3_section_display: ld3_section_display,\n          ld3_header: ld3_header,\n          ld3_desc: ld3_desc,\n          ld3_imgs: ld3_imgs,\n        });\n\n        console.log(\"REQ_STATE:: \", this.state);\n        console.log(\"______________________________________\");\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    // console.log(this.state);\n\n    if (!this.state.submitDisable) {\n      const prog_section = {\n        ld3_section_display: this.state.ld3_section_display,\n        ld3_header: this.state.ld3_header,\n        ld3_desc: this.state.ld3_desc,\n        ld3_imgs: this.state.ld3_imgs,\n      };\n\n      console.log(\"POST_STATE:: \", prog_section);\n\n      axios\n        .post(`${SERVER_URI}/api/postLensDesigns3`, prog_section)\n        .then((res) => console.log(res));\n\n      // window.location = `${ADMIN_URI}/#/landing/LensDesigns3/`;\n      this.setState({\n        edited: true,\n        submitClass: \"disabled\",\n        submitDisable: true,\n      });\n    }\n  }\n\n  onChange(e) {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n      submitClass: \"primary\",\n      submitDisable: false,\n      edited: false,\n    });\n    // console.log(this.state);\n  }\n\n  onChangeImg(e, i) {\n    const { value, name } = e.target;\n    // console.log('NAME:: ', name);\n    // console.log('VALUE:: ', value);\n    // console.log('_____________________________________');\n\n    this.setState((prevState) => {\n      const ld3_imgs = [...prevState.ld3_imgs];\n\n      ld3_imgs[i] = {\n        ...ld3_imgs[i],\n        [name]: value,\n      };\n\n      return {\n        submitClass: \"primary\",\n        submitDisable: false,\n        edited: false,\n        ld3_imgs,\n      };\n    });\n\n    // console.log(this.state.ld3_imgs[i]);\n    // console.log(this.state);\n  }\n\n  toggleCheckbox(e) {\n    e.preventDefault();\n    this.setState({\n      ld3_section_display: !this.state.ld3_section_display,\n      submitClass: \"primary\",\n      submitDisable: false,\n      edited: false,\n    });\n  }\n\n  render() {\n    let listImgs = this.state.ld3_imgs.map((img, img_i) => (\n      <div key={img_i}>\n        <Accordion\n          title=\"Design Img\"\n          content={\n            <div>\n              {/* INPUT #1 IMG Title */}\n              <CInput\n                type=\"text\"\n                id=\"img_title\"\n                name=\"img_title\"\n                placeholder=\"img_title\"\n                value={img.img_title}\n                onChange={(event) => this.onChangeImg(event, img_i)}\n              />\n              <br />\n              {/* INPUT #2 IMG Sub title */}\n              <CInput\n                type=\"text\"\n                id=\"img_sub\"\n                name=\"img_sub\"\n                placeholder=\"img_sub\"\n                value={img.img_sub}\n                onChange={(event) => this.onChangeImg(event, img_i)}\n              />\n              {/* INPUT #1 IMG Link*/}\n              <CInputGroup className=\"mb-3\">\n                <CInputGroupText id=\"basic-addon3\">\n                  Paste Image URL\n                </CInputGroupText>\n                <CInput\n                  type=\"text\"\n                  placeholder=\"img_link\"\n                  name=\"img_link\"\n                  value={img.img_link}\n                  onChange={(event) => this.onChangeImg(event, img_i)}\n                />\n              </CInputGroup>\n              <br />\n            </div>\n          }\n        />\n        <hr />\n      </div>\n    ));\n    return (\n      <CRow>\n        {this.state.edited === true ? (\n          <div>\n            <FlashMessage duration={3000}></FlashMessage>\n            <CToaster>\n              <CToast\n                key={this.state.fixedToasts}\n                show={true}\n                autohide={1000}\n                fade={true}\n                header=\"CToast fixed component\"\n              >\n                <CAlert width=\"1\" color=\"success\" dismissible={`${true}`}>\n                  <strong>Updated</strong> Successfully...\n                </CAlert>\n              </CToast>\n            </CToaster>\n          </div>\n        ) : (\n          <p></p>\n        )}\n\n        <CCol xs=\"12\">\n          <CForm onSubmit={this.onSubmit}>\n            <CFormGroup>\n              {/* #1 */}\n              {/* Checkbox to Toggle Sections */}\n\n              {/* OLD CHECKBOX *RIP* */}\n              {/* <h4>{this.state.ld3_section_display ? \"Show\" : \"hide\"}</h4>\n              <a href=\"#\" role=\"button\" onClick={this.toggleCheckbox}>\n                <input\n                  type=\"checkbox\"\n                  title=\"ld3_section_display\"\n                  name=\"ld3_section_display\"\n                  checked={this.state.ld3_section_display}\n                  readOnly\n                />_Show Section</a> */}\n              {/* <h4>{this.state.design_state ? \"Show\" : \"hide\"}</h4> */}\n\n              {/* NEW LOOK - it's all about that */}\n              <a\n                className=\"show_design_link\"\n                href=\"#\"\n                role=\"button\"\n                onClick={this.toggleCheckbox}\n              >\n                <label className=\"show_design\">\n                  <input\n                    className=\"label__checkbox\"\n                    id=\"show_design\"\n                    name=\"show_design\"\n                    type=\"checkbox\"\n                    checked={this.state.ld3_section_display}\n                    readOnly\n                  />\n                  <span className=\"label__text\">\n                    <span className=\"label__check\">\n                      <i className=\"fa fa-check icon\"></i>\n                    </span>\n                  </span>\n                  <label className=\"show_design_label\" htmlFor=\"show_design\">\n                    Show Section\n                  </label>\n                </label>\n              </a>\n            </CFormGroup>\n\n            <CFormGroup>\n              {/* #1 Section Header */}\n              <h6>{this.state.ld3_header}</h6>\n              <CInput\n                type=\"text\"\n                id=\"ld3_header\"\n                name=\"ld3_header\"\n                placeholder=\"ld3_header\"\n                value={this.state.ld3_header}\n                onChange={this.onChange}\n              />\n              <br />\n              <CInput\n                type=\"text\"\n                id=\"ld3_desc\"\n                name=\"ld3_desc\"\n                placeholder=\"ld3_desc\"\n                value={this.state.ld3_desc}\n                onChange={this.onChange}\n              />\n              <hr />\n              {/* {this.state.ld3_imgs[0].sub_header} */}\n\n              {listImgs}\n            </CFormGroup>\n            <br />\n            <CFormGroup>\n              <CInput\n                type=\"submit\"\n                id=\"submit\"\n                name=\"submit\"\n                placeholder=\"submit\"\n                className={`bg-${this.state.submitClass} text-white bold`}\n                value=\"SUBMIT\"\n                disabled={this.state.submitDisable}\n              />\n            </CFormGroup>\n          </CForm>\n        </CCol>\n\n        <br />\n        <br />\n        <br />\n        <hr />\n\n        <UploadImg />\n      </CRow>\n    );\n  }\n}\n\nexport default LensDesigns3;\n","import React, { Component } from \"react\";\n\nimport {\n  CForm,\n  CInput,\n  CFormGroup,\n  CCol,\n  CRow,\n  CAlert,\n  CInputGroupText,\n  CInputGroup,\n  CToaster,\n  CToast,\n} from \"@coreui/react\";\n\nimport UploadImg from \"../../UploadImg/UploadImg\";\n\nimport axios from \"axios\";\nimport FlashMessage from \"react-flash-message\";\n\nimport SERVER_URI from \"../../../reusable/api\";\n\nclass WatchVideo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false,\n      activeKey: 0,\n      edited: false,\n      submitClass: \"disabled\",\n      submitDisable: true,\n\n      image: \"...\",\n      url: \"...\",\n      progress: \"...\",\n\n      wv_section_display: true,\n      wv_header: \"...\",\n      wv_desc: \"...\",\n      wv_link: \"...\",\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.toggleCheckbox = this.toggleCheckbox.bind(this);\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios\n      .get(`${SERVER_URI}/api/getWatchVideo`)\n      .then((response) => {\n        // console.log(response.data);\n        const { wv_section_display, wv_header, wv_desc, wv_link } =\n          response.data.section_content;\n\n        this.setState({\n          wv_section_display: wv_section_display,\n          wv_header: wv_header,\n          wv_desc: wv_desc,\n          wv_link: wv_link,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  onChange(e) {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n      submitClass: \"primary\",\n      submitDisable: false,\n      edited: false,\n    });\n    // console.log(this.state);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const prog_section = {\n      wv_section_display: this.state.wv_section_display,\n      wv_header: this.state.wv_header,\n      wv_desc: this.state.wv_desc,\n      wv_link: this.state.wv_link,\n    };\n\n    console.log(prog_section);\n\n    axios\n      .post(`${SERVER_URI}/api/postWatchVideo`, prog_section)\n      .then((res) => console.log(res));\n\n    // window.location = `${ADMIN_URI}/#/landing/WatchVideo/`;\n    this.setState({\n      edited: true,\n      submitClass: \"disabled\",\n      submitDisable: true,\n    });\n  }\n\n  toggleCheckbox(e) {\n    e.preventDefault();\n    this.setState({\n      wv_section_display: !this.state.wv_section_display,\n      submitClass: \"primary\",\n      submitDisable: false,\n      edited: false,\n    });\n  }\n\n  render() {\n    return (\n      <CRow>\n        {this.state.edited === true ? (\n          <div>\n            <FlashMessage duration={3000}></FlashMessage>\n            <CToaster>\n              <CToast\n                key={this.state.fixedToasts}\n                show={true}\n                autohide={1000}\n                fade={true}\n                header=\"CToast fixed component\"\n              >\n                <CAlert width=\"1\" color=\"success\" dismissible={`${true}`}>\n                  <strong>Updated</strong> Successfully...\n                </CAlert>\n              </CToast>\n            </CToaster>\n          </div>\n        ) : (\n          <p></p>\n        )}\n\n        <CCol xs=\"12\">\n          <CForm onSubmit={this.onSubmit}>\n            <CFormGroup>\n              {/* #1 */}\n              {/* Checkbox to Toggle Sections */}\n              {/* OLD CHECKBOX *RIP* */}\n              {/* <h4>{this.state.wv_section_display ? \"Show\" : \"hide\"}</h4>\n              <a href=\"#\" role=\"button\" onClick={this.toggleCheckbox}>\n                <input\n                  type=\"checkbox\"\n                  title=\"wv_section_display\"\n                  name=\"wv_section_display\"\n                  checked={this.state.wv_section_display}\n                  readOnly\n                />_Show Section</a> */}\n\n              {/* NEW LOOK - it's all about that */}\n              <a\n                className=\"show_design_link\"\n                href=\"#\"\n                role=\"button\"\n                onClick={this.toggleCheckbox}\n              >\n                <label className=\"show_design\">\n                  <input\n                    className=\"label__checkbox\"\n                    id=\"show_design\"\n                    name=\"show_design\"\n                    type=\"checkbox\"\n                    checked={this.state.wv_section_display}\n                    readOnly\n                  />\n                  <span className=\"label__text\">\n                    <span className=\"label__check\">\n                      <i className=\"fa fa-check icon\"></i>\n                    </span>\n                  </span>\n                  <label className=\"show_design_label\" htmlFor=\"show_design\">\n                    Show Section\n                  </label>\n                </label>\n              </a>\n            </CFormGroup>\n\n            <CFormGroup>\n              {/* #1 name */}\n              <h6>{this.state.wv_header}</h6>\n              <br />\n              <CInput\n                type=\"text\"\n                id=\"wv_header\"\n                name=\"wv_header\"\n                placeholder=\"wv_header\"\n                value={this.state.wv_header}\n                onChange={this.onChange}\n              />\n              <br />\n              <CInput\n                type=\"text\"\n                id=\"wv_desc\"\n                name=\"wv_desc\"\n                placeholder=\"wv_desc\"\n                value={this.state.wv_desc}\n                onChange={this.onChange}\n              />\n              <br />\n              <hr />\n              <br />\n              <CInputGroup className=\"mb-3\">\n                <CInputGroupText id=\"basic-addon3\">\n                  Paste Video URL\n                </CInputGroupText>\n                <CInput\n                  type=\"text\"\n                  id=\"wv_link\"\n                  name=\"wv_link\"\n                  placeholder=\"wv_link\"\n                  value={this.state.wv_link}\n                  onChange={this.onChange}\n                />\n              </CInputGroup>\n            </CFormGroup>\n\n            <hr />\n            <br />\n\n            <CFormGroup>\n              <CInput\n                type=\"submit\"\n                id=\"submit\"\n                name=\"submit\"\n                placeholder=\"submit\"\n                className={`bg-${this.state.submitClass} text-white bold`}\n                value=\"SUBMIT\"\n                disabled={this.state.submitDisable}\n              />\n            </CFormGroup>\n          </CForm>\n        </CCol>\n      </CRow>\n    );\n  }\n}\n\nexport default WatchVideo;\n","import React, { Component } from \"react\";\n\nimport {\n  CForm,\n  CInput,\n  CFormGroup,\n  CCol,\n  CRow,\n  CAlert,\n  CToaster,\n  CToast,\n} from \"@coreui/react\";\n\nimport axios from \"axios\";\nimport FlashMessage from \"react-flash-message\";\n\nimport SERVER_URI from \"../../../reusable/api\";\n\nclass ScreenShots extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeKey: 0,\n      edited: false,\n      submitClass: \"disabled\",\n      submitDisable: true,\n\n      ss_section_display: true,\n    };\n    this.toggleCheckbox = this.toggleCheckbox.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios\n      .get(`${SERVER_URI}/api/getScreenShots`)\n      .then((response) => {\n        const { ss_section_display } = response.data.section_content;\n        this.setState({\n          ss_section_display: ss_section_display,\n        });\n        console.log(\"REQ_STATE:: \", this.state);\n        console.log(\"______________________________________\");\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    // console.log(this.state);\n    if (!this.state.submitDisable) {\n      const prog_section = {\n        ss_section_display: this.state.ss_section_display,\n      };\n      console.log(\"POST_STATE:: \", prog_section);\n      axios\n        .post(`${SERVER_URI}/api/postScreenShots`, prog_section)\n        .then((res) => console.log(res));\n      // window.location = `${ADMIN_URI}/#/landing/ScreenShots/`;\n      this.setState({\n        edited: true,\n        submitClass: \"disabled\",\n        submitDisable: true,\n      });\n    }\n  }\n\n  toggleCheckbox(e) {\n    e.preventDefault();\n    this.setState({\n      ss_section_display: !this.state.ss_section_display,\n      submitClass: \"primary\",\n      submitDisable: false,\n      edited: false,\n    });\n  }\n\n  render() {\n    return (\n      <CRow>\n        {this.state.edited === true ? (\n          <div>\n            <FlashMessage duration={3000}></FlashMessage>\n            <CToaster>\n              <CToast\n                key={this.state.fixedToasts}\n                show={true}\n                autohide={1000}\n                fade={true}\n                header=\"CToast fixed component\"\n              >\n                <CAlert width=\"1\" color=\"success\" dismissible={`${true}`}>\n                  <strong>Updated</strong> Successfully...\n                </CAlert>\n              </CToast>\n            </CToaster>\n          </div>\n        ) : (\n          <p></p>\n        )}\n\n        <CCol xs=\"12\">\n          <CForm onSubmit={this.onSubmit}>\n            <CFormGroup>\n              {/* #1 */}\n              {/* Checkbox to Toggle Sections */}\n              {/* OLD CHECKBOX *RIP* */}\n              {/* <h4>{this.state.ss_section_display ? \"Show\" : \"hide\"}</h4>\n                            <a href=\"#\" role=\"button\" onClick={this.toggleCheckbox}>\n                                <input\n                                    type=\"checkbox\"\n                                    title=\"ss_section_display\"\n                                    name=\"ss_section_display\"\n                                    checked={this.state.ss_section_display}\n                                    readOnly\n                                />_Show Section</a> */}\n\n              {/* NEW LOOK - it's all about that */}\n              <a\n                className=\"show_design_link\"\n                href=\"#\"\n                role=\"button\"\n                onClick={this.toggleCheckbox}\n              >\n                <label className=\"show_design\">\n                  <input\n                    className=\"label__checkbox\"\n                    id=\"show_design\"\n                    name=\"show_design\"\n                    type=\"checkbox\"\n                    checked={this.state.ss_section_display}\n                    readOnly\n                  />\n                  <span className=\"label__text\">\n                    <span className=\"label__check\">\n                      <i className=\"fa fa-check icon\"></i>\n                    </span>\n                  </span>\n                  <label className=\"show_design_label\" htmlFor=\"show_design\">\n                    Show Section\n                  </label>\n                </label>\n              </a>\n            </CFormGroup>\n            <br />\n            <CFormGroup>\n              <CInput\n                type=\"submit\"\n                id=\"submit\"\n                name=\"submit\"\n                placeholder=\"submit\"\n                className={`bg-${this.state.submitClass} text-white bold`}\n                value=\"SUBMIT\"\n                disabled={this.state.submitDisable}\n              />\n            </CFormGroup>\n          </CForm>\n        </CCol>\n      </CRow>\n    );\n  }\n}\n\nexport default ScreenShots;\n","import React, { Component } from \"react\";\n\nimport {\n  CForm,\n  CInput,\n  CFormGroup,\n  CCol,\n  CRow,\n  CAlert,\n  CInputGroupText,\n  CInputGroup,\n  CToaster,\n  CToast,\n} from \"@coreui/react\";\n\nimport Accordion from \"../../../reusable/Accordion/Accordion\";\n\nimport UploadImg from \"../../UploadImg/UploadImg\";\n\nimport axios from \"axios\";\nimport FlashMessage from \"react-flash-message\";\n\nimport SERVER_URI from \"../../../reusable/api\";\n\nclass ProductionInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeKey: 0,\n      edited: false,\n      submitClass: \"disabled\",\n      submitDisable: true,\n\n      pi_section_display: true,\n      pi_header: \"...\",\n      pi_desc: \"...\",\n      pi_items: [\n        {\n          item_img: \"...\",\n          item_num: 0,\n          item_title: \"...\",\n        },\n      ],\n    };\n\n    this.onChangeItem = this.onChangeItem.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.toggleCheckbox = this.toggleCheckbox.bind(this);\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios\n      .get(`${SERVER_URI}/api/getProductionInfo`)\n      .then((response) => {\n        const { pi_section_display, pi_header, pi_desc, pi_items } =\n          response.data.section_content;\n        this.setState({\n          pi_section_display: pi_section_display,\n          pi_header: pi_header,\n          pi_desc: pi_desc,\n          pi_items: pi_items,\n        });\n\n        console.log(\"REQ_STATE:: \", this.state);\n        console.log(\"______________________________________\");\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    // console.log(this.state);\n\n    if (!this.state.submitDisable) {\n      const prog_section = {\n        pi_section_display: this.state.pi_section_display,\n        pi_header: this.state.pi_header,\n        pi_desc: this.state.pi_desc,\n        pi_items: this.state.pi_items,\n      };\n\n      console.log(\"POST_STATE:: \", prog_section);\n\n      axios\n        .post(`${SERVER_URI}/api/postProductionInfo`, prog_section)\n        .then((res) => console.log(res));\n\n      // window.location = `${ADMIN_URI}/#/landing/ProductionInfo/`;\n      this.setState({\n        edited: true,\n        submitClass: \"disabled\",\n        submitDisable: true,\n      });\n    }\n  }\n\n  onChange(e) {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n      submitClass: \"primary\",\n      submitDisable: false,\n      edited: false,\n    });\n    // console.log(this.state);\n  }\n\n  onChangeItem(e, i) {\n    const { value, name } = e.target;\n    // console.log('NAME:: ', name);\n    // console.log('VALUE:: ', value);\n    // console.log('_____________________________________');\n\n    this.setState((prevState) => {\n      const pi_items = [...prevState.pi_items];\n\n      pi_items[i] = {\n        ...pi_items[i],\n        [name]: value,\n      };\n\n      return {\n        submitClass: \"primary\",\n        submitDisable: false,\n        edited: false,\n        pi_items,\n      };\n    });\n\n    // console.log(this.state.pi_items[i]);\n    // console.log(this.state);\n  }\n\n  toggleCheckbox(e) {\n    e.preventDefault();\n    this.setState({\n      pi_section_display: !this.state.pi_section_display,\n      submitClass: \"primary\",\n      submitDisable: false,\n      edited: false,\n    });\n  }\n\n  render() {\n    let listImgs = this.state.pi_items.map((item, item_i) => (\n      <div key={item_i}>\n        <Accordion\n          title=\"Design item\"\n          content={\n            <div>\n              {/* INPUT #1 item Title */}\n              <CInput\n                type=\"text\"\n                id=\"item_title\"\n                name=\"item_title\"\n                placeholder=\"item_title\"\n                value={item.item_title}\n                onChange={(event) => this.onChangeItem(event, item_i)}\n              />\n              <br />\n              {/* INPUT #2 item Number */}\n              <CInput\n                type=\"text\"\n                id=\"item_num\"\n                name=\"item_num\"\n                placeholder=\"item_num\"\n                value={item.item_num}\n                onChange={(event) => this.onChangeItem(event, item_i)}\n              />\n              {/* INPUT #1 item IMG Link*/}\n              <CInputGroup className=\"mb-3\">\n                <CInputGroupText id=\"basic-addon3\">\n                  Paste Image URL\n                </CInputGroupText>\n                <CInput\n                  type=\"text\"\n                  placeholder=\"item_img\"\n                  name=\"item_img\"\n                  value={item.item_img}\n                  onChange={(event) => this.onChangeItem(event, item_i)}\n                />\n              </CInputGroup>\n              <br />\n            </div>\n          }\n        />\n        <hr />\n      </div>\n    ));\n    return (\n      <CRow>\n        {this.state.edited === true ? (\n          <div>\n            <FlashMessage duration={3000}></FlashMessage>\n            <CToaster>\n              <CToast\n                key={this.state.fixedToasts}\n                show={true}\n                autohide={1000}\n                fade={true}\n                header=\"CToast fixed component\"\n              >\n                <CAlert width=\"1\" color=\"success\" dismissible={`${true}`}>\n                  <strong>Updated</strong> Successfully...\n                </CAlert>\n              </CToast>\n            </CToaster>\n          </div>\n        ) : (\n          <p></p>\n        )}\n\n        <CCol xs=\"12\">\n          <CForm onSubmit={this.onSubmit}>\n            <CFormGroup>\n              {/* #1 */}\n              {/* Checkbox to Toggle Sections */}\n              {/* OLD CHECKBOX *RIP* */}\n              {/* <h4>{this.state.pi_section_display ? \"Show\" : \"hide\"}</h4>\n              <a href=\"#\" role=\"button\" onClick={this.toggleCheckbox}>\n                <input\n                  type=\"checkbox\"\n                  title=\"pi_section_display\"\n                  name=\"pi_section_display\"\n                  checked={this.state.pi_section_display}\n                  readOnly\n                />_Show Section</a> */}\n\n              {/* NEW LOOK - it's all about that */}\n              <a\n                className=\"show_design_link\"\n                href=\"#\"\n                role=\"button\"\n                onClick={this.toggleCheckbox}\n              >\n                <label className=\"show_design\">\n                  <input\n                    className=\"label__checkbox\"\n                    id=\"show_design\"\n                    name=\"show_design\"\n                    type=\"checkbox\"\n                    checked={this.state.pi_section_display}\n                    readOnly\n                  />\n                  <span className=\"label__text\">\n                    <span className=\"label__check\">\n                      <i className=\"fa fa-check icon\"></i>\n                    </span>\n                  </span>\n                  <label className=\"show_design_label\" htmlFor=\"show_design\">\n                    Show Section\n                  </label>\n                </label>\n              </a>\n            </CFormGroup>\n\n            <CFormGroup>\n              {/* #1 Section Header */}\n              <h6>{this.state.pi_header}</h6>\n              <CInput\n                type=\"text\"\n                id=\"pi_header\"\n                name=\"pi_header\"\n                placeholder=\"pi_header\"\n                value={this.state.pi_header}\n                onChange={this.onChange}\n              />\n              <br />\n              <CInput\n                type=\"text\"\n                id=\"pi_desc\"\n                name=\"pi_desc\"\n                placeholder=\"pi_desc\"\n                value={this.state.pi_desc}\n                onChange={this.onChange}\n              />\n              <hr />\n              {/* {this.state.pi_items[0].sub_header} */}\n\n              {listImgs}\n            </CFormGroup>\n            <br />\n            <CFormGroup>\n              <CInput\n                type=\"submit\"\n                id=\"submit\"\n                name=\"submit\"\n                placeholder=\"submit\"\n                className={`bg-${this.state.submitClass} text-white bold`}\n                value=\"SUBMIT\"\n                disabled={this.state.submitDisable}\n              />\n            </CFormGroup>\n          </CForm>\n        </CCol>\n\n        <br />\n        <br />\n        <br />\n        <hr />\n\n        <UploadImg />\n      </CRow>\n    );\n  }\n}\n\nexport default ProductionInfo;\n","import React, { Component } from \"react\";\n\nimport {\n  CForm,\n  CInput,\n  CFormGroup,\n  CCol,\n  CRow,\n  CAlert,\n  CInputGroupText,\n  CInputGroup,\n  CToaster,\n  CToast,\n} from \"@coreui/react\";\n\nimport Accordion from \"../../../reusable/Accordion/Accordion\";\n\nimport UploadImg from \"../../UploadImg/UploadImg\";\n\nimport axios from \"axios\";\nimport FlashMessage from \"react-flash-message\";\n\nimport SERVER_URI from \"../../../reusable/api\";\n\nclass TechnicalInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeKey: 0,\n      edited: false,\n      submitClass: \"disabled\",\n      submitDisable: true,\n\n      ti_section_display: true,\n      ti_header: \"...\",\n      ti_desc: \"...\",\n      ti_items: [\n        {\n          item_title: \"...\",\n          item_content: \"...\",\n        },\n      ],\n    };\n\n    this.onChangeItem = this.onChangeItem.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.toggleCheckbox = this.toggleCheckbox.bind(this);\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios\n      .get(`${SERVER_URI}/api/getTechnicalInfo`)\n      .then((response) => {\n        const { ti_section_display, ti_header, ti_desc, ti_items } =\n          response.data.section_content;\n        this.setState({\n          ti_section_display: ti_section_display,\n          ti_header: ti_header,\n          ti_desc: ti_desc,\n          ti_items: ti_items,\n        });\n\n        console.log(\"REQ_STATE:: \", this.state);\n        console.log(\"______________________________________\");\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    // console.log(this.state);\n\n    if (!this.state.submitDisable) {\n      const prog_section = {\n        ti_section_display: this.state.ti_section_display,\n        ti_header: this.state.ti_header,\n        ti_desc: this.state.ti_desc,\n        ti_items: this.state.ti_items,\n      };\n\n      console.log(\"POST_STATE:: \", prog_section);\n\n      axios\n        .post(`${SERVER_URI}/api/postTechnicalInfo`, prog_section)\n        .then((res) => console.log(res));\n\n      // window.location = `${ADMIN_URI}/#/landing/TechnicalInfo/`;\n      this.setState({\n        edited: true,\n        submitClass: \"disabled\",\n        submitDisable: true,\n      });\n    }\n  }\n\n  onChange(e) {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n      submitClass: \"primary\",\n      submitDisable: false,\n      edited: false,\n    });\n    // console.log(this.state);\n  }\n\n  onChangeItem(e, i) {\n    const { value, name } = e.target;\n    // console.log('NAME:: ', name);\n    // console.log('VALUE:: ', value);\n    // console.log('_____________________________________');\n\n    this.setState((prevState) => {\n      const ti_items = [...prevState.ti_items];\n\n      ti_items[i] = {\n        ...ti_items[i],\n        [name]: value,\n      };\n\n      return {\n        submitClass: \"primary\",\n        submitDisable: false,\n        edited: false,\n        ti_items,\n      };\n    });\n\n    // console.log(this.state.ti_items[i]);\n    // console.log(this.state);\n  }\n\n  toggleCheckbox(e) {\n    e.preventDefault();\n    this.setState({\n      ti_section_display: !this.state.ti_section_display,\n      submitClass: \"primary\",\n      submitDisable: false,\n      edited: false,\n    });\n  }\n\n  render() {\n    let listItems = this.state.ti_items.map((item, item_i) => (\n      <div key={item_i}>\n        <Accordion\n          title=\"Item Info\"\n          content={\n            <div>\n              {/* INPUT #1 item Title */}\n              <CInput\n                type=\"text\"\n                id=\"item_title\"\n                name=\"item_title\"\n                placeholder=\"item_title\"\n                value={item.item_title}\n                onChange={(event) => this.onChangeItem(event, item_i)}\n              />\n              <br />\n              {/* INPUT #2 item Number */}\n              <CInput\n                type=\"text\"\n                id=\"item_content\"\n                name=\"item_content\"\n                placeholder=\"item_content\"\n                value={item.item_content}\n                onChange={(event) => this.onChangeItem(event, item_i)}\n              />\n              <br />\n            </div>\n          }\n        />\n        <hr />\n      </div>\n    ));\n    return (\n      <CRow>\n        {this.state.edited === true ? (\n          <div>\n            <FlashMessage duration={3000}></FlashMessage>\n            <CToaster>\n              <CToast\n                key={this.state.fixedToasts}\n                show={true}\n                autohide={1000}\n                fade={true}\n                header=\"CToast fixed component\"\n              >\n                <CAlert width=\"1\" color=\"success\" dismissible={`${true}`}>\n                  <strong>Updated</strong> Successfully...\n                </CAlert>\n              </CToast>\n            </CToaster>\n          </div>\n        ) : (\n          <p></p>\n        )}\n\n        <CCol xs=\"12\">\n          <CForm onSubmit={this.onSubmit}>\n            <CFormGroup>\n              {/* #1 */}\n              {/* Checkbox to Toggle Sections */}\n              {/* OLD CHECKBOX *RIP* */}\n              {/* <h4>{this.state.ti_section_display ? \"Show\" : \"hide\"}</h4>\n              <a href=\"#\" role=\"button\" onClick={this.toggleCheckbox}>\n                <input\n                  type=\"checkbox\"\n                  title=\"ti_section_display\"\n                  name=\"ti_section_display\"\n                  checked={this.state.ti_section_display}\n                  readOnly\n                />_Show Section</a> */}\n\n              {/* NEW LOOK - it's all about that */}\n              <a\n                className=\"show_design_link\"\n                href=\"#\"\n                role=\"button\"\n                onClick={this.toggleCheckbox}\n              >\n                <label className=\"show_design\">\n                  <input\n                    className=\"label__checkbox\"\n                    id=\"show_design\"\n                    name=\"show_design\"\n                    type=\"checkbox\"\n                    checked={this.state.ti_section_display}\n                    readOnly\n                  />\n                  <span className=\"label__text\">\n                    <span className=\"label__check\">\n                      <i className=\"fa fa-check icon\"></i>\n                    </span>\n                  </span>\n                  <label className=\"show_design_label\" htmlFor=\"show_design\">\n                    Show Section\n                  </label>\n                </label>\n              </a>\n            </CFormGroup>\n\n            <CFormGroup>\n              {/* #1 Section Header */}\n              <h6>{this.state.ti_header}</h6>\n              <CInput\n                type=\"text\"\n                id=\"ti_header\"\n                name=\"ti_header\"\n                placeholder=\"ti_header\"\n                value={this.state.ti_header}\n                onChange={this.onChange}\n              />\n              <br />\n              <CInput\n                type=\"text\"\n                id=\"ti_desc\"\n                name=\"ti_desc\"\n                placeholder=\"ti_desc\"\n                value={this.state.ti_desc}\n                onChange={this.onChange}\n              />\n              <hr />\n              {/* {this.state.ti_items[0].sub_header} */}\n\n              {listItems}\n            </CFormGroup>\n            <br />\n            <CFormGroup>\n              <CInput\n                type=\"submit\"\n                id=\"submit\"\n                name=\"submit\"\n                placeholder=\"submit\"\n                className={`bg-${this.state.submitClass} text-white bold`}\n                value=\"SUBMIT\"\n                disabled={this.state.submitDisable}\n              />\n            </CFormGroup>\n          </CForm>\n        </CCol>\n\n        <br />\n        <br />\n        <br />\n        <hr />\n\n        <UploadImg />\n      </CRow>\n    );\n  }\n}\n\nexport default TechnicalInfo;\n","import React, { Suspense } from 'react'\nimport {\n  Redirect,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport { CContainer, CFade } from '@coreui/react'\nimport PrivateRoute from \"../routes/PrivateRoute\";\n\n// routes config\nimport routes from '../routes'\n\nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\n  </div>\n)\n\n\n\n\n\nconst TheContent = () => {\n  return (\n    <main className=\"c-main\">\n      <CContainer fluid>\n        <Suspense fallback={loading}>\n          <Switch>\n            {routes.map((route, idx) => {\n              return route.component && (\n                <PrivateRoute\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  component={props => (\n                    <CFade>\n                      <route.component {...props} />\n                    </CFade>\n                  )}\n                />\n              )\n            })}\n            <Redirect from=\"/\" to=\"/gallery\" />\n          </Switch>\n        </Suspense>\n      </CContainer>\n    </main>\n  )\n}\n\nexport default React.memo(TheContent)\n","import React from 'react'\r\nimport { CFooter } from '@coreui/react'\r\n\r\nconst TheFooter = () => {\r\n  return (\r\n    <CFooter fixed={false}>\r\n      <div>\r\n        <a href=\"/\" target=\"_blank\" rel=\"noopener noreferrer\">Horizon</a>\r\n        <span className=\"ml-1\">&copy; 2021.</span>\r\n      </div>\r\n      <div className=\"mfs-auto\">\r\n        <span className=\"mr-1\">Powered by</span>\r\n        <a href=\"https://ayk-mall.com\" target=\"_blank\" rel=\"noopener noreferrer\">Ayk</a>\r\n      </div>\r\n    </CFooter>\r\n  )\r\n}\r\n\r\nexport default React.memo(TheFooter)\r\n","import React from \"react\";\r\n\r\nimport SERVER_URI from \"../../reusable/api\";\r\n\r\nconst demos = {\r\n  horizon:\r\n    `<iframe width=\"100%\" height=\"500px\" scrolling=\"yes\" frameborder=\"yes\" allow=\"autoplay\" src='${SERVER_URI}'></iframe>`,\r\n};\r\n\r\n//codesandbox.io/s/react-iframe-demo-g3vst codePen =\r\nfunction Iframe(props) {\r\n  return (\r\n    <div\r\n      dangerouslySetInnerHTML={{ __html: props.iframe ? props.iframe : \"\" }}\r\n    />\r\n  );\r\n}\r\n\r\nconst Preview = () => {\r\n  return (\r\n    <Iframe iframe={demos[\"horizon\"]} allow=\"autoplay\" />\r\n  )\r\n};\r\n\r\nexport default Preview;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  CHeader,\r\n  CToggler,\r\n  CHeaderBrand,\r\n  CHeaderNav,\r\n  CHeaderNavItem,\r\n  CHeaderNavLink,\r\n  CSubheader,\r\n  CBreadcrumbRouter,\r\n  CButton,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalBody,\r\n  CModalFooter,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\n\r\nimport Preview from \"../views/Preview/Preview\";\r\nimport './preview-modal.css'\r\n\r\n// routes config\r\nimport routes from \"../routes\";\r\nimport { firebase_app } from \"src/firebase/firebase\";\r\n\r\nconst TheHeader = () => {\r\n  const dispatch = useDispatch();\r\n  const sidebarShow = useSelector((state) => state.sidebarShow);\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  }\r\n\r\n  const toggleSidebar = () => {\r\n    const val = [true, \"responsive\"].includes(sidebarShow)\r\n      ? false\r\n      : \"responsive\";\r\n    dispatch({ type: \"set\", sidebarShow: val });\r\n  };\r\n\r\n  const toggleSidebarMobile = () => {\r\n    const val = [false, \"responsive\"].includes(sidebarShow)\r\n      ? true\r\n      : \"responsive\";\r\n    dispatch({ type: \"set\", sidebarShow: val });\r\n  };\r\n\r\n  return (\r\n    <CHeader withSubheader>\r\n      <CToggler\r\n        inHeader\r\n        className=\"ml-md-3 d-lg-none\"\r\n        onClick={toggleSidebarMobile}\r\n      />\r\n      <CToggler\r\n        inHeader\r\n        className=\"ml-3 d-md-down-none\"\r\n        onClick={toggleSidebar}\r\n      />\r\n      <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\">\r\n        <CIcon name=\"logo\" height=\"48\" alt=\"Logo\" />\r\n      </CHeaderBrand>\r\n\r\n      <CHeaderNav className=\"d-md-down-none mr-auto\">\r\n        {/* Dashboard Page */}\r\n        {/* <CHeaderNavItem className=\"px-3\">\r\n          <CHeaderNavLink to=\"/dashboard\">Dashboard</CHeaderNavLink>\r\n        </CHeaderNavItem> */}\r\n        {/* Users Page */}\r\n        <CHeaderNavItem className=\"px-3\">\r\n          <CHeaderNavLink to=\"/gallery\">Gallery</CHeaderNavLink>\r\n        </CHeaderNavItem>\r\n        <CHeaderNavItem className=\"px-3\">\r\n          <CHeaderNavLink to=\"/mailing-list\">Mailing List</CHeaderNavLink>\r\n        </CHeaderNavItem>\r\n        <CHeaderNavItem className=\"px-3\">\r\n          <CHeaderNavLink to=\"#\">CMS</CHeaderNavLink>\r\n        </CHeaderNavItem>\r\n      </CHeaderNav>\r\n\r\n      <CSubheader className=\"px-3 justify-content-between\">\r\n        <CBreadcrumbRouter\r\n          className=\"border-0 c-subheader-nav m-0 px-0 px-md-3\"\r\n          routes={routes}\r\n        />\r\n        <div className=\"d-md-down-none mfe-2 c-subheader-nav\">\r\n          <CButton color='primary' onClick={() => firebase_app.auth().signOut()} className=\"mr-1\">\r\n            Sign out\r\n          </CButton>\r\n          <CButton color='primary' onClick={toggle} className=\"mr-1\">\r\n            Preview\r\n          </CButton>\r\n\r\n          <CModal size='xl' show={modal} onClose={toggle}>\r\n            <CModalHeader closeButton>Horizon Preview</CModalHeader>\r\n            <CModalBody>\r\n              <Preview />\r\n            </CModalBody>\r\n            <CModalFooter>\r\n              <CButton color=\"secondary\" onClick={toggle}>\r\n                Cancel\r\n              </CButton>\r\n            </CModalFooter>\r\n          </CModal>\r\n        </div>\r\n      </CSubheader>\r\n    </CHeader>\r\n  );\r\n};\r\n\r\nexport default TheHeader;\r\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\n\nconst _nav = [\n  // {\n  //   _tag: 'CSidebarNavItem',\n  //   name: 'Dashboard',\n  //   to: '/dashboard',\n  // addLinkClass: 'c-disabled',\n  //   'disabled': true,\n  //   icon: `< CIcon name=\"cil-speedometer\"\n  //     customClasses=\"c-sidebar-nav-icon\" />`\n  // },\n  {\n    _tag: 'CSidebarNavTitle',\n    _children: ['Landing Page Sections']\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Hero Section',\n    to: '/landing/hero',\n    addLinkClass: 'c-disabled',\n    'disabled': true,\n    icon: 'cil-drop',\n  },\n  {\n    _tag: 'CSidebarNavDivider',\n    className: 'm-0'\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Latest News',\n    to: '/news',\n    addLinkClass: 'c-disabled',\n    'disabled': true,\n    icon: 'cil-notes',\n  },\n  {\n    _tag: 'CSidebarNavDivider',\n    className: 'm-1'\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'About Us',\n    to: '/about',\n    addLinkClass: 'c-disabled',\n    'disabled': true,\n    icon: 'cil-people',\n  },\n  {\n    _tag: 'CSidebarNavDivider',\n    className: 'm-3'\n  },\n\n\n\n\n\n\n\n\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Lens Designs 1',\n    to: '/landing/lens-designs-1',\n    addLinkClass: 'c-disabled',\n    'disabled': true,\n    icon: 'cil-pencil',\n  },\n  {\n    _tag: 'CSidebarNavDivider',\n    className: 'm-1'\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Lens Info 1',\n    to: '/landing/lens-info-1',\n    addLinkClass: 'c-disabled',\n    'disabled': true,\n    icon: 'cil-pencil',\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Lens Info 3',\n    to: '/landing/lens-info-3',\n    addLinkClass: 'c-disabled',\n    'disabled': true,\n    icon: 'cil-pencil',\n  },\n  {\n    _tag: 'CSidebarNavDivider',\n    className: 'm-1'\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Lens Designs 2',\n    to: '/landing/lens-designs-2',\n    addLinkClass: 'c-disabled',\n    'disabled': true,\n    icon: 'cil-pencil',\n  },\n  {\n    _tag: 'CSidebarNavDivider',\n    className: 'm-1'\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Lens Info 2',\n    to: '/landing/lens-info-2',\n    addLinkClass: 'c-disabled',\n    'disabled': true,\n    icon: 'cil-pencil',\n  },\n  {\n    _tag: 'CSidebarNavDivider',\n    className: 'm-1'\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Lens Designs 3',\n    to: '/landing/lens-designs-3',\n    addLinkClass: 'c-disabled',\n    'disabled': true,\n    icon: 'cil-pencil',\n  },\n  {\n    _tag: 'CSidebarNavDivider',\n    className: 'm-3'\n  },\n\n\n\n\n\n\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Watch Video',\n    to: '/landing/watch-video',\n    addLinkClass: 'c-disabled',\n    'disabled': true,\n    icon: 'cil-pencil',\n  },\n  {\n    _tag: 'CSidebarNavDivider',\n    className: 'm-1'\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Screen Shots',\n    to: '/landing/screen-shots',\n    addLinkClass: 'c-disabled',\n    'disabled': true,\n    icon: 'cil-pencil',\n  },\n  {\n    _tag: 'CSidebarNavDivider',\n    className: 'm-1'\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Production Info',\n    to: '/landing/production-info',\n    addLinkClass: 'c-disabled',\n    'disabled': true,\n    icon: 'cil-pencil',\n  },\n  {\n    _tag: 'CSidebarNavDivider',\n    className: 'm-1'\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Technical Info',\n    to: '/landing/technical-info',\n    addLinkClass: 'c-disabled',\n    'disabled': true,\n    icon: 'cil-pencil',\n  },\n  {\n    _tag: 'CSidebarNavDivider',\n    className: 'm-1'\n  },\n  // {\n  //   _tag: 'CSidebarNavItem',\n  //   name: 'Logos',\n  //   icon: 'cil-ban',\n  //   addLinkClass: 'c-disabled',\n  //   'disabled': true\n  // },\n  {\n    _tag: 'CSidebarNavDivider',\n    className: 'm-1'\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Contact Us',\n    icon: 'cil-ban',\n    addLinkClass: 'c-disabled',\n    'disabled': true\n  },\n  {\n    _tag: 'CSidebarNavDivider',\n    className: 'm-1'\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Online Ordering',\n    icon: 'cil-ban',\n    addLinkClass: 'c-disabled',\n    'disabled': true\n  },\n  // {\n  //   _tag: 'CSidebarNavItem',\n  //   name: 'Map',\n  //   icon: 'cil-ban',\n  //   addLinkClass: 'c-disabled',\n  //   'disabled': true\n  // },\n  {\n    _tag: 'CSidebarNavDivider',\n    className: 'm-3'\n  },\n\n\n\n\n  // {\n  //   _tag: 'CSidebarNavItem',\n  //   name: 'Footer',\n  //   icon: 'cil-ban',\n  //   addLinkClass: 'c-disabled',\n  //   'disabled': true\n  // },\n  // {\n  //   _tag: 'CSidebarNavDivider',\n  //   className: 'm-3'\n  // },\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  {\n    _tag: 'CSidebarNavDivider'\n  },\n  {\n    _tag: 'CSidebarNavTitle',\n    _children: ['Extras'],\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Gallery',\n    to: '/gallery',\n    addLinkClass: 'c-disabled',\n    'disabled': true,\n    icon: 'cil-chart-pie',\n  },\n  {\n    _tag: 'CSidebarNavDivider',\n    className: 'm-1'\n  },\n  // {\n  //   _tag: 'CSidebarNavItem',\n  //   name: 'Blog',\n  //   icon: 'cil-ban',\n  //   addLinkClass: 'c-disabled',\n  //   'disabled': true\n  // },\n  {\n    _tag: 'CSidebarNavDivider',\n    className: 'm-1'\n  },\n  {\n    _tag: 'CSidebarNavDivider',\n    className: 'm-1'\n  },\n]\n\nexport default _nav\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  CCreateElement,\r\n  CSidebar,\r\n  CSidebarBrand,\r\n  CSidebarNav,\r\n  CSidebarNavDivider,\r\n  CSidebarNavTitle,\r\n  CSidebarMinimizer,\r\n  CSidebarNavDropdown,\r\n  CSidebarNavItem,\r\n} from '@coreui/react'\r\n\r\n// sidebar nav config\r\nimport navigation from './_nav'\r\n\r\nconst TheSidebar = () => {\r\n  const dispatch = useDispatch()\r\n  const show = useSelector(state => state.sidebarShow)\r\n\r\n  return (\r\n    <CSidebar\r\n      show={show}\r\n      onShowChange={(val) => dispatch({ type: 'set', sidebarShow: val })}\r\n    >\r\n      <CSidebarBrand className=\"d-md-down-none\" to=\"/\">\r\n        {/* <CIcon\r\n          className=\"c-sidebar-brand-full\"\r\n          name=\"logo-negative\"\r\n          height={35}\r\n        />\r\n        <CIcon\r\n          className=\"c-sidebar-brand-minimized\"\r\n          name=\"sygnet\"\r\n          height={35}\r\n        /> */}\r\n        <h2 className=\"c-sidebar-brand-full\">Horizon</h2>\r\n        <h2 className=\"c-sidebar-brand-minimized\">H</h2>\r\n      </CSidebarBrand>\r\n      <CSidebarNav>\r\n        <CCreateElement\r\n          items={navigation}\r\n          components={{\r\n            CSidebarNavDivider,\r\n            CSidebarNavDropdown,\r\n            CSidebarNavItem,\r\n            CSidebarNavTitle\r\n          }}\r\n        />\r\n      </CSidebarNav>\r\n      <CSidebarMinimizer className=\"c-d-md-down-none\" />\r\n    </CSidebar>\r\n  )\r\n}\r\n\r\nexport default React.memo(TheSidebar)\r\n","import React from 'react'\r\nimport {\r\n  TheContent,\r\n  TheSidebar,\r\n  TheFooter,\r\n  TheHeader\r\n} from './index'\r\n\r\nconst TheLayout = () => {\r\n\r\n  return (\r\n    <div className=\"c-app c-default-layout\">\r\n      <TheSidebar/>\r\n      <div className=\"c-wrapper\">\r\n        <TheHeader/>\r\n        <div className=\"c-body\">\r\n          <TheContent/>\r\n        </div>\r\n        <TheFooter/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TheLayout\r\n","import React, { useCallback, useContext, useState } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router\";\r\nimport { firebase_app } from \"src/firebase/firebase\";\r\nimport { AuthContext } from \"src/services/Auth\";\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Login = ({ history }) => {\r\n  const handleLogin = useCallback(\r\n    async event => {\r\n      event.preventDefault();\r\n      const { email, password } = event.target.elements;\r\n      try {\r\n        await firebase_app\r\n          .auth()\r\n          .signInWithEmailAndPassword(email.value, password.value);\r\n        history.push(\"/\");\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    },\r\n    [history]\r\n  );\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  if (currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  // const [loginUsername, setLoginUsername] = useState(\"\");\r\n  // const [loginPassword, setLoginPassword] = useState(\"\");\r\n\r\n  // const login = () => {\r\n  //   Axios({\r\n  //     method: \"POST\",\r\n  //     data: {\r\n  //       username: loginUsername,\r\n  //       password: loginPassword,\r\n  //     },\r\n  //     withCredentials: true,\r\n  //     url: \"http://localhost:5000/api/postAdminLogin\",\r\n  //   }).then((res) => console.log(res));\r\n  // };\r\n\r\n  return (\r\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\r\n      <CContainer>\r\n        <CRow className=\"justify-content-center\">\r\n          <CCol md=\"8\">\r\n            <CCardGroup>\r\n              <CCard className=\"p-4\">\r\n                <CCardBody>\r\n                  <CForm onSubmit={handleLogin}>\r\n                    <h1>Login</h1>\r\n                    <p className=\"text-muted\">Sign In to your account</p>\r\n\r\n                    <CInputGroup className=\"mb-3\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>\r\n                          <CIcon name=\"cil-user\" />\r\n                        </CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      {/* <CInput name=\"email\" type=\"email\" placeholder=\"Email\" autoComplete=\"username\" onChange={(e) => setLoginUsername(e.target.value)} /> */}\r\n                      <CInput name=\"email\" type=\"email\" placeholder=\"Email\" autoComplete=\"username\" />\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-4\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>\r\n                          <CIcon name=\"cil-lock-locked\" />\r\n                        </CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      {/* <CInput type=\"password\" placeholder=\"Password\" autoComplete=\"current-password\" onChange={(e) => setLoginPassword(e.target.value)} /> */}\r\n                      <CInput name=\"password\" type=\"password\" placeholder=\"Password\" autoComplete=\"current-password\" />\r\n                    </CInputGroup>\r\n                    <CRow>\r\n                      <CCol xs=\"6\">\r\n                        {/* <CButton color=\"primary\" className=\"px-4\" onClick={login}>Login</CButton> */}\r\n                        <CButton type=\"submit\" color=\"primary\" className=\"px-4\">Login</CButton>\r\n                      </CCol>\r\n                      {/* <CCol xs=\"6\" className=\"text-right\">\r\n                        <CButton color=\"link\" className=\"px-0\">Forgot password?</CButton>\r\n                      </CCol> */}\r\n                    </CRow>\r\n                  </CForm>\r\n                </CCardBody>\r\n              </CCard>\r\n              <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\r\n                <CCardBody className=\"text-center\">\r\n                  <div>\r\n                    {/* <h2>Sign up</h2>\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut\r\n                      labore et dolore magna aliqua.</p>\r\n                    <Link to=\"/register\">\r\n                      <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>Register Now!</CButton>\r\n                    </Link> */}\r\n                  </div>\r\n                </CCardBody>\r\n              </CCard>\r\n            </CCardGroup>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Login);\r\n","import React, { Component } from 'react';\nimport { HashRouter, BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './scss/style.scss';\nimport { AuthProvider } from \"./services/Auth\";\nimport PrivateRoute from \"./routes/PrivateRoute\";\n// import Axios from \"axios\";\n\nimport TheLayout from \"./containers/TheLayout\";\nimport Login from \"./views/pages/login/Login\";\n\n// Containers\n// const TheLayout = React.lazy(() => import('./containers/TheLayout'));\n// Pages\n// const Login = React.lazy(() => import('src/views/pages/login/Login'));\n// const Page404 = React.lazy(() => import('./views/pages/page404/Page404'));\n// const Page500 = React.lazy(() => import('./views/pages/page500/Page500'));\n\n\n// const loading = (\n//   <div className=\"pt-3 text-center\">\n//     <div className=\"sk-spinner sk-spinner-pulse\"></div>\n//   </div>\n// )\n\nclass App extends Component {\n  // constructor(props) {\n  //   super(props);\n\n  //   this.state = {\n  //     data: null\n  //   };\n\n  //   this.getUser = this.getUser.bind(this);\n  // }\n\n  // getUser = () => {\n  //   Axios({\n  //     method: \"GET\",\n  //     withCredentials: true,\n  //     url: \"http://localhost:5000/api/getAdminUser\",\n  //   }).then((res) => {\n  //     this.setState({\n  //       data: res.data\n  //     })\n  //     // console.log(\"USER: \", res.data);\n  //   });\n  // };\n\n\n\n  render() {\n    return (\n      <AuthProvider>\n        <BrowserRouter>\n          {/* <React.Suspense fallback={loading}>\n            <Switch> */}\n              <PrivateRoute path=\"/\" name=\"Home\" component={TheLayout} />\n              <Route path=\"/login\" exact name=\"Login\" component={Login} />\n              {/* <PrivateRoute path=\"/\" name=\"Home\" render={props => <TheLayout {...props} />} /> */}\n              {/* <Route exact path=\"/login\" name=\"Login Page\" render={props => <Login {...props} />} /> */}\n              {/* <Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props} />} /> */}\n              {/* <Route exact path=\"/500\" name=\"Page 500\" render={props => <Page500 {...props} />} /> */}\n            {/* </Switch>\n          </React.Suspense> */}\n        </BrowserRouter>\n      </AuthProvider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const sygnet = ['160 160', `\r\n  <title>coreui logo</title>\r\n  <g>\r\n    <g style=\"fill:#fff;\">\r\n      <path d=\"M125,47.091,86,24.5743a12,12,0,0,0-12,0L35,47.091a12.0336,12.0336,0,0,0-6,10.3923v45.0334a12.0335,12.0335,0,0,0,6,10.3923l39,22.5166a11.9993,11.9993,0,0,0,12,0l39-22.5166a12.0335,12.0335,0,0,0,6-10.3923V57.4833A12.0336,12.0336,0,0,0,125,47.091Zm-2,55.4257a4,4,0,0,1-2,3.464L82,128.4974a4,4,0,0,1-4,0L39,105.9807a4,4,0,0,1-2-3.464V57.4833a4,4,0,0,1,2-3.4641L78,31.5025a4,4,0,0,1,4,0l39,22.5167a4,4,0,0,1,2,3.4641Z\"/>\r\n      <path d=\"M103.0216,93.0379h-2.866a4,4,0,0,0-1.9246.4935L80.95,103.0167,61,91.4981V68.5206L80.95,57.002l17.2894,9.455a4,4,0,0,0,1.9192.4905h2.8632a2,2,0,0,0,2-2V62.2357a2,2,0,0,0-1.04-1.7547L84.793,49.9854a8.0391,8.0391,0,0,0-7.8428.09L57,61.5929A8.0243,8.0243,0,0,0,53,68.5216v22.976a8,8,0,0,0,4,6.9283l19.95,11.5185a8.0422,8.0422,0,0,0,7.8433.0879l19.19-10.5311a2,2,0,0,0,1.0378-1.7534v-2.71A2,2,0,0,0,103.0216,93.0379Z\"/>\r\n    </g>\r\n  </g>\r\n`]\r\n","import { sygnet } from './sygnet'\r\nimport { logo } from './logo'\r\nimport { logoNegative } from './logo-negative'\r\n\r\nimport {\r\n  cibSkype,\r\n  cibFacebook,\r\n  cibTwitter,\r\n  cibLinkedin,\r\n  cibFlickr,\r\n  cibTumblr,\r\n  cibXing,\r\n  cibGithub,\r\n  cibStackoverflow,\r\n  cibYoutube,\r\n  cibDribbble,\r\n  cibInstagram,\r\n  cibPinterest,\r\n  cibVk,\r\n  cibYahoo,\r\n  cibBehance,\r\n  cibReddit,\r\n  cibVimeo,\r\n  cibCcMastercard,\r\n  cibCcVisa,\r\n  cibStripe,\r\n  cibPaypal,\r\n  cibGooglePay,\r\n  cibCcAmex\r\n} from '@coreui/icons'\r\nimport {\r\n  cifUs,\r\n  cifBr,\r\n  cifIn,\r\n  cifFr,\r\n  cifEs,\r\n  cifPl\r\n} from '@coreui/icons'\r\nimport {\r\n  cilAlignCenter,\r\n  cilAlignLeft,\r\n  cilAlignRight,\r\n  cilApplicationsSettings,\r\n  cilArrowRight,\r\n  cilArrowTop,\r\n  cilAsterisk,\r\n  cilBan,\r\n  cilBasket,\r\n  cilBell,\r\n  cilBold,\r\n  cilBookmark,\r\n  cilCalculator,\r\n  cilCalendar,\r\n  cilCloudDownload,\r\n  cilChartPie,\r\n  cilCheck,\r\n  cilChevronBottom,\r\n  cilChevronLeft,\r\n  cilChevronRight,\r\n  cilChevronTop,\r\n  cilCircle,\r\n  cilCheckCircle,\r\n  cilCode,\r\n  cilCommentSquare,\r\n  cilCreditCard,\r\n  cilCursor,\r\n  cilCursorMove,\r\n  cilDrop,\r\n  cilDollar,\r\n  cilEnvelopeClosed,\r\n  cilEnvelopeLetter,\r\n  cilEnvelopeOpen,\r\n  cilEuro,\r\n  cilGlobeAlt,\r\n  cilGrid,\r\n  cilFile,\r\n  cilFullscreen,\r\n  cilFullscreenExit,\r\n  cilGraph,\r\n  cilHome,\r\n  cilInbox,\r\n  cilIndentDecrease,\r\n  cilIndentIncrease,\r\n  cilInputPower,\r\n  cilItalic,\r\n  cilJustifyCenter,\r\n  cilJustifyLeft,\r\n  cilLaptop,\r\n  cilLayers,\r\n  cilLightbulb,\r\n  cilList,\r\n  cilListNumbered,\r\n  cilListRich,\r\n  cilLocationPin,\r\n  cilLockLocked,\r\n  cilMagnifyingGlass,\r\n  cilMap,\r\n  cilMoon,\r\n  cilNotes,\r\n  cilOptions,\r\n  cilPaperclip,\r\n  cilPaperPlane,\r\n  cilPencil,\r\n  cilPeople,\r\n  cilPhone,\r\n  cilPrint,\r\n  cilPuzzle,\r\n  cilSave,\r\n  cilScrubber,\r\n  cilSettings,\r\n  cilShare,\r\n  cilShareAll,\r\n  cilShareBoxed,\r\n  cilShieldAlt,\r\n  cilSpeech,\r\n  cilSpeedometer,\r\n  cilSpreadsheet,\r\n  cilStar,\r\n  cilSun,\r\n  cilTags,\r\n  cilTask,\r\n  cilTrash,\r\n  cilUnderline,\r\n  cilUser,\r\n  cilUserFemale,\r\n  cilUserFollow,\r\n  cilUserUnfollow,\r\n  cilX,\r\n  cilXCircle,\r\n  cilWarning\r\n} from '@coreui/icons'\r\n\r\nexport const icons = Object.assign({}, {\r\n  sygnet,\r\n  logo,\r\n  logoNegative\r\n}, {\r\n  cilAlignCenter,\r\n  cilAlignLeft,\r\n  cilAlignRight,\r\n  cilApplicationsSettings,\r\n  cilArrowRight,\r\n  cilArrowTop,\r\n  cilAsterisk,\r\n  cilBan,\r\n  cilBasket,\r\n  cilBell,\r\n  cilBold,\r\n  cilBookmark,\r\n  cilCalculator,\r\n  cilCalendar,\r\n  cilCloudDownload,\r\n  cilChartPie,\r\n  cilCheck,\r\n  cilChevronBottom,\r\n  cilChevronLeft,\r\n  cilChevronRight,\r\n  cilChevronTop,\r\n  cilCircle,\r\n  cilCheckCircle,\r\n  cilCode,\r\n  cilCommentSquare,\r\n  cilCreditCard,\r\n  cilCursor,\r\n  cilCursorMove,\r\n  cilDrop,\r\n  cilDollar,\r\n  cilEnvelopeClosed,\r\n  cilEnvelopeLetter,\r\n  cilEnvelopeOpen,\r\n  cilEuro,\r\n  cilGlobeAlt,\r\n  cilGrid,\r\n  cilFile,\r\n  cilFullscreen,\r\n  cilFullscreenExit,\r\n  cilGraph,\r\n  cilHome,\r\n  cilInbox,\r\n  cilIndentDecrease,\r\n  cilIndentIncrease,\r\n  cilInputPower,\r\n  cilItalic,\r\n  cilJustifyCenter,\r\n  cilJustifyLeft,\r\n  cilLaptop,\r\n  cilLayers,\r\n  cilLightbulb,\r\n  cilList,\r\n  cilListNumbered,\r\n  cilListRich,\r\n  cilLocationPin,\r\n  cilLockLocked,\r\n  cilMagnifyingGlass,\r\n  cilMap,\r\n  cilMoon,\r\n  cilNotes,\r\n  cilOptions,\r\n  cilPaperclip,\r\n  cilPaperPlane,\r\n  cilPencil,\r\n  cilPeople,\r\n  cilPhone,\r\n  cilPrint,\r\n  cilPuzzle,\r\n  cilSave,\r\n  cilScrubber,\r\n  cilSettings,\r\n  cilShare,\r\n  cilShareAll,\r\n  cilShareBoxed,\r\n  cilShieldAlt,\r\n  cilSpeech,\r\n  cilSpeedometer,\r\n  cilSpreadsheet,\r\n  cilStar,\r\n  cilSun,\r\n  cilTags,\r\n  cilTask,\r\n  cilTrash,\r\n  cilUnderline,\r\n  cilUser,\r\n  cilUserFemale,\r\n  cilUserFollow,\r\n  cilUserUnfollow,\r\n  cilX,\r\n  cilXCircle,\r\n  cilWarning\r\n}, {\r\n  cifUs,\r\n  cifBr,\r\n  cifIn,\r\n  cifFr,\r\n  cifEs,\r\n  cifPl\r\n}, {\r\n  cibSkype,\r\n  cibFacebook,\r\n  cibTwitter,\r\n  cibLinkedin,\r\n  cibFlickr,\r\n  cibTumblr,\r\n  cibXing,\r\n  cibGithub,\r\n  cibStackoverflow,\r\n  cibYoutube,\r\n  cibDribbble,\r\n  cibInstagram,\r\n  cibPinterest,\r\n  cibVk,\r\n  cibYahoo,\r\n  cibBehance,\r\n  cibReddit,\r\n  cibVimeo,\r\n  cibCcMastercard,\r\n  cibCcVisa,\r\n  cibStripe,\r\n  cibPaypal,\r\n  cibGooglePay,\r\n  cibCcAmex\r\n})\r\n","export const logo = ['608 134', `\r\n  <title>Horizon</title>\r\n`]\r\n","export const logoNegative = ['608 134', `\r\n<img src=\"../horizon/HLogoW.png\" />\r\n`]\r\n","import { createStore } from 'redux'\r\n\r\nconst initialState = {\r\n  sidebarShow: 'responsive'\r\n}\r\n\r\nconst changeState = (state = initialState, { type, ...rest }) => {\r\n  switch (type) {\r\n    case 'set':\r\n      return {...state, ...rest }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst store = createStore(changeState)\r\nexport default store","import 'react-app-polyfill/ie11'; // For IE 11 support\r\nimport 'react-app-polyfill/stable';\r\nimport 'core-js';\r\nimport './polyfill'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { icons } from './assets/icons'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\n\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\n\r\nReact.icons = icons\r\n\r\nReactDOM.render(\r\n  <Auth0Provider\r\n    domain=\"dev-9v2irmh0.us.auth0.com\"\r\n    clientId=\"Ue5bRivqStA85NNiluSxrTstNCdtPoWm\"\r\n    redirectUri=\"admin.horizon-lenses.com/hero\"\r\n  >\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Auth0Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n// Apollo #1\r\n// import ApolloClient from \"apollo-boost\";\r\n// import { ApolloProvider } from \"react-apollo\";\r\n\r\n// // apollo client setup\r\n// const client = new ApolloClient({\r\n//   uri: \"http://localhost:3000/___graphql\"\r\n// })\r\n\r\n// Apollo #2\r\n// import {\r\n//   ApolloClient,\r\n//   InMemoryCache,\r\n//   ApolloProvider,\r\n//   HttpLink,\r\n//   from,\r\n// } from \"@apollo/client\";\r\n// import { onError } from \"@apollo/client/link/error\";\r\n\r\n// const errorLink = onError(({ graphqlErrors, networkError }) => {\r\n//   if (graphqlErrors) {\r\n//     graphqlErrors.map(({ message, location, path }) => {\r\n//       alert(`Graphql error ${message}`);\r\n//     });\r\n//   }\r\n// });\r\n\r\n// const link = from([\r\n//   errorLink,\r\n//   new HttpLink({ uri: \"http://localhost:3000/\" }),\r\n// ]);\r\n\r\n// const client = new ApolloClient({\r\n//   cache: new InMemoryCache(),\r\n//   link: link,\r\n// });\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { getColor } from '@coreui/utils'\r\nimport { CChartBar } from '@coreui/react-chartjs'\r\n\r\nconst ChartBarSimple = props => {\r\n\r\n  const {\r\n    backgroundColor,\r\n    pointHoverBackgroundColor,\r\n    dataPoints,\r\n    label,\r\n    pointed,\r\n    ...attributes\r\n  } = props\r\n\r\n  const defaultDatasets = (()=>{\r\n    return [\r\n      {\r\n        data: dataPoints,\r\n        backgroundColor: getColor(backgroundColor),\r\n        pointHoverBackgroundColor: getColor(pointHoverBackgroundColor),\r\n        label: label,\r\n        barPercentage: 0.5,\r\n        categoryPercentage: 1\r\n      }\r\n    ]\r\n  })()\r\n\r\n  const defaultOptions = (()=>{\r\n    return {\r\n      maintainAspectRatio: false,\r\n      legend: {\r\n        display: false\r\n      },\r\n      scales: {\r\n        xAxes: [{\r\n          display: false\r\n        }],\r\n        yAxes: [{\r\n          display: false\r\n        }]\r\n      }\r\n    }\r\n  })()\r\n\r\n  // render\r\n  return (\r\n    <CChartBar\r\n      {...attributes}\r\n      datasets={defaultDatasets}\r\n      options={defaultOptions}\r\n      labels={label}\r\n    />\r\n  )\r\n}\r\n\r\nChartBarSimple.propTypes = {\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string,\r\n  //\r\n  backgroundColor: PropTypes.string,\r\n  pointHoverBackgroundColor: PropTypes.string,\r\n  dataPoints: PropTypes.array,\r\n  label: PropTypes.string,\r\n  pointed: PropTypes.bool\r\n};\r\n\r\nChartBarSimple.defaultProps = {\r\n  backgroundColor: 'rgba(0,0,0,.2)',\r\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\r\n  label: 'Sales'\r\n};\r\n\r\nexport default ChartBarSimple\r\n"],"sourceRoot":""}