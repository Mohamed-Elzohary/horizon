{"version":3,"sources":["firebase/firebase.js","views/UploadImg/UploadImg.jsx","views/Gallery/Gallery.jsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","UploadImg","useState","image","setImage","url","setUrl","progress","setProgress","uploaded","setUploaded","uploadBtnStateDisable","setUploadBtnStateDisable","copied","setCopied","visible","setVisible","className","onClick","show","style","width","color","duration","value","max","type","onChange","e","target","files","newDate","Date","date","getDate","month","getMonth","year","getFullYear","time","getTime","ref","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","img_url","axios","post","SERVER_URI","res","disabled","navigator","clipboard","writeText","src","alt","process","Gallery","props","getGallery","get","response","gallery","data","lista","map","img","push","setState","imgs","state","catch","copyToCLip","id","this","listImgs","content","placement","thumbnail","_id","autohide","fade","header","dismissible","fixedToasts","edited","xs","Component"],"mappings":"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","file":"static/js/21.2d2825e7.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCY6qtpw2i46AkPKvTeDy5iAVyaxJhoLoI\",\r\n  authDomain: \"horizon-28ad8.firebaseapp.com\",\r\n  projectId: \"horizon-28ad8\",\r\n  storageBucket: \"horizon-28ad8.appspot.com\",\r\n  messagingSenderId: \"533324209164\",\r\n  appId: \"1:533324209164:web:39aadbbdd96501a872a229\",\r\n  measurementId: \"G-GLCDCLKPEN\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst storage = firebase.storage();\r\n\r\nexport { storage, firebase as default }","import React, { useState } from \"react\";\nimport { storage } from \"../../firebase/firebase\";\n\nimport {\n  CCollapse,\n  CCard,\n  CCardBody,\n  CCardText,\n  CCardTitle,\n  CListGroupItem,\n  CButton,\n  CAlert,\n  CProgress,\n  CProgressBar\n} from \"@coreui/react\";\n\nimport axios from \"axios\";\nimport FlashMessage from 'react-flash-message'\n\nimport SERVER_URI from \"../../reusable/api\";\n\nconst UploadImg = () => {\n  const [image, setImage] = useState(null);\n  const [url, setUrl] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n  const [uploaded, setUploaded] = useState('false')\n  const [uploadBtnStateDisable, setUploadBtnStateDisable] = useState(true)\n  const [copied, setCopied] = useState('false')\n  const [visible, setVisible] = useState(false)\n\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n      setUploadBtnStateDisable(false)\n    }\n  };\n\n  const handleUpload = () => {\n    let newDate = new Date()\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n    let time = new Date().getTime();\n\n    let timeNow = `${date}${month}${year}T${time}`;\n\n    setUploaded('false');\n\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n\n    uploadTask.on(\n      \"state_changed\",\n      snapshot => {\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        setProgress(progress);\n      },\n\n      error => {\n        console.log(error);\n      },\n\n      () => {\n        storage\n          .ref(\"images\")\n          .child(image.name)\n          .getDownloadURL()\n          .then(url => {\n            setUrl(url);\n            console.log(\"image: \", image);\n            console.log(\"URL: \" + url);\n\n            const img_url = {\n              url: url\n            };\n\n            axios.post(`${SERVER_URI}/api/postImgToGallery`, img_url)\n              .then(res => console.log(res));\n\n            setUploaded('true')\n            setUploadBtnStateDisable(true)\n\n            // window.location = `${ADMIN_URI}/#/landing/progDesigns/`;\n          });\n      }\n    );\n  };\n\n  const copyToCLip = () => {\n    setCopied('false')\n    navigator.clipboard.writeText(url)\n    console.log(url);\n    setCopied('true')\n  }\n\n  const toggleUpload = () => {\n    setVisible(!visible);\n  }\n\n  return (\n    <div>\n      <CButton className='btn-primary' onClick={toggleUpload}>Upload Image</CButton>\n      <br /><br />\n      <CCollapse show={visible}>\n        <CCard className=\"mt-3\">\n          <CCardBody>\n\n            <CCard style={{ width: '50vw' }}>\n              {\n                (uploaded === 'true') ?\n                  <div>\n                    <CAlert\n                      width=\"1\"\n                      color=\"success\"\n                    >\n                      <strong>Uploaded</strong> Successfully...\n              </CAlert>\n\n                    <FlashMessage duration={3000}>\n                      Uploaded Successfully...\n            </FlashMessage>\n                  </div>\n                  :\n                  <p></p>\n              }\n              <CCardBody>\n                <CCardTitle>Upload Image</CCardTitle>\n\n                <CListGroupItem>\n                  <CProgress className=\"mb-3\">\n                    <CProgressBar value={progress}></CProgressBar>\n                  </CProgress>\n                  <progress value={progress} max=\"100\" />\n                </CListGroupItem>\n\n\n                <CListGroupItem>\n                  <input type=\"file\" onChange={handleChange} />\n                  <CButton  color=\"secondary\" onClick={handleUpload} disabled={uploadBtnStateDisable}>Upload</CButton>\n                  <CCardText>\n                    <strong> Image URL: </strong>\n                    {url}\n                  </CCardText>\n                </CListGroupItem>\n\n                <CListGroupItem>\n                  {\n                    (copied === 'true') ?\n                      <div>\n                        <FlashMessage duration={2000}>\n                          Copied To Clipboard...\n            </FlashMessage>\n                      </div>\n                      :\n                      <p></p>\n                  }\n                  <CButton color=\"secondary\" onClick={copyToCLip}>Copy Image URL to Clipboard</CButton>\n                </CListGroupItem>\n              </CCardBody>\n            </CCard>\n\n            <img className=\"uploadedImg\" src={url || \"http://via.placeholder.com/300\"} alt=\"firebase-image\" />\n\n          </CCardBody>\n        </CCard>\n      </CCollapse>\n    </div>\n  );\n};\n\nexport default UploadImg\n","import React, { Component } from \"react\";\n\nimport {\n  CCol,\n  CRow,\n  CAlert,\n  CImg,\n  CTooltip,\n  CToaster,\n  CToast,\n} from \"@coreui/react\";\n\nimport UploadImg from \"../UploadImg/UploadImg\";\n\nimport axios from \"axios\";\nimport FlashMessage from \"react-flash-message\";\n\nvar SERVER_URI = \"http://localhost:5000\";\n\nif (process.env.NODE_ENV === \"development\") {\n  SERVER_URI = process.env.REACT_APP_DEV_SERVER;\n}\n\nif (process.env.NODE_ENV === \"production\") {\n  SERVER_URI = process.env.REACT_APP_PROD_SERVER;\n}\n\nclass Gallery extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      url: \"...\",\n      copied: false,\n      imgs: [],\n    };\n  }\n\n  getGallery = () => {\n    axios\n      .get(`${SERVER_URI}/api/gallery`)\n      .then((response) => {\n        const gallery = response.data;\n        let lista = [];\n        console.log(gallery[0]);\n\n        gallery.map((img) => {\n          lista.push(img);\n          return lista;\n        });\n\n        this.setState({\n          imgs: lista,\n        });\n\n        console.log(this.state.imgs);\n      })\n\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  copyToCLip = (e) => {\n    this.setState({\n      copied: true,\n    });\n\n    const url = e.target.id;\n    navigator.clipboard.writeText(url);\n\n    console.log(\"====================================\");\n    console.log(\"URL: \", url);\n    console.log(\"copied: \", this.state.copied);\n    console.log(\"====================================\");\n  };\n\n  componentDidMount() {\n    this.getGallery();\n  }\n\n  render() {\n    const listImgs = this.state.imgs.map((img) => (\n      <div>\n        <CTooltip content=\"Click to Copy URL\" placement=\"top\">\n          <CImg\n            key={img._id}\n            id={img.img_url}\n            src={img.img_url}\n            className=\"img-thumbnail\"\n            thumbnail\n            width=\"30%\"\n            onClick={this.copyToCLip}\n          />\n        </CTooltip>\n        <hr />\n      </div>\n    ));\n    return (\n      <CRow>\n        {this.state.copied === true ? (\n          <div>\n            <FlashMessage duration={3000}></FlashMessage>\n            <CToaster>\n              <CToast\n                key={this.state.fixedToasts}\n                show={true}\n                autohide={1000}\n                fade={true}\n                header=\"CToast fixed component\"\n              >\n                <CAlert width=\"1\" color=\"success\" dismissible={`${true}`}>\n                  <strong>Copied</strong> Successfully...\n                </CAlert>\n              </CToast>\n            </CToaster>\n          </div>\n        ) : (\n          <p></p>\n        )}\n\n        {this.state.edited === true ? (\n          <div>\n            <FlashMessage duration={3000}>\n              <CAlert width=\"1\" color=\"success\" dismissible={true}>\n                <strong>Uploaded</strong> Successfully...\n              </CAlert>\n            </FlashMessage>\n          </div>\n        ) : (\n          <p></p>\n        )}\n        <CCol xs=\"12\">{listImgs}</CCol>\n\n        <UploadImg />\n      </CRow>\n    );\n  }\n}\n\nexport default Gallery;\n"],"sourceRoot":""}