{"ast":null,"code":"import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setLocale } from 'redux/actions/app';\nimport { useRouter } from 'next/router';\nimport { get, setItem } from 'lib/web';\nimport { LOCALE_CONFIG } from 'lib/constants';\nimport useForceUpdate from 'hooks/useForceUpdate';\nimport enUS from 'public/lang/en-US.json';\nconst messages = {\n  'en-US': enUS\n};\nexport default function useLocale() {\n  const locale = useSelector(state => state.app.locale);\n  const dispatch = useDispatch();\n  const {\n    basePath\n  } = useRouter();\n  const forceUpdate = useForceUpdate();\n\n  async function loadMessages(locale) {\n    const {\n      ok,\n      data\n    } = await get(`${basePath}/lang/${locale}.json`);\n\n    if (ok) {\n      messages[locale] = data;\n    }\n  }\n\n  async function saveLocale(value) {\n    if (!messages[value]) {\n      await loadMessages(value);\n    }\n\n    setItem(LOCALE_CONFIG, value);\n\n    if (locale !== value) {\n      dispatch(setLocale(value));\n    } else {\n      forceUpdate();\n    }\n  }\n\n  useEffect(() => {\n    if (!messages[locale]) {\n      saveLocale(locale);\n    }\n  }, [locale]);\n  return {\n    locale,\n    saveLocale,\n    messages\n  };\n}","map":null,"metadata":{},"sourceType":"module"}