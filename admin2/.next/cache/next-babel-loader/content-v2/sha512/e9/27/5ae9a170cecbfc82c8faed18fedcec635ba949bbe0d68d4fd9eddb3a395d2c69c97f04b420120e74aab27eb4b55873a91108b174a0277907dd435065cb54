{"ast":null,"code":"import _regeneratorRuntime from \"D:/horizon/admin2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/horizon/admin2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setLocale } from 'redux/actions/app';\nimport { useRouter } from 'next/router';\nimport { get, setItem } from 'lib/web';\nimport { LOCALE_CONFIG } from 'lib/constants';\nimport useForceUpdate from 'hooks/useForceUpdate';\nimport enUS from 'public/lang/en-US.json';\nvar messages = {\n  'en-US': enUS\n};\nexport default function useLocale() {\n  var locale = useSelector(function (state) {\n    return state.app.locale;\n  });\n  var dispatch = useDispatch();\n\n  var _useRouter = useRouter(),\n      basePath = _useRouter.basePath;\n\n  var forceUpdate = useForceUpdate();\n\n  function loadMessages(_x) {\n    return _loadMessages.apply(this, arguments);\n  }\n\n  function _loadMessages() {\n    _loadMessages = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(locale) {\n      var _yield$get, ok, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return get(\"\".concat(basePath, \"/lang/\").concat(locale, \".json\"));\n\n            case 2:\n              _yield$get = _context.sent;\n              ok = _yield$get.ok;\n              data = _yield$get.data;\n\n              if (ok) {\n                messages[locale] = data;\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _loadMessages.apply(this, arguments);\n  }\n\n  function saveLocale(_x2) {\n    return _saveLocale.apply(this, arguments);\n  }\n\n  function _saveLocale() {\n    _saveLocale = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(value) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (messages[value]) {\n                _context2.next = 3;\n                break;\n              }\n\n              _context2.next = 3;\n              return loadMessages(value);\n\n            case 3:\n              setItem(LOCALE_CONFIG, value);\n\n              if (locale !== value) {\n                dispatch(setLocale(value));\n              } else {\n                forceUpdate();\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _saveLocale.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    if (!messages[locale]) {\n      saveLocale(locale);\n    }\n  }, [locale]);\n  return {\n    locale: locale,\n    saveLocale: saveLocale,\n    messages: messages\n  };\n}","map":null,"metadata":{},"sourceType":"module"}