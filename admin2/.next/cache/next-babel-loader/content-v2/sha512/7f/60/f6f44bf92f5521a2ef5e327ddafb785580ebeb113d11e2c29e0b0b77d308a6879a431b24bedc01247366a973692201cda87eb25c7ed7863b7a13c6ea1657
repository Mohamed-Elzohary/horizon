{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport useLocale from 'hooks/useLocale';\nimport useFetch from 'hooks/useFetch';\nimport Button from 'components/common/Button';\nimport PageHeader from 'components/layout/PageHeader';\nimport Toast from 'components/common/Toast';\nimport Pen from 'assets/pen.svg';\nimport EmptyPlaceholder from 'components/common/EmptyPlaceholder';\nimport Modal from 'components/common/Modal';\nimport CSectionForm from './CSectionForm';\nimport SERVER_URI from '.server.env';\nimport '@fontsource/inter/400.css';\nimport '@fontsource/inter/600.css';\n\nconst Intl = ({\n  children\n}) => {\n  const {\n    locale,\n    messages\n  } = useLocale();\n\n  const Wrapper = ({\n    children\n  }) => /*#__PURE__*/_jsx(\"span\", {\n    className: locale,\n    children: children\n  });\n\n  return /*#__PURE__*/_jsx(IntlProvider, {\n    locale: locale,\n    messages: messages[locale],\n    textComponent: Wrapper,\n    children: children\n  });\n};\n\nexport default function CSection({\n  sectionHeader,\n  sectionHeaderID,\n  formFields,\n  formFieldsType,\n  init_formFieldsValues,\n  getLink,\n  postLink\n}) {\n  const {\n    0: editSection,\n    1: setEditSection\n  } = useState();\n  const {\n    0: sectionValues,\n    1: setSectionValues\n  } = useState();\n  const {\n    0: message,\n    1: setMessage\n  } = useState('...');\n  const {\n    0: saved,\n    1: setSaved\n  } = useState(0);\n  const {\n    data\n  } = useFetch(getLink, {\n    onDataLoad: data => {\n      console.log('Data: ', data.section_content);\n      setSectionValues(data);\n    }\n  }, [saved]);\n\n  function handleSave() {\n    setSaved(state => state + 1);\n    setMessage( /*#__PURE__*/_jsx(FormattedMessage, {\n      id: \"message.save-success\",\n      defaultMessage: \"Saved successfully.\"\n    }));\n    handleClose();\n  }\n\n  function handleClose() {\n    setEditSection(null);\n  }\n\n  if (!data) {\n    return null;\n  }\n\n  const empty = /*#__PURE__*/_jsx(EmptyPlaceholder, {\n    msg: /*#__PURE__*/_jsx(FormattedMessage, {\n      id: \"message.no-websites-configured\",\n      defaultMessage: \"You don't have any websites configured.\"\n    })\n  });\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(PageHeader, {\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsx(FormattedMessage, {\n          id: `label.${sectionHeaderID}`,\n          defaultMessage: `${sectionHeader}`\n        })\n      }), /*#__PURE__*/_jsx(Button, {\n        icon: /*#__PURE__*/_jsx(Pen, {}),\n        size: \"small\",\n        onClick: () => editSection ? setEditSection(false) : setEditSection(true),\n        children: /*#__PURE__*/_jsx(FormattedMessage, {\n          id: \"label.edit\",\n          defaultMessage: \"Edit\"\n        })\n      })]\n    }), editSection && /*#__PURE__*/_jsx(\"div\", {\n      children: /*#__PURE__*/_jsx(CSectionForm, {\n        formFields: formFields,\n        formFieldsType: formFieldsType,\n        initValues: init_formFieldsValues,\n        values: sectionValues,\n        postLink: postLink,\n        onSave: handleSave,\n        onClose: handleClose\n      })\n    }), message && /*#__PURE__*/_jsx(Toast, {\n      message: message,\n      onClose: () => setMessage(null)\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}