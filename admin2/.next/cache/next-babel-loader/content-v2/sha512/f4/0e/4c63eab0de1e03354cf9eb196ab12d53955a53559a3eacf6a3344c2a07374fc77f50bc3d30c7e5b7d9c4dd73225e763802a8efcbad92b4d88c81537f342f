{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport useLocale from 'hooks/useLocale';\nimport useFetch from 'hooks/useFetch';\nimport Button from 'components/common/Button';\nimport PageHeader from 'components/layout/PageHeader';\nimport Toast from 'components/common/Toast';\nimport Pen from 'assets/pen.svg';\nimport EmptyPlaceholder from 'components/common/EmptyPlaceholder';\nimport Modal from 'components/common/Modal';\nimport CSectionForm from './CSectionForm';\nimport SERVER_URI from '.server.env';\nimport '@fontsource/inter/400.css';\nimport '@fontsource/inter/600.css';\n\nvar Intl = function Intl(_ref) {\n  var children = _ref.children;\n\n  var _useLocale = useLocale(),\n      locale = _useLocale.locale,\n      messages = _useLocale.messages;\n\n  var Wrapper = function Wrapper(_ref2) {\n    var children = _ref2.children;\n    return /*#__PURE__*/_jsx(\"span\", {\n      className: locale,\n      children: children\n    });\n  };\n\n  return /*#__PURE__*/_jsx(IntlProvider, {\n    locale: locale,\n    messages: messages[locale],\n    textComponent: Wrapper,\n    children: children\n  });\n};\n\nexport default function CSection(_ref3) {\n  var sectionHeader = _ref3.sectionHeader,\n      sectionHeaderID = _ref3.sectionHeaderID,\n      formFields = _ref3.formFields,\n      formFieldsType = _ref3.formFieldsType,\n      init_formFieldsValues = _ref3.init_formFieldsValues,\n      getLink = _ref3.getLink,\n      postLink = _ref3.postLink;\n\n  var _useState = useState(),\n      editSection = _useState[0],\n      setEditSection = _useState[1];\n\n  var _useState2 = useState(),\n      sectionValues = _useState2[0],\n      setSectionValues = _useState2[1];\n\n  var _useState3 = useState('...'),\n      message = _useState3[0],\n      setMessage = _useState3[1];\n\n  var _useState4 = useState(0),\n      saved = _useState4[0],\n      setSaved = _useState4[1];\n\n  var _useFetch = useFetch(getLink, {\n    onDataLoad: function onDataLoad(data) {\n      console.log('Data: ', data.section_content);\n      setSectionValues(data);\n    }\n  }, [saved]),\n      data = _useFetch.data;\n\n  function handleSave() {\n    setSaved(function (state) {\n      return state + 1;\n    });\n    setMessage( /*#__PURE__*/_jsx(FormattedMessage, {\n      id: \"message.save-success\",\n      defaultMessage: \"Saved successfully.\"\n    }));\n    handleClose();\n  }\n\n  function handleClose() {\n    setEditSection(null);\n  }\n\n  if (!data) {\n    return null;\n  }\n\n  var empty = /*#__PURE__*/_jsx(EmptyPlaceholder, {\n    msg: /*#__PURE__*/_jsx(FormattedMessage, {\n      id: \"message.no-websites-configured\",\n      defaultMessage: \"You don't have any websites configured.\"\n    })\n  });\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(PageHeader, {\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsx(FormattedMessage, {\n          id: \"label.\".concat(sectionHeaderID),\n          defaultMessage: \"\".concat(sectionHeader)\n        })\n      }), /*#__PURE__*/_jsx(Button, {\n        icon: /*#__PURE__*/_jsx(Pen, {}),\n        size: \"small\",\n        onClick: function onClick() {\n          return editSection ? setEditSection(false) : setEditSection(true);\n        },\n        children: /*#__PURE__*/_jsx(FormattedMessage, {\n          id: \"label.edit\",\n          defaultMessage: \"Edit\"\n        })\n      })]\n    }), editSection && /*#__PURE__*/_jsx(\"div\", {\n      children: /*#__PURE__*/_jsx(CSectionForm, {\n        formFields: formFields,\n        formFieldsType: formFieldsType,\n        initValues: init_formFieldsValues,\n        values: sectionValues,\n        postLink: postLink,\n        onSave: handleSave,\n        onClose: handleClose\n      })\n    }), message && /*#__PURE__*/_jsx(Toast, {\n      message: message,\n      onClose: function onClose() {\n        return setMessage(null);\n      }\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}